Fichier: public\js\latex-editor.js
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\public\js\latex-editor.js
-----
// latex-editor.js - Fichier à inclure dans votre page d'édition de CV
// Dernière mise à jour: 2025-05-10 14:27:38
// Auteur: Mohamed-abidi-95

document.addEventListener('DOMContentLoaded', function() {
    // Configuration pour la soumission AJAX
    const latexForm = document.getElementById('latex-form');
    const latexInput = document.getElementById('latex-input');
    const latexPreviewBtn = document.getElementById('preview-button');
    const pdfViewer = document.getElementById('pdf-viewer');
    const loadingSpinner = document.getElementById('loading-spinner');
    const errorContainer = document.getElementById('error-container');
    const downloadBtn = document.getElementById('download-button');

    // Fonction pour afficher les erreurs
// Fonctions pour gérer les erreurs
    function showError(message) {
        errorMessage.innerHTML = message.replace(/\n/g, '<br>');
        errorContainer.style.display = 'block';

        // Scroll to error message
        errorContainer.scrollIntoView({ behavior: 'smooth', block: 'center' });

        setTimeout(() => {
            hideError();
        }, 8000); // Augmenté à 8 secondes pour les erreurs LaTex qui peuvent être longues
    }
    // Fonction pour afficher les messages de succès
    function showSuccess(message) {
        if (errorContainer) {
            errorContainer.textContent = message;
            errorContainer.className = 'alert alert-success';
            errorContainer.style.display = 'block';
            setTimeout(() => {
                errorContainer.style.display = 'none';
                errorContainer.className = 'alert alert-danger';
            }, 3000);
        }
    }

    // Variable pour stocker l'URL du PDF généré
    let currentPdfUrl = null;

    // Activation du bouton de téléchargement
    function enableDownloadButton(url, filename) {
        if (downloadBtn) {
            downloadBtn.disabled = false;
            downloadBtn.href = url;
            downloadBtn.setAttribute('download', filename || 'document.pdf');
            currentPdfUrl = url;
        }
    }

    // Désactivation du bouton de téléchargement
    function disableDownloadButton() {
        if (downloadBtn) {
            downloadBtn.disabled = true;
            downloadBtn.removeAttribute('href');
            downloadBtn.removeAttribute('download');
            currentPdfUrl = null;
        }
    }

    // Gestion de la prévisualisation
    if (latexPreviewBtn && latexInput) {
        latexPreviewBtn.addEventListener('click', function(e) {
            e.preventDefault();

            const latexCode = latexInput.value.trim();
            if (!latexCode) {
                showError('Veuillez entrer du code LaTeX.');
                return;
            }

            if (loadingSpinner) loadingSpinner.style.display = 'block';
            if (pdfViewer) pdfViewer.style.display = 'none';
            if (errorContainer) errorContainer.style.display = 'none';

            // Désactiver le bouton pendant le chargement
            latexPreviewBtn.disabled = true;
            disableDownloadButton();

            // Effectuer la requête AJAX
            fetch('/latex/preview', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({ latex: latexCode })
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Erreur serveur: ' + response.status);
                    }
                    return response.json();
                })
                .then(data => {
                    if (loadingSpinner) loadingSpinner.style.display = 'none';
                    // Réactiver le bouton après le chargement
                    latexPreviewBtn.disabled = false;

                    if (data.success) {
                        if (pdfViewer) {
                            // Si on reçoit une URL pour le PDF
                            if (data.pdfUrl) {
                                pdfViewer.src = data.pdfUrl;
                                pdfViewer.style.display = 'block';

                                // Activer le bouton de téléchargement
                                enableDownloadButton(data.pdfUrl, data.filename);
                                showSuccess('PDF généré avec succès !');
                            } else {
                                showError('Le serveur n\'a pas retourné d\'URL pour le PDF.');
                            }
                        }
                    } else {
                        showError('Erreur: ' + (data.error || 'Échec de la génération du PDF'));
                    }
                })
                .catch(error => {
                    if (loadingSpinner) loadingSpinner.style.display = 'none';
                    latexPreviewBtn.disabled = false;
                    showError('Erreur: ' + error.message);
                    console.error('Erreur lors de la génération du PDF:', error);
                });
        });
    }

    // Ajouter un bouton LaTeX à l'éditeur de CV
    const addLatexButton = document.getElementById('add-latex-button');
    if (addLatexButton) {
        addLatexButton.addEventListener('click', function(e) {
            e.preventDefault();
            // Ouvrir l'éditeur LaTeX dans une nouvelle fenêtre
            window.open('/latex', 'LaTeXEditor', 'width=800,height=600');
        });
    }

    // Vérifier s'il y a une formule LaTeX stockée dans localStorage
    const latexFormula = localStorage.getItem('latex_formula');
    if (latexFormula) {
        insertLatexFormula(latexFormula);
        localStorage.removeItem('latex_formula');
    }

    // Écouter les messages de la fenêtre popup
    window.addEventListener('message', function(event) {
        // Vérifier l'origine pour la sécurité - peut être plus permissif pour usage local
        if (event.data && event.data.type === 'latex_insert') {
            insertLatexFormula(event.data.latex);
            showSuccess('Formule LaTeX insérée avec succès !');
        }
    });

    // Fonction pour insérer la formule LaTeX dans l'éditeur
    function insertLatexFormula(latex) {
        // Trouver l'éditeur (vous devrez adapter ceci à votre structure HTML)
        const editor = document.querySelector('#cv-content') ||
            document.querySelector('[contenteditable="true"]') ||
            document.querySelector('#cv-editor');

        if (editor) {
            // Créer l'élément pour la formule
            const formulaSpan = document.createElement('span');
            formulaSpan.className = 'latex-formula';
            formulaSpan.setAttribute('data-latex', latex);
            formulaSpan.innerHTML = '$$' + latex + '$$';

            // Ajouter au contenu de l'éditeur
            if (editor.isContentEditable) {
                // Pour un div contenteditable
                const selection = window.getSelection();

                // Si une sélection existe dans l'éditeur
                if (selection.rangeCount > 0) {
                    const range = selection.getRangeAt(0);
                    if (editor.contains(range.commonAncestorContainer)) {
                        range.deleteContents();
                        range.insertNode(formulaSpan);
                        // Déplacer le curseur après la formule
                        range.setStartAfter(formulaSpan);
                        range.setEndAfter(formulaSpan);
                        selection.removeAllRanges();
                        selection.addRange(range);
                    } else {
                        editor.appendChild(formulaSpan);
                    }
                } else {
                    editor.appendChild(formulaSpan);
                }
            } else if (editor.tagName === 'TEXTAREA') {
                // Pour un textarea
                const pos = editor.selectionStart || 0;
                editor.value = editor.value.substring(0, pos) +
                    '$$' + latex + '$$' +
                    editor.value.substring(editor.selectionEnd || pos);

                // Mettre à jour la position du curseur
                const newPos = pos + 2 + latex.length + 2;
                editor.selectionStart = newPos;
                editor.selectionEnd = newPos;
                editor.focus();
            }

            // Rendre avec MathJax si disponible
            if (window.MathJax) {
                try {
                    if (typeof window.MathJax.typesetPromise === 'function') {
                        window.MathJax.typesetPromise([formulaSpan]).catch(function(err) {
                            console.error('Erreur MathJax:', err);
                        });
                    } else if (window.MathJax.Hub) {
                        // Compatibilité avec d'anciennes versions de MathJax
                        window.MathJax.Hub.Queue(['Typeset', window.MathJax.Hub, formulaSpan]);
                    }
                } catch (e) {
                    console.error('Erreur lors du rendu MathJax:', e);
                }
            } else {
                console.warn('MathJax non disponible');
            }

            console.log('LaTeX formule insérée:', latex);
            return true;
        } else {
            console.error('Aucun éditeur trouvé pour insérer la formule LaTeX');
            return false;
        }
    }

    // Intercepter la soumission du formulaire pour soumission AJAX
    if (latexForm) {
        latexForm.addEventListener('submit', function(e) {
            // Ne pas intercepter si c'est un téléchargement et qu'on a déjà une URL de PDF
            if (e.submitter && e.submitter.id === 'download-button' && currentPdfUrl) {
                return; // Laisser la soumission normale se poursuivre
            }

            e.preventDefault(); // Empêcher la soumission normale du formulaire

            if (latexPreviewBtn) {
                latexPreviewBtn.click(); // Déclencher la prévisualisation AJAX
            }
        });
    }

    // Ajouter un gestionnaire pour les erreurs de PDF
    if (pdfViewer) {
        pdfViewer.addEventListener('error', function(e) {
            showError('Erreur lors du chargement du PDF. Veuillez réessayer.');
            console.error('Erreur de chargement PDF:', e);
        });
    }
});
==================================================

Fichier: config/routes.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\routes.yaml
-----
# config/routes.yaml

# Routes d'authentification
app_login:
    path: /login
    controller: App\Controller\SecurityController::login
    methods: [GET, POST]

app_login_check:
    path: /login_check
    methods: [POST]

app_logout:
    path: /logout
    controller: App\Controller\SecurityController::logout
    methods: [GET]

app_register:
    path: /register
    controller: App\Controller\SecurityController::register
    methods: [GET, POST]

app_forgot_password:
    path: /forgot-password
    controller: App\Controller\SecurityController::forgotPassword
    methods: [GET]

app_forgot_password_request:
    path: /forgot-password-request
    controller: App\Controller\SecurityController::forgotPasswordRequest
    methods: [POST]

app_verify_email:
    path: /verify/email
    controller: App\Controller\SecurityController::verifyUserEmail
    methods: [GET]

# Routes de base
app_welcome:
    path: /
    controller: App\Controller\CVGeneratorController::welcome
    methods: [GET]

# Routes du générateur de CV
app_cv_generator:
    path: /cv
    controller: App\Controller\CVGeneratorController::index
    methods: [GET]

app_cv_builder:
    path: /cv-builder
    controller: App\Controller\CVGeneratorController::builder
    methods: [GET]

app_cv_content_editor:
    path: /cv-content-editor
    controller: App\Controller\CVGeneratorController::contentEditor
    methods: [GET]

app_cv_generate:
    path: /cv-generator/generate
    controller: App\Controller\CVGeneratorController::generate
    methods: [POST]

app_cv_test_pdf:
    path: /cv-generator/test-pdf
    controller: App\Controller\CVGeneratorController::testPdf
    methods: [GET]

app_cv_debug_form:
    path: /cv-generator/debug-form
    controller: App\Controller\CVGeneratorController::debugForm
    methods: [POST]

app_cv_template_debug:
    path: /cv-template-debug
    controller: App\Controller\CVGeneratorController::templateDebug
    methods: [GET]

app_cv_template_test:
    path: /cv-template-test/{template}
    controller: App\Controller\CVGeneratorController::templateTest
    methods: [GET]

app_cv_template_elegant:
    path: /cv-template-elegant
    controller: App\Controller\CVGeneratorController::elegantTemplate
    methods: [GET]

app_test_latex_editor:
    path: /test-latex-editor
    controller: App\Controller\CVGeneratorController::testLatexEditor
    methods: [GET]

# Routes LaTeX - Utilisez le contrôleur LatexController
app_latex:
    path: /latex
    controller: App\Controller\LatexController::index
    methods: [GET]

app_latex_convert:
    path: /latex/convert
    controller: App\Controller\LatexController::convertLatex
    methods: [POST]

app_latex_preview:
    path: /latex/preview
    controller: App\Controller\LatexController::previewLatex
    methods: [POST]

app_latex_view_pdf:
    path: /latex/view/{filename}
    controller: App\Controller\LatexController::viewPdf
    methods: [GET]

app_latex_upload:
    path: /latex/upload
    controller: App\Controller\LatexController::uploadLatexFile
    methods: [POST]

# Diagnostic LaTeX - Corrigé : sortie de la section app_template_analytics_dashboard
app_latex_diagnostic:
    path: /latex/diagnostic
    controller: App\Controller\LatexController::diagnostic
    methods: [GET]

# Routes pour ModernCV
app_cv_moderncv:
    path: /cv-generator/moderncv
    controller: App\Controller\CVGeneratorController::generateModernCV
    methods: [GET, POST]

app_cv_moderncv_preview:
    path: /cv-generator/moderncv/preview
    controller: App\Controller\CVGeneratorController::previewModernCV
    methods: [GET]


# Template tracking API endpoints
api_track_template:
    path: /api/track-template
    controller: App\Controller\TemplateController::trackTemplate
    methods: [POST]

api_template_stats:
    path: /api/template-stats
    controller: App\Controller\TemplateController::templateStats
    methods: [GET]

# Template analytics dashboard
app_template_analytics_dashboard:
    path: /admin/template-analytics-dashboard
    controller: App\Controller\TemplateAnalyticsController::index
    methods: [GET]
==================================================

Fichier: config/services.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\services.yaml
-----
# config/services.yaml
parameters:
    # Add your parameters from framework.yaml here
    app.current_date: '2025-05-08 00:23:58' # Current UTC datetime
    app.current_user: 'Mohamed-abidi-95'   # Current user login
    # Nouveaux paramètres pour le service LaTeX
    latex.temp_dir: '%kernel.project_dir%/var/latex/temp'
    latex.output_dir: '%kernel.project_dir%/var/latex/output'
    # Email configuration parameters
    mailer.sender_email: 'noreply@espritcvgenerator.com'
    mailer.sender_name: 'ESPRIT CV Generator'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Configuration explicite des contrôleurs qui ont besoin de dépendances
    App\Controller\CVGeneratorController:
        arguments:
            $logger: '@logger'
            $latexPdfGenerator: '@App\Service\LatexPdfGenerator'

    App\Controller\LatexController:
        arguments:
            $latexService: '@App\Service\LatexService'
            $logger: '@logger'
            $projectDir: '%kernel.project_dir%'

    # Configuration explicite du service LatexService avec paramètres corrects
    App\Service\LatexService:
        arguments:
            $projectDir: '%kernel.project_dir%'
            $logger: '@logger'

    # Configuration du service LatexPdfGenerator

    App\Security\EmailVerifier:
        arguments:
            $mailer: '@mailer'
            $entityManager: '@doctrine.orm.entity_manager'
    # Configuration du service LatexPdfGenerator
    App\Service\LatexPdfGenerator:
        arguments:
            $projectDir: '%kernel.project_dir%'
            $latexService: '@App\Service\LatexService'

    # Security related services

    # User authentication event listener to track last login
    App\EventListener\LoginListener:
        tags:
            - { name: 'kernel.event_listener', event: 'security.interactive_login', method: 'onSecurityInteractiveLogin' }
==================================================

Fichier: config/packages/mathjax.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\mathjax.yaml
-----
# Configuration simple pour MathJax
parameters:
  mathjax:
    enabled: true
    cdn_url: 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js'
==================================================

Fichier: public\js\latex-integration.js
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\public\js\latex-integration.js
-----
// public/js/latex-integration.js
/**
 * ESPRIT CV Generator - Module d'intégration LaTeX
 * Version: 1.0.0
 * Dernière mise à jour: 2025-05-05
 */

(function() {
    // Configuration
    const CONFIG = {
        editorPopupUrl: '/latex',
        popupFeatures: 'width=900,height=700,resizable=yes,scrollbars=yes',
        editorSelectors: ['#cv-content', '[contenteditable="true"]', '#cv-editor', 'textarea.latex-enabled']
    };

    // État
    let activeEditor = null;
    let currentFormula = null;

    // Initialisation
    document.addEventListener('DOMContentLoaded', function() {
        initializeLatexButtons();
        checkForStoredFormulas();
        setupMessageListener();
    });

    /**
     * Initialise tous les boutons LaTeX de la page
     */
    function initializeLatexButtons() {
        // Boutons avec classe ou ID spécifique
        const buttons = document.querySelectorAll('.add-latex-button, #add-latex-button');

        buttons.forEach(button => {
            if (button) {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    openLatexEditor(e);
                });
            }
        });

        // Trouver et configuret les éditeurs compatibles
        findAndSetupEditors();
    }

    /**
     * Recherche et configure tous les éditeurs compatibles sur la page
     */
    function findAndSetupEditors() {
        CONFIG.editorSelectors.forEach(selector => {
            const editors = document.querySelectorAll(selector);

            editors.forEach(editor => {
                // Marquer comme compatible LaTeX
                editor.classList.add('latex-compatible');

                // Ajouter un écouteur d'événement focus pour suivre l'éditeur actif
                editor.addEventListener('focus', function() {
                    activeEditor = this;
                });
            });
        });
    }

    /**
     * Vérifie s'il y a des formules LaTeX stockées dans localStorage
     */
    function checkForStoredFormulas() {
        const formula = localStorage.getItem('latex_formula');
        if (formula) {
            insertLatexFormula(formula);
            localStorage.removeItem('latex_formula');
        }
    }

    /**
     * Configure l'écoute des messages de la fenêtre d'édition LaTeX
     */
    function setupMessageListener() {
        window.addEventListener('message', function(event) {
            // Vérifier si le message contient une formule LaTeX
            if (event.data && event.data.type === 'latex_insert') {
                insertLatexFormula(event.data.latex);
            }
        });
    }

    /**
     * Ouvre l'éditeur LaTeX dans une fenêtre pop-up
     */
    function openLatexEditor(event) {
        window.open(CONFIG.editorPopupUrl, 'LaTeXEditor', CONFIG.popupFeatures);
    }

    /**
     * Insère une formule LaTeX dans l'éditeur actif
     */
    function insertLatexFormula(latex) {
        // Si aucun éditeur actif n'a été trouvé, réessayer
        if (!activeEditor) {
            findAndSetupEditors();

            // Si toujours aucun éditeur actif, utiliser le premier trouvé
            if (!activeEditor) {
                for (const selector of CONFIG.editorSelectors) {
                    const editor = document.querySelector(selector);
                    if (editor) {
                        activeEditor = editor;
                        break;
                    }
                }
            }

            // Si encore aucun éditeur trouvé, sauvegarder la formule et notifier
            if (!activeEditor) {
                localStorage.setItem('latex_formula', latex);
                console.warn('Aucun éditeur actif trouvé. La formule sera utilisée lors du prochain focus');
                return;
            }
        }

        // Créer l'élément HTML pour la formule
        const formulaSpan = document.createElement('span');
        formulaSpan.className = 'latex-formula';
        formulaSpan.setAttribute('data-latex', latex);
        formulaSpan.innerHTML = '$$' + latex + '$$';

        // Insérer la formule selon le type d'éditeur
        if (activeEditor.isContentEditable) {
            // Pour un div contenteditable
            const selection = window.getSelection();
            if (selection.rangeCount > 0) {
                const range = selection.getRangeAt(0);
                if (range.intersectsNode(activeEditor)) {
                    range.insertNode(formulaSpan);
                    // Déplacer le curseur après la formule
                    range.setStartAfter(formulaSpan);
                    range.setEndAfter(formulaSpan);
                    selection.removeAllRanges();
                    selection.addRange(range);
                } else {
                    activeEditor.appendChild(formulaSpan);
                }
            } else {
                activeEditor.appendChild(formulaSpan);
            }
        } else if (activeEditor.tagName === 'TEXTAREA') {
            // Pour un textarea, insérer le texte à la position du curseur
            const pos = activeEditor.selectionStart || 0;
            activeEditor.value = activeEditor.value.substring(0, pos) +
                '$$' + latex + '$$' +
                activeEditor.value.substring(activeEditor.selectionEnd || pos);

            // Mettre à jour la position du curseur
            const newPos = pos + 2 + latex.length + 2;
            activeEditor.selectionStart = newPos;
            activeEditor.selectionEnd = newPos;
            activeEditor.focus();
        }

        // Rendre la formule avec MathJax si disponible
        if (window.MathJax && typeof window.MathJax.typesetPromise === 'function') {
            try {
                window.MathJax.typesetPromise([formulaSpan]).catch(function(err) {
                    console.error('Erreur MathJax:', err);
                });
            } catch (e) {
                console.error('Erreur lors du rendu MathJax:', e);
            }
        } else {
            console.warn('MathJax non disponible ou méthode typesetPromise non trouvée');
        }

        console.log('LaTeX formule insérée:', latex);

        // Stocker la dernière formule utilisée
        currentFormula = latex;
    }

    // Exposer des fonctions publiques
    window.latexHelper = {
        openEditor: openLatexEditor,
        insertFormula: insertLatexFormula,
        getCurrentFormula: function() { return currentFormula; }
    };
})();

==================================================

Fichier: src/Controller/CVGeneratorController.php
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\src\Controller\CVGeneratorController.php
-----
<?php
// Last updated: 2025-05-08 12:05:00
// Author: Mohamed-abidi-95

namespace App\Controller;

use App\Entity\TemplateUsage;
use App\Service\LatexPdfGenerator;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\HeaderUtils;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpFoundation\BinaryFileResponse;
use Symfony\Component\HttpFoundation\ResponseHeaderBag;
use Symfony\Component\Routing\Attribute\Route;
use Dompdf\Dompdf;
use Dompdf\Options;
use Doctrine\ORM\EntityManagerInterface;
use Psr\Log\LoggerInterface;
use Symfony\Component\Process\Process;
use Symfony\Component\Routing\Generator\UrlGeneratorInterface;


class CVGeneratorController extends AbstractController
{
    private LoggerInterface $logger;
    private ?LatexPdfGenerator $latexPdfGenerator;
    private EntityManagerInterface $entityManager;

    public function __construct(LoggerInterface $logger, EntityManagerInterface $entityManager, ?LatexPdfGenerator $latexPdfGenerator = null)
    {
        $this->logger = $logger;
        $this->latexPdfGenerator = $latexPdfGenerator;
        $this->entityManager = $entityManager;
    }

    #[Route("/", name: "app_welcome")]
    public function welcome(): Response
    {
        return $this->render('cv_generator/welcome.html.twig');
    }

    #[Route("/cv-builder", name: "app_cv_builder")]
    public function builder(): Response
    {
        return $this->render('cv_builder/index.html.twig', [
            'current_time' => new \DateTime('now', new \DateTimeZone('UTC')),
            'username' => 'Mohamed-abidi-95'
        ]);
    }

    #[Route("/cv-content-editor", name: "app_cv_content_editor")]
    public function contentEditor(): Response
    {
        return $this->render('cv_builder/content_editor.html.twig', [
            'current_time' => new \DateTime('now', new \DateTimeZone('UTC')),
            'username' => 'Mohamed-abidi-95'
        ]);
    }

    #[Route("/cv", name: "app_cv_generator")]
    public function index(): Response
    {
        // Sample data for autofill testing
        $sampleData = [
            'firstName' => 'John', 'lastName' => 'Doe', 'position' => 'Software Developer',
            'email' => 'john.doe@example.com', 'phone' => '+216 12 345 678',
            'address' => '123 Main Street', 'city' => 'Tunis', 'country' => 'Tunisia',
            'github' => 'github.com/johndoe', 'linkedin' => 'linkedin.com/in/johndoe',
            'education' => [
                ['degree' => 'Bachelor of Science in Computer Science', 'institution' => 'ESPRIT Engineering School', 'location' => 'Tunis, Tunisia', 'startDate' => '09/2018', 'endDate' => '06/2022', 'description' => 'Graduated with honors...'],
                ['degree' => 'High School Diploma', 'institution' => 'International High School', 'location' => 'Tunis, Tunisia', 'startDate' => '09/2015', 'endDate' => '06/2018', 'description' => 'Science track...']
            ],
            'experience' => [
                ['position' => 'Software Engineer', 'company' => 'Tech Solutions Inc.', 'location' => 'Tunis, Tunisia', 'startDate' => '08/2022', 'endDate' => 'Present', 'description' => 'Developing full-stack web apps...'],
                ['position' => 'Web Development Intern', 'company' => 'StartUp Hub', 'location' => 'Tunis, Tunisia', 'startDate' => '06/2021', 'endDate' => '09/2021', 'description' => 'Assisted in development...']
            ],
            'skills' => ['JavaScript', 'React.js', 'Node.js', 'HTML/CSS', 'PHP', 'MySQL', 'Git', 'Agile', 'Problem Solving'],
            'languages' => ['Arabic (Native)', 'French (Fluent)', 'English (Advanced)'],
            'additionalInfo' => 'Passionate about building high-quality software...'
        ];

        return $this->render('cv_generator/main.html.twig', [
            'currentStep' => 1,
            'sampleData' => $sampleData
        ]);
    }

    // Ajout des attributs Route pour les fonctions LaTeX
    #[Route("/latex", name: "app_latex")]
    public function latex(): Response
    {
        return $this->render('latex/index.html.twig', [
            'controller_name' => 'LatexController',
        ]);
    }

    #[Route("/latex/preview", name: "app_latex_preview", methods: ["POST"])]
    public function latexPreview(Request $request): Response
    {
        try {
            $data = json_decode($request->getContent(), true);
            $latex = $data['latex'] ?? '';

            if (empty($latex)) {
                return $this->json([
                    'success' => false,
                    'error' => 'No LaTeX code provided'
                ]);
            }

            // Create a temporary file with the LaTeX content
            $tempDir = sys_get_temp_dir();
            $uniqueId = uniqid('latex_');
            $tempFilename = $uniqueId . '.tex';
            $tempFilePath = $tempDir . '/' . $tempFilename;
            file_put_contents($tempFilePath, $latex);

            // Log the temp dir and file path for debugging
            $this->logger->info('LaTeX temp file created at: ' . $tempFilePath);
            $this->logger->info('LaTeX content: ' . substr($latex, 0, 500) . '...');

            // Find pdflatex from MikTeX
            $pdflatexCommand = 'C:\Users\Sh-Pc\AppData\Local\Programs\MiKTeX\miktex\bin\x64\pdflatex.exe';

            // Execute pdflatex with detailed error handling
            $process = new Process([
                $pdflatexCommand,
                '-interaction=nonstopmode',
                '-output-directory=' . $tempDir,
                $tempFilePath
            ]);

            $process->setTimeout(60);
            $process->setIdleTimeout(30);

            // Log the command for debugging
            $this->logger->info('Executing command: ' . $process->getCommandLine());

            $process->run();

            // Log complete output for debugging
            $this->logger->info('Process exit code: ' . $process->getExitCode());
            $this->logger->info('Process output: ' . $process->getOutput());

            if (!$process->isSuccessful()) {
                $this->logger->error('LaTeX Error: ' . $process->getErrorOutput());

                // Extract the specific error message from the LaTeX output
                $errorMessage = 'Erreur de compilation LaTeX.';
                $output = $process->getOutput();

                // Look for common LaTeX error patterns
                if (preg_match('/!(.*?)at line (\d+)/', $output, $matches)) {
                    $errorMessage .= ' ' . $matches[1] . ' (ligne ' . $matches[2] . ')';
                } elseif (strpos($output, '!') !== false) {
                    // Extract text after the last '!' which often contains the error
                    $errorParts = explode('!', $output);
                    $lastError = trim(end($errorParts));
                    $errorMessage .= ' ' . substr($lastError, 0, 100);
                }

                return $this->json([
                    'success' => false,
                    'error' => $errorMessage,
                    'output' => $process->getOutput(),
                    'errorOutput' => $process->getErrorOutput()
                ]);
            }

            // Path to the generated PDF
            $pdfFilename = $uniqueId . '.pdf';
            $pdfPath = $tempDir . '/' . $pdfFilename;

            // Check if PDF was created
            if (!file_exists($pdfPath)) {
                $this->logger->error('PDF file not created at: ' . $pdfPath);
                return $this->json([
                    'success' => false,
                    'error' => 'PDF file not created. Check if MikTeX is properly installed.',
                    'output' => $process->getOutput()
                ]);
            }

            $this->logger->info('PDF successfully generated at: ' . $pdfPath);

            // Create a URL to access the PDF
            $pdfUrl = $this->generateUrl('app_latex_download', ['filename' => $pdfFilename]);

            return $this->json([
                'success' => true,
                'pdfUrl' => $pdfUrl,
                'filename' => $pdfFilename
            ]);
        } catch (\Exception $e) {
            $this->logger->error('Exception in LaTeX preview: ' . $e->getMessage());
            $this->logger->error('Stack trace: ' . $e->getTraceAsString());
            return $this->json([
                'success' => false,
                'error' => 'Server error: ' . $e->getMessage()
            ]);
        }
    }
    /**
     * Track template selection method
     */
    #[Route("/latex/download/{filename}", name: "app_latex_download")]
    public function downloadLatexPdf(string $filename): Response
    {
        // Security: Validate filename to prevent directory traversal
        if (!preg_match('/^latex_[a-f0-9]+\.pdf$/', $filename)) {
            throw $this->createNotFoundException('Invalid filename');
        }

        $pdfPath = sys_get_temp_dir() . '/' . $filename;

        $this->logger->info('Attempting to serve PDF: ' . $pdfPath);

        if (!file_exists($pdfPath)) {
            $this->logger->error('PDF file not found at: ' . $pdfPath);
            throw $this->createNotFoundException('PDF file not found');
        }

        $response = new BinaryFileResponse($pdfPath);
        $response->headers->set('Content-Type', 'application/pdf');
        $response->setContentDisposition(ResponseHeaderBag::DISPOSITION_INLINE, $filename);

        return $response;
    }
    private function trackTemplateSelection(Request $request, string $templateName): void
    {
        $this->logger->info('Template selected: ' . $templateName);

        // Create template usage record
        $templateUsage = new TemplateUsage();
        $templateUsage->setTemplateName($templateName);
        $templateUsage->setSelectedAt(new \DateTime());

        // If a user is logged in, associate with user
        if ($this->getUser()) {
            $templateUsage->setUser($this->getUser());
        } else {
            // For anonymous users, track by session
            $sessionId = $request->getSession()->getId();
            $templateUsage->setSessionId($sessionId);
        }

        // Save to database
        $this->entityManager->persist($templateUsage);
        $this->entityManager->flush();

        $this->logger->info('Template selection recorded for template: ' . $templateName);
    }

    #[Route("/cv-generator/generate", name: "app_cv_generate", methods: ["POST"])]
    public function generate(Request $request): Response
    {
        // Set memory limit and execution time
        ini_set('memory_limit', '512M');
        ini_set('max_execution_time', 300);

        $this->logger->info('CV Generation request received.');
        $this->logger->info('Request method: ' . $request->getMethod());
        $this->logger->info('Content type: ' . $request->headers->get('Content-Type'));
        $this->logger->info('User: Mohamed-abidi-95, timestamp: ' . (new \DateTime())->format('Y-m-d H:i:s'));

        try {
            // Déboguer les données du formulaire
            $allFormData = $request->request->all();
            $this->logger->info('All form data: ' . json_encode(array_keys($allFormData)));

            // --- Get Form Data ---
            $formData = $request->request->all();

            // --- Get Template and Photo ---
            $templateType = $request->request->get('template', 'elegant'); // Default to elegant template

            // Track template selection
            $this->trackTemplateSelection($request, $templateType);

            $photoData = $request->request->get('photoData', ''); // Base64 encoded photo data

            // --- Get LaTeX formulas if any ---
            $latexFormulas = $request->request->get('latexFormulas', '[]');
            $formData['latexFormulas'] = json_decode($latexFormulas, true) ?: [];

            $this->logger->info('LaTeX formulas count: ' . count($formData['latexFormulas']));
            $this->logger->info('Template selected (raw): ' . $templateType);

            // Correction: s'assurer de la valeur correcte du template
            $templateType = strtolower($templateType);
            $this->logger->info('Template selected (normalized): ' . $templateType);

            // --- Get Style Customization Data ---
            $formData['backgroundColor'] = $request->request->get('backgroundColor', '#ffffff');
            $formData['textColor'] = $request->request->get('textColor', '#000000');
            $formData['selectedBackground'] = $request->request->get('selectedBackground', 'none');
            $formData['selectedBackgroundType'] = $request->request->get('selectedBackgroundType', 'color');
            $formData['selectedBackgroundColor'] = $request->request->get('selectedBackgroundColor', '#ffffff');

            $this->logger->info('Background: ' . $formData['selectedBackground']);
            $this->logger->info('Background Type: ' . $formData['selectedBackgroundType']);

            // Déterminer quel template utiliser
            if ($templateType === 'blue') {
                $templateName = 'cv_template_blue.html.twig';
            } elseif ($templateType === 'classic') {
                $templateName = 'cv_template_classic.html.twig';
            } else {
                $templateName = 'cv_template_elegant.html.twig';
            }

            $this->logger->info('Template name chosen: ' . $templateName);

            // Vérifier que le fichier existe réellement, en essayant différents chemins possibles
            $possiblePaths = [
                $this->getParameter('kernel.project_dir') . '/Templates/cv_generator/' . $templateName,
                $this->getParameter('kernel.project_dir') . '/templates/cv_generator/' . $templateName,
                $this->getParameter('kernel.project_dir') . '/templates/Templates/cv_generator/' . $templateName
            ];

            $templateFound = false;
            $validTemplatePath = '';

            foreach ($possiblePaths as $path) {
                $this->logger->info("Checking template path: {$path}");
                if (file_exists($path)) {
                    $templateFound = true;
                    $validTemplatePath = $path;
                    $this->logger->info("Template found at: {$path}");
                    break;
                }
            }

            if (!$templateFound) {
                throw new \Exception("Le fichier de template n'existe pas. Chemins vérifiés: " . implode(', ', $possiblePaths));
            }

            // Déterminer le chemin de rendu relatif en fonction du chemin absolu trouvé
            $templateRenderPath = '';
            $projectDir = $this->getParameter('kernel.project_dir');

            if (strpos($validTemplatePath, $projectDir . '/Templates/') === 0) {
                $templateRenderPath = 'Templates/cv_generator/' . $templateName;
            } else if (strpos($validTemplatePath, $projectDir . '/templates/Templates/') === 0) {
                $templateRenderPath = 'templates/Templates/cv_generator/' . $templateName;
            } else {
                $templateRenderPath = 'templates/cv_generator/' . $templateName;
            }

            $this->logger->info("Template render path: {$templateRenderPath}");

            // --- Render HTML with Environment variable ---
            $env = new \Twig\Environment(new \Twig\Loader\FilesystemLoader([
                $this->getParameter('kernel.project_dir'),
                $this->getParameter('kernel.project_dir') . '/templates',
                $this->getParameter('kernel.project_dir') . '/Templates'
            ]));

            // Ajouter le support MathJax pour le rendu LaTeX
            $html = $env->render($templateRenderPath, [
                'data' => $formData,
                'photoData' => $photoData,
                'generatedDate' => new \DateTime(),
                'debug_template' => $templateType,
                'includeMathJax' => true // Ajouter cette option pour activer MathJax
            ]);

            // Ajouter MathJax si nécessaire et si des formules LaTeX sont présentes
            if (!empty($formData['latexFormulas'])) {
                $mathjaxCdn = '<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>';
                $html = str_replace('</head>', $mathjaxCdn . '</head>', $html);
            }

            // Generate PDF
            $options = new Options();
            $options->set('isHtml5ParserEnabled', true);
            $options->set('defaultFont', 'DejaVu Sans');
            $options->set('isRemoteEnabled', true);

            // Option importante pour que Dompdf prenne en compte le JavaScript
            $options->set('isJavascriptEnabled', true);

            $dompdf = new Dompdf($options);
            $dompdf->loadHtml($html);
            $dompdf->setPaper('A4');
            $dompdf->render();

            // Générez un nom de fichier significatif
            $filename = ($formData['firstName'] ?? 'CV') . '-' . ($formData['lastName'] ?? 'Generated') . '-' . (new \DateTime())->format('Y-m-d') . '.pdf';

            // Retournez la réponse PDF
            $response = new Response($dompdf->output());
            $disposition = HeaderUtils::makeDisposition(HeaderUtils::DISPOSITION_ATTACHMENT, $filename);
            $response->headers->set('Content-Type', 'application/pdf');
            $response->headers->set('Content-Disposition', $disposition);

            return $response;

        } catch (\Throwable $e) {
            $this->logger->error("Error generating PDF: {$e->getMessage()}", ['exception' => $e]);
            $this->logger->error("Full exception details: " . get_class($e) . " at " . $e->getFile() . ":" . $e->getLine());

            // Retourner une réponse d'erreur avec plus de détails
            return new Response(
                '<html><body>
            <h1>Une erreur s\'est produite</h1>
            <p>' . htmlspecialchars($e->getMessage()) . '</p>
            <p><a href="/cv-content-editor" class="btn btn-primary">Retourner à l\'éditeur</a></p>
            <hr>
            <h3>Détails techniques (environnement de développement uniquement)</h3>
            <pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>
            <h4>Données formulaire reçues:</h4>
            <pre>' . htmlspecialchars(print_r($request->request->all(), true)) . '</pre>
            <hr>
            <p>Date: ' . (new \DateTime())->format('Y-m-d H:i:s') . '</p>
            <p>User: Mohamed-abidi-95</p>
        </body></html>',
                500,
                ['Content-Type' => 'text/html']
            );
        }
    }

    #[Route("/cv-generator/test-pdf", name: "app_cv_test_pdf")]
    public function testPdf(): Response
    {
        // --- Test PDF Logic (remains mostly the same) ---
        try {
            // Ajout d'un test LaTeX simple
            $html = '<!DOCTYPE html>
            <html>
            <head>
                <title>Test PDF</title>
                <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
            </head>
            <body>
                <h1>Test PDF OK</h1>
                <p>Generated: '.(new \DateTime())->format('Y-m-d H:i:s').'</p>
                <p>Test LaTeX: $$\sum_{i=1}^{n} i = \frac{n(n+1)}{2}$$</p>
            </body>
            </html>';

            $options = new Options();
            $options->set('isHtml5ParserEnabled', true);
            $options->set('defaultFont', 'DejaVu Sans');
            $options->set('isRemoteEnabled', true);
            $options->set('isJavascriptEnabled', true);

            $dompdf = new Dompdf($options);
            $dompdf->loadHtml($html);
            $dompdf->setPaper('A4');
            $dompdf->render();

            $response = new Response($dompdf->output());
            $disposition = HeaderUtils::makeDisposition(HeaderUtils::DISPOSITION_INLINE, 'test.pdf');
            $response->headers->set('Content-Type', 'application/pdf');
            $response->headers->set('Content-Disposition', $disposition);
            return $response;
        } catch (\Throwable $e) {
            $this->logger->error("Error in test PDF generation: {$e->getMessage()}", ['exception' => $e]);
            return new Response('<html><body><h1>Test PDF Error</h1><p>'.htmlspecialchars($e->getMessage()).'</p><pre>'.htmlspecialchars($e->getTraceAsString()).'</pre></body></html>', 500, ['Content-Type' => 'text/html']);
        }
    }

    #[Route("/cv-template-debug", name: "app_cv_template_debug")]
    public function templateDebug(Request $request): Response
    {
        // Obtenir le type de template à partir de la requête ou utiliser classique par défaut
        $templateType = $request->query->get('template', 'classic');

        // Track template selection
        $this->trackTemplateSelection($request, $templateType);

        // Déterminer quel template utiliser
        if ($templateType === 'blue') {
            $templateName = 'cv_template_blue.html.twig';
        } elseif ($templateType === 'classic') {
            $templateName = 'cv_template_classic.html.twig';
        } else {
            $templateName = 'cv_template_elegant.html.twig';
        }

        // Données de test
        $sampleData = [
            'firstName' => 'Test',
            'lastName' => 'Debug',
            'position' => 'Développeur Test',
            'email' => 'test@debug.com',
            'textColor' => '#000000',
            'selectedBackgroundColor' => '#ffffff',
            'selectedBackground' => 'none',
            'selectedBackgroundType' => 'color',
            // Ajouter des formules LaTeX de test
            'latexFormulas' => [
                ['formula' => '\sum_{i=1}^{n} i = \frac{n(n+1)}{2}', 'position' => 'skills'],
                ['formula' => 'E = mc^2', 'position' => 'additionalInfo']
            ]
        ];

        return $this->render('Templates/cv_generator/' . $templateName, [
            'data' => $sampleData,
            'photoData' => '/images/logo.png',
            'generatedDate' => new \DateTime(),
            'includeMathJax' => true
        ]);
    }

    #[Route("/cv-generator/debug-form", name: "app_cv_debug_form", methods: ["POST"])]
    public function debugForm(Request $request): Response
    {
        // --- Debug Form Logic (remains the same) ---
        try {
            return new Response('<html><body><h1>Form Debug</h1><pre>' . print_r($request->request->all(), true) . '</pre></body></html>', 200, ['Content-Type' => 'text/html']);
        } catch (\Throwable $e) {
            return new Response('Error: ' . $e->getMessage(), 500);
        }
    }

    #[Route("/cv-template-test/{template}", name: "app_cv_template_test")]
    public function templateTest($template = 'classic', Request $request): Response
    {
        // Track template selection
        $this->trackTemplateSelection($request, $template);

        $formData = [
            'firstName' => 'Test',
            'lastName' => 'Debug',
            'position' => 'Développeur Test',
            'textColor' => '#000000',
            'selectedBackgroundColor' => '#ffffff',
            'selectedBackground' => 'none',
            'selectedBackgroundType' => 'color',
            // Ajouter des formules LaTeX de test
            'latexFormulas' => [
                ['formula' => '\sum_{i=1}^{n} i = \frac{n(n+1)}{2}', 'position' => 'skills'],
                ['formula' => 'E = mc^2', 'position' => 'additionalInfo']
            ]
        ];

        if ($template === 'blue') {
            $templateName = 'cv_template_blue.html.twig';
        } elseif ($template === 'classic') {
            $templateName = 'cv_template_classic.html.twig';
        } else {
            $templateName = 'cv_template_elegant.html.twig';
        }

        return $this->render('Templates/cv_generator/' . $templateName, [
            'data' => $formData,
            'photoData' => null,
            'generatedDate' => new \DateTime(),
            'includeMathJax' => true
        ]);
    }

    #[Route("/cv-template-elegant", name: "app_cv_template_elegant")]
    public function elegantTemplate(Request $request): Response
    {
        // Track template selection
        $this->trackTemplateSelection($request, 'elegant');

        // Cette route sert à rendre le template élégant pour affichage/debug
        $sampleData = [
            'firstName' => 'Mohamed', 'lastName' => 'Abidi',
            'position' => 'Développeur Full Stack',
            'email' => 'mohamed.abidi@example.com', 'phone' => '+216 55 123 456',
            'address' => '15 Avenue Habib Bourguiba', 'city' => 'Tunis', 'country' => 'Tunisie',
            'github' => 'github.com/mohamed-abidi-95', 'linkedin' => 'linkedin.com/in/mohamed-abidi-95',
            'additionalInfo' => 'Développeur passionné avec 5 ans d\'expérience dans le développement web.',
            'skills' => ['JavaScript', 'React.js', 'Node.js', 'HTML/CSS', 'PHP', 'MySQL', 'Git'],
            'languages' => ['Arabe', 'Français', 'Anglais'],
            'languageLevels' => ['Langue maternelle', 'Courant', 'Avancé'],
            'experience' => [
                [
                    'position' => 'Développeur Full Stack Senior',
                    'company' => 'Tech Solutions Tunisie',
                    'location' => 'Tunis, Tunisie',
                    'startDate' => '01/2022',
                    'endDate' => 'Présent',
                    'description' => 'Direction d\'une équipe de développeurs pour construire et lancer le produit phare de l\'entreprise'
                ]
            ],
            'education' => [
                [
                    'degree' => 'Diplôme d\'Ingénieur en Informatique',
                    'institution' => 'École d\'Ingénieurs ESPRIT',
                    'location' => 'Tunis, Tunisie',
                    'startDate' => '09/2018',
                    'endDate' => '06/2023',
                    'description' => 'Diplômé avec mention. Spécialisation en technologies web et principes d\'ingénierie logicielle.'
                ]
            ],
            'projects' => [
                [
                    'name' => 'Plateforme E-commerce',
                    'description' => 'Développé une plateforme e-commerce complète avec traitement sécurisé des paiements et gestion des stocks.',
                    'technologies' => 'React.js, Node.js, Express, MongoDB'
                ]
            ],
            // Ajouter des formules LaTeX d'exemple
            'latexFormulas' => [
                ['formula' => '\sum_{i=1}^{n} i = \frac{n(n+1)}{2}', 'position' => 'skills'],
                ['formula' => 'E = mc^2', 'position' => 'projects']
            ]
        ];

        // Pour le debug/démonstration, charger le logo ESPRIT
        $photoData = '/images/logo.png';

        return $this->render('Templates/cv_generator/cv_template_elegant.html.twig', [
            'data' => $sampleData,
            'photoData' => $photoData,
            'generatedDate' => new \DateTime(),
            'includeMathJax' => true
        ]);
    }

    // Nouvelle route pour le test de l'éditeur LaTeX
    #[Route("/test-latex-editor", name: "app_test_latex_editor")]
    public function testLatexEditor(Request $request): Response
    {
        // Obtenir le moteur LaTeX préféré de l'utilisateur (par défaut: pdflatex)
        $engine = $request->query->get('engine', 'pdflatex');

        // Générer un exemple de code LaTeX pour l'affichage
        $exampleLatexCode = $this->generateExampleLatexCode();

        // Récupérer une liste des formules LaTeX récemment utilisées (simulé)
        $recentFormulas = [
            ['formula' => '\sum_{i=1}^{n} i = \frac{n(n+1)}{2}', 'name' => 'Somme des entiers'],
            ['formula' => 'E = mc^2', 'name' => 'Équation d\'Einstein'],
            ['formula' => '\oint_C \vec{E} \cdot d\vec{l} = -\frac{d\Phi_B}{dt}', 'name' => 'Loi de Faraday']
        ];

        // Déterminer si le service LatexPdfGenerator est disponible
        $latexServiceAvailable = $this->latexPdfGenerator !== null;

        // Vérifier si ModernCV est installé sur le système (pour information seulement)
        $moderncvInstalled = false;
        try {
            $process = new Process(['kpsewhich', 'moderncv.cls']);
            $process->run();
            $moderncvInstalled = $process->isSuccessful() && !empty($process->getOutput());
        } catch (\Exception $e) {
            $this->logger->warning('Impossible de vérifier si ModernCV est installé: ' . $e->getMessage());
        }

        // Générer le code de tous les templates disponibles
        $templates = [
            'standard' => $this->generateStandardCVTemplate('Mohamed', 'Abidi', 'Développeur Full Stack'),
            'classic' => $this->generateModernCVTemplate('Mohamed', 'Abidi', 'Développeur Full Stack', '+216 xx xxx xxx', 'mohamed.abidi@example.com'),
            'elegant' => $this->generateElegantCVTemplate('Mohamed', 'Abidi', 'Développeur Full Stack', '+216 xx xxx xxx', 'mohamed.abidi@example.com')
        ];

        return $this->render('cv_generator/test_latex_editor.html.twig', [
            'current_time' => new \DateTime('now', new \DateTimeZone('UTC')),
            'username' => 'Mohamed-abidi-95',
            'engine' => $engine,
            'exampleLatexCode' => $exampleLatexCode,
            'recentFormulas' => $recentFormulas,
            'latexServiceAvailable' => $latexServiceAvailable,
            'moderncvInstalled' => $moderncvInstalled,
            'templates' => $templates
        ]);
    }

    /**
     * Génère un exemple de code LaTeX pour l'affichage dans l'interface
     */
    private function generateExampleLatexCode(): string
    {
        return "% !TEX program = xelatex
\\documentclass[11pt,a4paper,sans]{moderncv}

% Style et couleur
\\moderncvstyle{classic}
\\moderncvcolor{blue}

% Packages nécessaires
\\usepackage{fontspec}
\\usepackage{wasysym}
\\usepackage[scale=0.75]{geometry}

% Informations personnelles
\\name{Mohamed}{Abidi}
\\title{Développeur Full Stack}
\\phone{+216 55 123 456}
\\email{mohamed.abidi@example.com}
\\social[linkedin]{mohamed-abidi}
\\social[github]{Mohamed-abidi-95}

\\begin{document}

\\makecvtitle

\\section{Expérience professionnelle}
\\cventry{2023--Présent}{Développeur Web Full Stack}{Société XYZ}{Tunis}{}{
\\begin{itemize}
\\item Développement d'applications web avec Symfony et React
\\item Intégration de services tiers et APIs \\smiley{}
\\item Optimisation des performances et refactoring de code \\checkbox{}
\\end{itemize}}

\\cventry{2021--2023}{Développeur Junior}{ABC Tech}{Tunis}{}{
\\begin{itemize}
\\item Maintenance et développement de sites web
\\item Mise en place d'outils de déploiement continu
\\end{itemize}}

\\section{Formation}
\\cventry{2020--2022}{Master en Génie Logiciel}{ESPRIM}{Tunis}{}{}
\\cventry{2017--2020}{Licence en Informatique}{Université de Tunis}{Tunis}{}{}

\\section{Compétences techniques}
\\cvitem{Langages}{PHP, JavaScript, HTML, CSS, SQL}
\\cvitem{Frameworks}{Symfony, React, Vue.js, Bootstrap}
\\cvitem{Outils}{Git, Docker, VS Code, PHPStorm}
\\cvitem{Bases de données}{MySQL, PostgreSQL, MongoDB}

\\section{Langues}
\\cvitemwithcomment{Arabe}{Langue maternelle}{}
\\cvitemwithcomment{Français}{Courant}{C1}
\\cvitemwithcomment{Anglais}{Professionnel}{B2}

\\end{document}";
    }

    /**
     * Génère un template CV standard en utilisant la classe article
     */
    private function generateStandardCVTemplate(string $name, string $surname, string $title): string
    {
        $latexCode = "\\documentclass[a4paper,11pt]{article}\n";
        $latexCode .= "\\usepackage[utf8]{inputenc}\n";
        $latexCode .= "\\usepackage[T1]{fontenc}\n";
        $latexCode .= "\\usepackage{geometry}\n";
        $latexCode .= "\\usepackage{hyperref}\n";
        $latexCode .= "\\usepackage{array}\n";
        $latexCode .= "\\usepackage{xcolor}\n\n";

        $latexCode .= "\\geometry{a4paper, left=2cm, right=2cm, top=2cm, bottom=2cm}\n";
        $latexCode .= "\\definecolor{linkcolor}{RGB}{0,0,238}\n";
        $latexCode .= "\\hypersetup{colorlinks=true, linkcolor=linkcolor, urlcolor=linkcolor}\n\n";

        $latexCode .= "\\begin{document}\n\n";

        $latexCode .= "\\begin{center}\n";
        $latexCode .= "    {\\huge\\textbf{" . $name . " " . $surname . "}}\\\\[0.5cm]\n";
        $latexCode .= "    {\\large " . $title . "}\\\\[0.3cm]\n";
        $latexCode .= "    \\begin{tabular}{r l}\n";
        $latexCode .= "        Téléphone: & +216 xx xxx xxx \\\\\n";
        $latexCode .= "        Email: & \\href{mailto:exemple@email.com}{exemple@email.com}\n";
        $latexCode .= "    \\end{tabular}\n";
        $latexCode .= "\\end{center}\n\n";

        $latexCode .= "\\section*{Formation}\n";
        $latexCode .= "\\begin{tabular}{r p{12cm}}\n";
        $latexCode .= "    \\textbf{2020--2022} & Master en Génie Logiciel, ESPRIM, Tunis \\\\\n";
        $latexCode .= "    \\textbf{2017--2020} & Licence en Informatique, Université de Tunis, Tunis\n";
        $latexCode .= "\\end{tabular}\n\n";

        $latexCode .= "\\section*{Expériences Professionnelles}\n";
        $latexCode .= "\\begin{tabular}{r p{12cm}}\n";
        $latexCode .= "    \\textbf{2023--Présent} & \\textbf{Développeur Web Full Stack, Société XYZ, Tunis} \\\\\n";
        $latexCode .= "                         & \$\\bullet\$ Développement d'applications web avec Symfony et React \\\\\n";
        $latexCode .= "                         & \$\\bullet\$ Intégration de services tiers et APIs \\\\\n";
        $latexCode .= "                         & \$\\bullet\$ Optimisation des performances et refactoring de code \\\\\n";
        $latexCode .= "    \\textbf{2021--2023} & \\textbf{Développeur Junior, ABC Tech, Tunis} \\\\\n";
        $latexCode .= "                         & \$\\bullet\$ Maintenance et développement de sites web \\\\\n";
        $latexCode .= "                         & \$\\bullet\$ Mise en place d'outils de déploiement continu\n";
        $latexCode .= "\\end{tabular}\n\n";

        $latexCode .= "\\section*{Compétences}\n";
        $latexCode .= "\\begin{tabular}{r p{12cm}}\n";
        $latexCode .= "    Langages: & PHP, JavaScript, HTML, CSS, SQL \\\\\n";
        $latexCode .= "    Frameworks: & Symfony, React, Vue.js, Bootstrap \\\\\n";
        $latexCode .= "    Outils: & Git, Docker, VS Code, PHPStorm \\\\\n";
        $latexCode .= "    Bases de données: & MySQL, PostgreSQL, MongoDB\n";
        $latexCode .= "\\end{tabular}\n\n";

        $latexCode .= "\\section*{Langues}\n";
        $latexCode .= "\\begin{tabular}{r p{12cm}}\n";
        $latexCode .= "    Arabe: & Langue maternelle \\\\\n";
        $latexCode .= "    Français: & Courant (C1) \\\\\n";
        $latexCode .= "    Anglais: & Professionnel (B2)\n";
        $latexCode .= "\\end{tabular}\n\n";

        $latexCode .= "\\end{document}\n";

        return $latexCode;
    }

    /**
     * Génère un template CV élégant
     */
    private function generateElegantCVTemplate(string $name, string $surname, string $title, string $phone, string $email): string
    {
        $latexCode = "\\documentclass[a4paper,11pt]{article}\n";
        $latexCode .= "\\usepackage[utf8]{inputenc}\n";
        $latexCode .= "\\usepackage[T1]{fontenc}\n";
        $latexCode .= "\\usepackage{geometry}\n";
        $latexCode .= "\\usepackage{hyperref}\n";
        $latexCode .= "\\usepackage{array}\n";
        $latexCode .= "\\usepackage{xcolor}\n";
        $latexCode .= "\\usepackage{enumitem}\n";
        $latexCode .= "\\usepackage{titlesec}\n";
        $latexCode .= "\\usepackage{fancyhdr}\n\n";

        $latexCode .= "\\geometry{a4paper, margin=2cm}\n";
        $latexCode .= "\\definecolor{accent}{RGB}{70,142,216}\n";
        $latexCode .= "\\definecolor{lightaccent}{RGB}{230,240,250}\n";
        $latexCode .= "\\hypersetup{colorlinks=true, linkcolor=accent, urlcolor=accent}\n\n";

        $latexCode .= "\\titleformat{\\section}{\\Large\\bfseries}{}{0em}{\\textcolor{accent}{}} [\\titlerule]\n";
        $latexCode .= "\\titlespacing*{\\section}{0pt}{12pt}{6pt}\n\n";

        $latexCode .= "\\pagestyle{fancy}\n";
        $latexCode .= "\\fancyhf{}\n";
        $latexCode .= "\\renewcommand{\\headrulewidth}{0pt}\n";
        $latexCode .= "\\fancyfoot[C]{\\thepage}\n\n";

        $latexCode .= "\\begin{document}\n\n";

        // En-tête élégante avec couleur d'accent
        $latexCode .= "\\begin{center}\n";
        $latexCode .= "    \\colorbox{lightaccent}{\\parbox{\\dimexpr\\textwidth-2\\fboxsep\\relax}{\n";
        $latexCode .= "        \\begin{center}\n";
        $latexCode .= "            {\\LARGE\\textcolor{accent}{\\textbf{" . $name . " " . $surname . "}}}\\\\[0.3cm]\n";
        $latexCode .= "            {\\large " . $title . "}\\\\[0.2cm]\n";
        $latexCode .= "            \\begin{tabular}{r l}\n";
        $latexCode .= "                \\textcolor{accent}{\\textbf{Téléphone:}} & " . $phone . " \\\\\n";
        $latexCode .= "                \\textcolor{accent}{\\textbf{Email:}} & \\href{mailto:" . $email . "}{" . $email . "}\n";
        $latexCode .= "            \\end{tabular}\n";
        $latexCode .= "        \\end{center}\n";
        $latexCode .= "    }}\n";
        $latexCode .= "\\end{center}\n\n";

        $latexCode .= "\\section*{Profil}\n";
        $latexCode .= "Développeur passionné avec une solide expérience en développement web Full Stack et une expertise particulière en technologies Symfony et React.\n\n";

        $latexCode .= "\\section*{Formation}\n";
        $latexCode .= "\\begin{tabular}{r p{13cm}}\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{2020--2022}} & \\textbf{Master en Génie Logiciel} \\\\\n";
        $latexCode .= "    & ESPRIM, Tunis \\\\\n";
        $latexCode .= "    & Spécialisation en développement web et architectures logicielles modernes \\\\[0.2cm]\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{2017--2020}} & \\textbf{Licence en Informatique} \\\\\n";
        $latexCode .= "    & Université de Tunis, Tunis \\\\\n";
        $latexCode .= "    & Mention très bien, projets en développement web et mobile\n";
        $latexCode .= "\\end{tabular}\n\n";

        $latexCode .= "\\section*{Expériences Professionnelles}\n";
        $latexCode .= "\\begin{tabular}{r p{13cm}}\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{2023--Présent}} & \\textbf{Développeur Web Full Stack} \\\\\n";
        $latexCode .= "    & Société XYZ, Tunis \\\\\n";
        $latexCode .= "    & \\begin{itemize}[leftmargin=*, nosep]\n";
        $latexCode .= "        \\item Développement d'applications web avec Symfony 6 et React 18\n";
        $latexCode .= "        \\item Implémentation d'API REST et GraphQL\n";
        $latexCode .= "        \\item Optimisation des performances et mise en place de CI/CD\n";
        $latexCode .= "      \\end{itemize} \\\\[0.2cm]\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{2021--2023}} & \\textbf{Développeur Junior} \\\\\n";
        $latexCode .= "    & ABC Tech, Tunis \\\\\n";
        $latexCode .= "    & \\begin{itemize}[leftmargin=*, nosep]\n";
        $latexCode .= "        \\item Maintenance et développement de sites web e-commerce\n";
        $latexCode .= "        \\item Migration d'applications vers des architectures modernes\n";
        $latexCode .= "        \\item Participation aux revues de code et à l'amélioration des processus\n";
        $latexCode .= "      \\end{itemize}\n";
        $latexCode .= "\\end{tabular}\n\n";

        $latexCode .= "\\section*{Compétences}\n";
        $latexCode .= "\\begin{tabular}{r p{13cm}}\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{Langages:}} & PHP, JavaScript/TypeScript, HTML5, CSS3, SQL \\\\\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{Frameworks:}} & Symfony, React, Vue.js, Next.js, Bootstrap, Tailwind CSS \\\\\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{Outils:}} & Git, Docker, Kubernetes, CI/CD, VS Code, PHPStorm \\\\\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{Bases de données:}} & MySQL, PostgreSQL, MongoDB, Redis\n";
        $latexCode .= "\\end{tabular}\n\n";

        $latexCode .= "\\section*{Langues}\n";
        $latexCode .= "\\begin{tabular}{r p{13cm}}\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{Arabe:}} & Langue maternelle \\\\\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{Français:}} & Courant (C1) \\\\\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{Anglais:}} & Professionnel (B2)\n";
        $latexCode .= "\\end{tabular}\n\n";

        $latexCode .= "\\section*{Projets personnels}\n";
        $latexCode .= "\\begin{tabular}{r p{13cm}}\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{EsprimCareer}} & Plateforme web de génération de CV et de gestion de carrière \\\\\n";
        $latexCode .= "    & Technologies utilisées : Symfony, React, LaTeX, Docker \\\\\n";
        $latexCode .= "    & \\textit{Fonctionnalités : Génération de CV professionnels avec support LaTeX, gestion de profils, intégration d'éditeurs avancés}\n";
        $latexCode .= "\\end{tabular}\n\n";

        $latexCode .= "\\vfill\n";
        $latexCode .= "\\begin{center}\n";
        $latexCode .= "    \\textit{Document généré par EsprimCareer - " . (new \DateTime())->format('Y-m-d') . "}\n";
        $latexCode .= "\\end{center}\n\n";

        $latexCode .= "\\end{document}\n";

        return $latexCode;
    }

    /**
     * Méthode pour générer un CV avec ModernCV intégrée directement dans le code
     * (sans dépendre de fichiers templates externes)
     */
    #[Route("/cv-generator/moderncv", name: "app_cv_moderncv")]
    public function generateModernCV(Request $request): Response
    {
        // Track template selection
        $this->trackTemplateSelection($request, 'moderncv');

        if (!$this->latexPdfGenerator) {
            return new Response("Le service LatexPdfGenerator n'est pas configuré correctement.", 500);
        }

        try {
            // Récupération des données du formulaire ou utilisation de données par défaut
            $firstName = $request->request->get('firstName', 'Mohamed');
            $lastName = $request->request->get('lastName', 'Abidi');
            $position = $request->request->get('position', 'Développeur Full Stack');
            $phone = $request->request->get('phone', '+216 xx xxx xxx');
            $email = $request->request->get('email', 'mohamed.abidi@example.com');

            // Génération du code LaTeX directement dans le code
            $latexCode = $this->generateModernCVTemplate($firstName, $lastName, $position, $phone, $email);

            // Convertir le code LaTeX en PDF
            $documentId = uniqid('cv_');
            $pdfPath = $this->latexPdfGenerator->convertLatexToPdf($latexCode, $documentId);

            if (!$pdfPath || !file_exists($pdfPath)) {
                throw new \Exception("Échec de la génération du PDF. Vérifiez le journal des erreurs.");
            }

            // Créer une réponse binaire
            $response = new BinaryFileResponse($pdfPath);
            $response->setContentDisposition(
                ResponseHeaderBag::DISPOSITION_ATTACHMENT,
                $firstName . '-' . $lastName . '-CV-ModernCV.pdf'
            );

            return $response;

        } catch (\Exception $e) {
            $this->logger->error("Error generating ModernCV PDF: {$e->getMessage()}", ['exception' => $e]);

            // Retourner une réponse d'erreur avec plus de détails
            return new Response(
                '<html><body>
                <h1>Erreur lors de la génération du CV ModernCV</h1>
                <p>' . htmlspecialchars($e->getMessage()) . '</p>
                <p><a href="/cv" class="btn btn-primary">Retourner au générateur de CV</a></p>
                <hr>
                <h3>Détails techniques (environnement de développement uniquement)</h3>
                <pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>
                </body></html>',
                500,
                ['Content-Type' => 'text/html']
            );
        }
    }

    /**
     * Méthode pour prévisualiser le CV avec ModernCV intégré directement dans le code
     */
    #[Route("/cv-generator/moderncv/preview", name: "app_cv_moderncv_preview")]
    public function previewModernCV(Request $request): Response
    {
        // Track template selection
        $this->trackTemplateSelection($request, 'moderncv_preview');

        if (!$this->latexPdfGenerator) {
            return new Response("Le service LatexPdfGenerator n'est pas configuré correctement.", 500);
        }

        try {
            // Récupération des données du formulaire ou utilisation de données par défaut
            $firstName = 'Mohamed';
            $lastName = 'Abidi';
            $position = 'Développeur Full Stack';
            $phone = '+216 xx xxx xxx';
            $email = 'mohamed.abidi@example.com';

            // Génération du code LaTeX directement dans le code
            $latexCode = $this->generateModernCVTemplate($firstName, $lastName, $position, $phone, $email);

            // Convertir le code LaTeX en PDF
            $documentId = uniqid('cv_preview_');
            $pdfPath = $this->latexPdfGenerator->convertLatexToPdf($latexCode, $documentId);

            if (!$pdfPath || !file_exists($pdfPath)) {
                throw new \Exception("Échec de la prévisualisation du PDF. Vérifiez le journal des erreurs.");
            }

            // Obtenir le nom du fichier à partir du chemin
            $filenameParts = explode('/', $pdfPath);
            $filename = end($filenameParts);

            // Génération de l'URL pour visualiser le PDF
            $pdfUrl = $this->generateUrl('app_latex_view_pdf', ['filename' => $filename]);

            return $this->render('Templates/cv/preview.html.twig', [
                'pdf_url' => $pdfUrl,
                'current_time' => new \DateTime('now', new \DateTimeZone('UTC')),
                'username' => 'Mohamed-abidi-95'
            ]);

        } catch (\Exception $e) {
            $this->logger->error("Error previewing ModernCV PDF: {$e->getMessage()}", ['exception' => $e]);

            return $this->render('Templates/cv/error.html.twig', [
                'error' => $e->getMessage(),
                'current_time' => new \DateTime('now', new \DateTimeZone('UTC')),
                'username' => 'Mohamed-abidi-95'
            ]);
        }
    }

    /**
     * Méthode pour générer le template ModernCV directement dans le code PHP
     * Cette méthode remplace l'utilisation du fichier template externe
     */
    private function generateModernCVTemplate(string $name, string $surname, string $title, string $phone, string $email): string
    {
        // Les expériences et autres données peuvent être passées en paramètres supplémentaires au besoin
        $experiences = $this->formatExperiencesForLatexString();
        $education = $this->formatEducationForLatexString();
        $skills = $this->formatSkillsForLatexString();
        $languages = $this->formatLanguagesForLatexString();

        // Utiliser la concaténation de chaînes au lieu de Heredoc
        $latexCode = "\\documentclass[11pt,a4paper]{article}\n";
        $latexCode .= "\\usepackage[utf8]{inputenc}\n";
        $latexCode .= "\\usepackage[T1]{fontenc}\n";
        $latexCode .= "\\usepackage{geometry}\n";
        $latexCode .= "\\usepackage{array}\n";
        $latexCode .= "\\usepackage{xcolor}\n";
        $latexCode .= "\\usepackage{hyperref}\n";
        $latexCode .= "\\usepackage{enumitem}\n";
        $latexCode .= "\\usepackage{titlesec}\n\n";

        $latexCode .= "\\geometry{a4paper, margin=2cm}\n";
        $latexCode .= "\\definecolor{accent}{RGB}{0,100,200}\n";
        $latexCode .= "\\hypersetup{colorlinks=true, linkcolor=accent, urlcolor=accent}\n\n";

        $latexCode .= "\\titleformat{\\section}{\\Large\\bfseries}{}{0em}{\\textcolor{accent}{}}[\\titlerule]\n";
        $latexCode .= "\\titlespacing*{\\section}{0pt}{12pt}{6pt}\n\n";

        $latexCode .= "\\begin{document}\n\n";

        $latexCode .= "\\begin{center}\n";
        $latexCode .= "    {\\huge\\textbf{" . $name . " " . $surname . "}}\\\\[0.5cm]\n";
        $latexCode .= "    {\\large " . $title . "}\\\\[0.3cm]\n";
        $latexCode .= "    \\begin{tabular}{r l}\n";
        $latexCode .= "        Téléphone: & " . $phone . " \\\\\n";
        $latexCode .= "        Email: & \\href{mailto:" . $email . "}{" . $email . "}\n";
        $latexCode .= "    \\end{tabular}\n";
        $latexCode .= "\\end{center}\n\n";

        $latexCode .= "\\section*{Formation}\n" . $education . "\n\n";
        $latexCode .= "\\section*{Expériences Professionnelles}\n" . $experiences . "\n\n";
        $latexCode .= "\\section*{Compétences}\n" . $skills . "\n\n";
        $latexCode .= "\\section*{Langues}\n" . $languages . "\n\n";

        $latexCode .= "\\end{document}\n";

        return $latexCode;
    }

    /**
     * Méthode utilitaire pour formater les expériences en texte LaTeX
     */
    private function formatExperiencesForLatexString(): string
    {
        // Données hardcodées, à remplacer par des données dynamiques au besoin
        $latexCode = "\\begin{tabular}{r p{12cm}}\n";
        $latexCode .= "    \\textbf{2023--Présent} & \\textbf{Développeur Web Full Stack, Société XYZ, Tunis} \\\\\n";
        $latexCode .= "                          & \\begin{itemize}[leftmargin=*]\n";
        $latexCode .= "                             \\item Développement d'applications web avec Symfony et React\n";
        $latexCode .= "                             \\item Intégration de services tiers et APIs\n";
        $latexCode .= "                             \\item Optimisation des performances et refactoring de code\n";
        $latexCode .= "                            \\end{itemize} \\\\[0.2cm]\n";
        $latexCode .= "    \\textbf{2021--2023} & \\textbf{Développeur Junior, ABC Tech, Tunis} \\\\\n";
        $latexCode .= "                          & \\begin{itemize}[leftmargin=*]\n";
        $latexCode .= "                             \\item Maintenance et développement de sites web\n";
        $latexCode .= "                             \\item Mise en place d'outils de déploiement continu\n";
        $latexCode .= "                            \\end{itemize}\n";
        $latexCode .= "\\end{tabular}\n";

        return $latexCode;
    }

    /**
     * Méthode utilitaire pour formater l'éducation en texte LaTeX
     */
    private function formatEducationForLatexString(): string
    {
        // Données hardcodées, à remplacer par des données dynamiques au besoin
        $latexCode = "\\begin{tabular}{r p{12cm}}\n";
        $latexCode .= "    \\textbf{2020--2022} & \\textbf{Master en Génie Logiciel} \\\\\n";
        $latexCode .= "                        & ESPRIM, Tunis \\\\[0.2cm]\n";
        $latexCode .= "    \\textbf{2017--2020} & \\textbf{Licence en Informatique} \\\\\n";
        $latexCode .= "                        & Université de Tunis, Tunis\n";
        $latexCode .= "\\end{tabular}\n";

        return $latexCode;
    }

    /**
     * Méthode utilitaire pour formater les compétences en texte LaTeX
     */
    private function formatSkillsForLatexString(): string
    {
        // Données hardcodées, à remplacer par des données dynamiques au besoin
        $latexCode = "\\begin{tabular}{r p{12cm}}\n";
        $latexCode .= "    \\textbf{Langages:} & PHP, JavaScript, HTML, CSS, SQL \\\\\n";
        $latexCode .= "    \\textbf{Frameworks:} & Symfony, React, Vue.js, Bootstrap \\\\\n";
        $latexCode .= "    \\textbf{Outils:} & Git, Docker, VS Code, PHPStorm \\\\\n";
        $latexCode .= "    \\textbf{Bases de données:} & MySQL, PostgreSQL, MongoDB\n";
        $latexCode .= "\\end{tabular}\n";

        return $latexCode;
    }

    /**
     * Méthode utilitaire pour formater les langues en texte LaTeX
     */
    private function formatLanguagesForLatexString(): string
    {
        // Données hardcodées, à remplacer par des données dynamiques au besoin
        $latexCode = "\\begin{tabular}{r p{12cm}}\n";
        $latexCode .= "    \\textbf{Arabe:} & Langue maternelle \\\\\n";
        $latexCode .= "    \\textbf{Français:} & Courant (C1) \\\\\n";
        $latexCode .= "    \\textbf{Anglais:} & Professionnel (B2)\n";
        $latexCode .= "\\end{tabular}\n";

        return $latexCode;
    }

    /**
     * ANCIENNES méthodes de formatage maintenues pour compatibilité
     * Ces méthodes peuvent être utilisées si vous avez besoin de générer des
     * données dans un format particulier pour d'autres parties de votre application
     */
}
==================================================

Fichier: src\Service\LatexService.php
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\src\Service\LatexService.php
-----
<?php

namespace App\Service;

use Symfony\Component\Process\Process;
use Symfony\Component\Process\Exception\ProcessFailedException;
use Symfony\Component\Filesystem\Filesystem;
use Psr\Log\LoggerInterface;

class LatexService
{
    private string $projectDir;
    private string $tempDir;
    private string $outputDir;
    private string $latexBinPath;
    private LoggerInterface $logger;
    private Filesystem $filesystem;

    public function __construct(string $projectDir, LoggerInterface $logger)
    {
        $this->projectDir = $projectDir;
        $this->tempDir = $projectDir . DIRECTORY_SEPARATOR . 'var' . DIRECTORY_SEPARATOR . 'latex' . DIRECTORY_SEPARATOR . 'temp';
        $this->outputDir = $projectDir . DIRECTORY_SEPARATOR . 'var' . DIRECTORY_SEPARATOR . 'latex' . DIRECTORY_SEPARATOR . 'output';
        $this->logger = $logger;
        $this->filesystem = new Filesystem();

        // Chemin vers l'exécutable pdflatex de MikTeX
        $this->latexBinPath = 'C:\Program Files\MiKTeX\miktex\bin\x64\pdflatex.exe';

        // Créer les répertoires s'ils n'existent pas
        $this->ensureDirectoriesExist();
    }

    /**
     * Run diagnostic tests for LaTeX setup
     */
    public function runDiagnostics(): array
    {
        $results = [];

        // Check if pdflatex exists
        $pathExists = file_exists($this->latexBinPath);
        $results['pdflatex_exists'] = $pathExists;

        // Try to run pdflatex --version
        $process = new Process([$this->latexBinPath, '--version']);
        try {
            $process->run();
            $results['pdflatex_version'] = $process->isSuccessful() ? trim($process->getOutput()) : 'Failed to get version';
        } catch (\Exception $e) {
            $results['pdflatex_version'] = 'Error: ' . $e->getMessage();
        }

        // Test with minimal LaTeX document
        $testLatex = '\documentclass{article}\begin{document}Hello World\end{document}';
        $testResult = $this->generatePdf($testLatex);
        $results['test_compilation'] = $testResult['success'];
        $results['test_output'] = $testResult['success'] ? 'Test document compiled successfully' : $testResult['error'];

        return $results;
    }

    /**
     * Convertit un code LaTeX en PDF
     *
     * @param string $latexCode Le code LaTeX à convertir
     * @param string $outputDirectory Le répertoire où le PDF sera généré (optionnel)
     * @return array Résultat de l'opération contenant success, error, pdf_path et filename
     */
    public function generatePdf(string $latexCode, string $outputDirectory = null): array
    {
        $outputDirectory = $outputDirectory ?: $this->outputDir;

        // Ensure directory exists
        if (!$this->filesystem->exists($outputDirectory)) {
            $this->filesystem->mkdir($outputDirectory, 0755);
        }

        // Create unique filenames
        $uniqueId = 'latex_' . uniqid();
        $tempFilename = $uniqueId . '.tex';
        $tempFilePath = $this->tempDir . DIRECTORY_SEPARATOR . $tempFilename;
        $pdfFilePath = $outputDirectory . DIRECTORY_SEPARATOR . $uniqueId . '.pdf';

        // Write LaTeX content to file
        $this->filesystem->dumpFile($tempFilePath, $latexCode);

        if ($this->logger) {
            $this->logger->info('LaTeX temp file created at: ' . $tempFilePath);
            $this->logger->info('LaTeX content: ' . substr($latexCode, 0, 500) . '...');
        }

        // Create and run the process
        $process = new Process([
            $this->latexBinPath,
            '-interaction=nonstopmode',
            '-halt-on-error',
            '-output-directory=' . $this->tempDir,
            $tempFilePath
        ]);

        try {
            $process->setTimeout(60); // Adjust timeout as needed
            $process->run();

            // Log output for debugging
            if ($this->logger) {
                $this->logger->info('LaTeX process output: ' . $process->getOutput());
                $this->logger->info('LaTeX process error output: ' . $process->getErrorOutput());
            }

            // Check if process was successful
            if (!$process->isSuccessful()) {
                // Extract the specific error message from the LaTeX output
                $errorMessage = 'LaTeX compilation error.';
                $output = $process->getOutput();

                // Look for common LaTeX error patterns
                if (preg_match('/!(.*?)at line (\d+)/', $output, $matches)) {
                    $errorMessage .= ' ' . $matches[1] . ' (line ' . $matches[2] . ')';
                } elseif (strpos($output, '!') !== false) {
                    // Extract text after the last '!' which often contains the error
                    $errorParts = explode('!', $output);
                    $lastError = trim(end($errorParts));
                    $errorMessage .= ' ' . substr($lastError, 0, 100);
                }

                return [
                    'success' => false,
                    'error' => $errorMessage,
                    'output' => $process->getOutput(),
                    'error_output' => $process->getErrorOutput()
                ];
            }

            // Check if PDF was created
            $generatedPdf = $this->tempDir . DIRECTORY_SEPARATOR . $uniqueId . '.pdf';
            if (!$this->filesystem->exists($generatedPdf)) {
                return [
                    'success' => false,
                    'error' => 'PDF file was not created. Check if MikTeX is properly installed.',
                    'output' => $process->getOutput()
                ];
            }

            // Move the PDF to the output directory
            $this->filesystem->copy($generatedPdf, $pdfFilePath, true);

            // Cleanup temporary files
            $this->cleanup($uniqueId);

            return [
                'success' => true,
                'pdf_path' => $pdfFilePath,
                'filename' => $uniqueId . '.pdf',
                'output' => $process->getOutput()
            ];
        } catch (\Exception $e) {
            if ($this->logger) {
                $this->logger->error('LaTeX PDF generation failed: ' . $e->getMessage());
                $this->logger->error('Command: ' . $process->getCommandLine());
                $this->logger->error('Output: ' . $process->getOutput());
                $this->logger->error('Error Output: ' . $process->getErrorOutput());
            }

            // Cleanup temporary files in case of exception
            $this->cleanup($uniqueId);

            return [
                'success' => false,
                'error' => $e->getMessage(),
                'output' => $process->getOutput(),
                'error_output' => $process->getErrorOutput()
            ];
        }
    }

    /**
     * Pour la rétrocompatibilité - wrapper autour de generatePdf
     */
    public function convertLatexToPdf(string $latexCode, string $engine = 'pdflatex'): ?string
    {
        $result = $this->generatePdf($latexCode, $this->outputDir);

        if ($result['success']) {
            return $result['pdf_path'];
        }

        if ($this->logger) {
            $this->logger->error('LaTeX to PDF conversion failed: ' . $result['error']);
        }

        throw new \RuntimeException($result['error']);
    }

    /**
     * Nettoie les fichiers temporaires g��nérés
     */
    private function cleanup(string $documentId): void
    {
        // Extensions des fichiers à supprimer
        $extensions = ['tex', 'aux', 'log', 'out', 'toc', 'lof', 'lot', 'nav', 'snm', 'fls', 'fdb_latexmk'];

        foreach ($extensions as $ext) {
            $file = $this->tempDir . DIRECTORY_SEPARATOR . $documentId . '.' . $ext;
            if (file_exists($file)) {
                try {
                    unlink($file);
                    $this->logger->debug('Fichier temporaire supprimé: ' . basename($file));
                } catch (\Exception $e) {
                    $this->logger->warning('Impossible de supprimer le fichier temporaire: ' . basename($file));
                }
            }
        }
    }

    /**
     * S'assure que les répertoires nécessaires existent
     */
    private function ensureDirectoriesExist(): void
    {
        // Méthode spécifique pour Windows pour créer les répertoires imbriqués
        $this->createDirRecursive($this->tempDir);
        $this->createDirRecursive($this->outputDir);
    }

    /**
     * Crée un répertoire de manière récursive (compatible Windows)
     */
    private function createDirRecursive(string $dir): void
    {
        if (!is_dir($dir)) {
            if (!mkdir($dir, 0777, true) && !is_dir($dir)) {
                $this->logger->error("Impossible de créer le répertoire: {$dir}");
                throw new \RuntimeException("Impossible de créer le répertoire: {$dir}");
            }
            $this->logger->info('Répertoire créé: ' . $dir);
        }
    }

    /**
     * Exécute un test de compilation LaTeX simple
     *
     * @return array Informations sur le résultat du test
     */
    public function runLatexTest(): array
    {
        $result = [
            'success' => false,
            'message' => '',
            'pdf_path' => null,
            'error' => null
        ];

        // Code LaTeX minimal
        $latexCode = '\documentclass{article}
\begin{document}
Hello World! This is a LaTeX test.
\end{document}';

        try {
            $generateResult = $this->generatePdf($latexCode);

            if ($generateResult['success']) {
                $result['success'] = true;
                $result['message'] = 'Test réussi! PDF généré avec succès.';
                $result['pdf_path'] = $generateResult['pdf_path'];
            } else {
                $result['message'] = 'Échec de la génération du PDF de test: ' . $generateResult['error'];
                $result['error'] = $generateResult['error'];
            }
        } catch (\Exception $e) {
            $result['error'] = $e->getMessage();
            $result['message'] = 'Exception lors du test: ' . $e->getMessage();
        }

        return $result;
    }

    /**
     * Vérifie si LaTeX est installé et renvoie des informations sur l'installation
     *
     * @return array Informations sur l'installation LaTeX
     */
    public function getLatexInfo(): array
    {
        $info = [
            'installed' => false,
            'version' => null,
            'engines' => [],
            'error' => null,
            'miktex_path' => $this->latexBinPath,
            'miktex_exists' => file_exists($this->latexBinPath)
        ];

        try {
            // Vérifier si pdflatex est installé
            $process = new Process([$this->latexBinPath, '--version']);
            $process->run();

            if ($process->isSuccessful()) {
                $info['installed'] = true;
                $output = $process->getOutput();
                $firstLine = strtok($output, "\r\n");
                $info['version'] = $firstLine;
                $info['engines'][] = 'pdflatex';

                // Vérifier xelatex
                $xelatexPath = dirname($this->latexBinPath) . DIRECTORY_SEPARATOR . 'xelatex.exe';
                if (file_exists($xelatexPath)) {
                    $info['engines'][] = 'xelatex';
                }

                // Vérifier lualatex
                $lualatexPath = dirname($this->latexBinPath) . DIRECTORY_SEPARATOR . 'lualatex.exe';
                if (file_exists($lualatexPath)) {
                    $info['engines'][] = 'lualatex';
                }
            }
        } catch (\Exception $e) {
            $info['error'] = $e->getMessage();
        }

        return $info;
    }
}
==================================================

Fichier: src\Controller\LatexController.php
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\src\Controller\LatexController.php
-----
<?php

namespace App\Controller;

use App\Service\LatexService;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\BinaryFileResponse;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpFoundation\ResponseHeaderBag;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\Routing\Attribute\Route;
use Symfony\Component\Filesystem\Filesystem;
use Psr\Log\LoggerInterface;

class LatexController extends AbstractController
{
    private LatexService $latexService;
    private LoggerInterface $logger;
    private string $outputDir;
    private string $tempDir;
    private string $projectDir;
    private string $latexBinPath;

    public function __construct(LatexService $latexService, LoggerInterface $logger, string $projectDir = null)
    {
        $this->latexService = $latexService;
        $this->logger = $logger;

        // Ne pas appeler getParameter() dans le constructeur!
        if ($projectDir === null) {
            // Utilisez cette astuce pour obtenir le chemin du projet
            $this->projectDir = dirname(__DIR__, 2); // Remonte de 2 niveaux depuis src/Controller
        } else {
            $this->projectDir = $projectDir;
        }

        // Définir les chemins sans appeler getParameter()
        $this->tempDir = $this->projectDir . DIRECTORY_SEPARATOR . 'var' . DIRECTORY_SEPARATOR . 'latex' . DIRECTORY_SEPARATOR . 'temp';
        $this->outputDir = $this->projectDir . DIRECTORY_SEPARATOR . 'var' . DIRECTORY_SEPARATOR . 'latex' . DIRECTORY_SEPARATOR . 'output';

        // Chemin vers pdflatex de MikTeX - mis à jour avec le chemin correct
        $this->latexBinPath = 'C:\Program Files\MiKTeX\miktex\bin\x64\pdflatex.exe';

        // Créer les répertoires nécessaires
        $this->ensureDirectoriesExist();
    }

    /**
     * S'assure que les répertoires nécessaires existent
     */
    private function ensureDirectoriesExist(): void
    {
        // Méthode pour Windows
        $varDir = $this->projectDir . DIRECTORY_SEPARATOR . 'var';
        $latexDir = $varDir . DIRECTORY_SEPARATOR . 'latex';
        $tempDir = $this->tempDir;
        $outputDir = $this->outputDir;

        $dirs = [$varDir, $latexDir, $tempDir, $outputDir];

        foreach ($dirs as $dir) {
            if (!is_dir($dir)) {
                if (!mkdir($dir, 0777, true) && !is_dir($dir)) {
                    if ($this->logger) {
                        $this->logger->error("Impossible de créer le répertoire: " . $dir);
                    }
                } else {
                    if ($this->logger) {
                        $this->logger->info("Répertoire créé: " . $dir);
                    }
                }
            }
        }
    }

    #[Route('/latex', name: 'app_latex')]
    public function index(): Response
    {
        return $this->render('latex/index.html.twig');
    }

    #[Route('/latex/convert', name: 'app_latex_convert', methods: ['POST'])]
    public function convertLatex(Request $request): Response
    {
        $latexCode = $request->request->get('latex', '');

        if (empty($latexCode)) {
            $this->addFlash('error', 'Le code LaTeX ne peut pas être vide.');
            return $this->redirectToRoute('app_latex');
        }

        // Sanitize input
        $latexCode = $this->sanitizeLatexInput($latexCode);

        try {
            // Utiliser le service LatexService pour convertir le code LaTeX en PDF
            $result = $this->latexService->generatePdf($latexCode, $this->outputDir);

            if (!$result['success']) {
                $this->addFlash('error', 'Erreur lors de la conversion du code LaTeX en PDF: ' . $result['error']);
                $this->logger->error('PDF non généré: ' . $result['error']);
                return $this->redirectToRoute('app_latex');
            }

            $response = new BinaryFileResponse($result['pdf_path']);
            $response->setContentDisposition(
                ResponseHeaderBag::DISPOSITION_ATTACHMENT,
                'document.pdf'
            );

            // Planifier le nettoyage des fichiers temporaires dans 1 heure
            $this->cleanupOldFiles();

            return $response;
        } catch (\Exception $e) {
            $this->logger->error('Erreur lors de la conversion LaTeX: ' . $e->getMessage());
            $this->addFlash('error', 'Erreur: ' . $e->getMessage());
            return $this->redirectToRoute('app_latex');
        }
    }

    #[Route('/latex/preview', name: 'app_latex_preview', methods: ['POST'])]
    public function previewLatex(Request $request): JsonResponse
    {
        // Débogage
        $this->logger->info('Requête de prévisualisation LaTeX reçue');

        // Vérifier si la requête est Ajax ou standard
        $isAjax = $request->isXmlHttpRequest();
        $contentType = $request->headers->get('Content-Type');
        $this->logger->info('Type de requête: ' . ($isAjax ? 'Ajax' : 'Standard') . ', Content-Type: ' . $contentType);

        // Obtenir le code LaTeX selon la méthode
        if (str_contains($contentType ?? '', 'application/json')) {
            $data = json_decode($request->getContent(), true);
            $latexCode = $data['latex'] ?? '';
            $this->logger->info('Données JSON reçues');
        } else {
            $latexCode = $request->request->get('latex', '');
            $this->logger->info('Données de formulaire reçues');
        }

        if (empty($latexCode)) {
            $this->logger->warning('Code LaTeX vide reçu');
            return $this->json(['success' => false, 'error' => 'Le code LaTeX ne peut pas être vide.']);
        }

        // Log la taille du code LaTeX reçu
        $this->logger->info('Taille du code LaTeX reçu: ' . strlen($latexCode) . ' caractères');

        // Sanitize input
        $latexCode = $this->sanitizeLatexInput($latexCode);

        try {
            $this->logger->info('Début de la conversion LaTeX vers PDF');

            // Utiliser le service LatexService pour convertir le code LaTeX en PDF
            $result = $this->latexService->generatePdf($latexCode, $this->outputDir);

            if (!$result['success']) {
                $this->logger->error('Échec de génération du PDF de prévisualisation: ' . $result['error']);
                return $this->json([
                    'success' => false,
                    'error' => 'Erreur lors de la conversion du code LaTeX en PDF: ' . $result['error']
                ]);
            }

            $this->logger->info('PDF généré avec succès: ' . $result['pdf_path']);
            $pdfUrl = $this->generateUrl('app_latex_view_pdf', ['filename' => $result['filename']]);

            return $this->json([
                'success' => true,
                'pdfUrl' => $pdfUrl,
                'filename' => $result['filename']
            ]);
        } catch (\Exception $e) {
            $this->logger->error('Exception lors de la prévisualisation: ' . $e->getMessage());
            return $this->json([
                'success' => false,
                'error' => 'Erreur: ' . $e->getMessage()
            ]);
        }
    }

    #[Route('/latex/view/{filename}', name: 'app_latex_view_pdf', methods: ['GET'])]
    public function viewPdf(string $filename): Response
    {
        // Validation de sécurité du nom de fichier
        if (!preg_match('/^[a-zA-Z0-9_-]+\.pdf$/', $filename)) {
            $this->logger->warning('Tentative d\'accès à un fichier PDF avec un nom invalide: ' . $filename);
            throw $this->createNotFoundException('Le fichier PDF demandé est invalide.');
        }

        $pdfPath = $this->outputDir . DIRECTORY_SEPARATOR . $filename;

        if (!file_exists($pdfPath)) {
            $this->logger->warning('Tentative d\'accès à un fichier PDF inexistant: ' . $filename);
            throw $this->createNotFoundException('Le fichier PDF n\'existe pas.');
        }

        $response = new BinaryFileResponse($pdfPath);
        $response->setContentDisposition(ResponseHeaderBag::DISPOSITION_INLINE);
        $response->headers->set('Content-Type', 'application/pdf');

        return $response;
    }

    #[Route('/latex/upload', name: 'app_latex_upload', methods: ['POST'])]
    public function uploadLatexFile(Request $request): Response
    {
        $uploadedFile = $request->files->get('latex_file');

        if (!$uploadedFile) {
            $this->addFlash('error', 'Aucun fichier n\'a été téléchargé.');
            return $this->redirectToRoute('app_latex');
        }

        // Vérifier l'extension
        $extension = $uploadedFile->getClientOriginalExtension();
        if ($extension !== 'tex') {
            $this->addFlash('error', 'Le fichier doit être un fichier .tex');
            return $this->redirectToRoute('app_latex');
        }

        try {
            // Lire le contenu du fichier
            $latexCode = file_get_contents($uploadedFile->getPathname());

            // Sanitize le contenu
            $latexCode = $this->sanitizeLatexInput($latexCode);

            // Convertir en PDF
            $result = $this->latexService->generatePdf($latexCode, $this->outputDir);

            if (!$result['success']) {
                $this->addFlash('error', 'Erreur lors de la conversion du fichier LaTeX: ' . $result['error']);
                return $this->redirectToRoute('app_latex');
            }

            // Renvoyer le PDF
            $response = new BinaryFileResponse($result['pdf_path']);
            $response->setContentDisposition(
                ResponseHeaderBag::DISPOSITION_ATTACHMENT,
                str_replace('.tex', '.pdf', $uploadedFile->getClientOriginalName())
            );

            return $response;
        } catch (\Exception $e) {
            $this->logger->error('Erreur lors du traitement du fichier LaTeX: ' . $e->getMessage());
            $this->addFlash('error', 'Erreur: ' . $e->getMessage());
            return $this->redirectToRoute('app_latex');
        }
    }

    /**
     * Route pour le diagnostic LaTeX
     */
    #[Route('/latex/diagnostic', name: 'app_latex_diagnostic')]
    public function diagnostic(): Response
    {
        // Utiliser le service LatexService pour obtenir les informations de diagnostic
        $diagnosticResults = $this->latexService->runDiagnostics();

        $additionalInfo = [
            'directories' => [
                'temp' => [
                    'path' => $this->tempDir,
                    'exists' => is_dir($this->tempDir),
                    'writable' => is_dir($this->tempDir) && is_writable($this->tempDir)
                ],
                'output' => [
                    'path' => $this->outputDir,
                    'exists' => is_dir($this->outputDir),
                    'writable' => is_dir($this->outputDir) && is_writable($this->outputDir)
                ]
            ],
            'latexBinPath' => $this->latexBinPath,
            'miktexExists' => file_exists($this->latexBinPath)
        ];

        return $this->render('latex/diagnostic.html.twig', [
            'diagnostics' => $diagnosticResults,
            'additionalInfo' => $additionalInfo
        ]);
    }

    /**
     * Méthode utilitaire pour sanitizer les entrées LaTeX
     */
    private function sanitizeLatexInput(string $latexCode): string
    {
        // Liste des commandes à bloquer pour la sécurité
        $dangerousCommands = [
            '\\input', '\\include', '\\write18', '\\immediate', '\\pipe', '\\openout',
            '\\catcode', '\\shell', '\\def\\', '\\edef\\', '\\gdef\\', '\\read'
        ];

        foreach ($dangerousCommands as $command) {
            $latexCode = str_replace($command, '\\textbackslash ' . substr($command, 1), $latexCode);
        }

        return $latexCode;
    }

    /**
     * Nettoie les anciens fichiers PDF générés
     */
    private function cleanupOldFiles(): void
    {
        try {
            $now = time();
            $maxAge = 3600 * 24; // 24 heures

            $files = glob($this->outputDir . DIRECTORY_SEPARATOR . '*.pdf');
            if ($files) {
                foreach ($files as $file) {
                    if ($now - filemtime($file) > $maxAge) {
                        @unlink($file);
                        $this->logger->info('PDF temporaire supprimé: ' . basename($file));
                    }
                }
            }
        } catch (\Exception $e) {
            $this->logger->warning('Erreur lors du nettoyage des fichiers: ' . $e->getMessage());
        }
    }

    /**
     * Route pour API Latex - ajouter une formule
     */
    #[Route('/latex/api/add-formula', name: 'app_latex_add_formula', methods: ['POST'])]
    public function addLatexFormula(Request $request): JsonResponse
    {
        $data = json_decode($request->getContent(), true);
        $formula = $data['formula'] ?? '';
        $position = $data['position'] ?? 'generic';

        if (empty($formula)) {
            return $this->json([
                'success' => false,
                'error' => 'La formule ne peut pas être vide'
            ]);
        }

        // Valider la formule LaTeX (simple vérification)
        $openBraces = substr_count($formula, '{');
        $closeBraces = substr_count($formula, '}');

        if ($openBraces !== $closeBraces) {
            return $this->json([
                'success' => false,
                'error' => 'Formule LaTeX invalide: accolades non équilibrées'
            ]);
        }

        // Simuler l'enregistrement dans une base de données
        return $this->json([
            'success' => true,
            'formula' => $formula,
            'position' => $position,
            'id' => uniqid('formula_')
        ]);
    }

    /**
     * Pour lier à l'éditeur de CV
     */
    #[Route('/latex/edit-for-cv', name: 'app_latex_edit_for_cv')]
    public function editForCv(Request $request): Response
    {
        $position = $request->query->get('position', '');

        return $this->render('latex/edit_for_cv.html.twig', [
            'position' => $position,
            'target' => $request->query->get('target', '_parent')
        ]);
    }
}
==================================================

Fichier: public\assets\styles\latex_editor.css
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\public\assets\styles\latex_editor.css
-----
==================================================

Fichier: Templates/components/latex_button.html.twig
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\components\latex_button.html.twig
-----
{# Bouton LaTeX flottant #}
<a href="/latex" id="add-latex-button" class="latex-float-button" target="_blank" title="Ajouter une équation LaTeX">
    <i class="fas fa-square-root-alt"></i>
    <span class="latex-tooltip">Mode LaTeX</span>
</a>

{# Styles pour le bouton #}
<style>
    .latex-float-button {
        position: fixed;
        bottom: 30px;
        right: 100px;
        width: 60px;
        height: 60px;
        background-color: #8bc34a;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.25);
        cursor: pointer;
        z-index: 1000;
        color: white;
        text-decoration: none;
        transition: transform 0.3s ease;
    }

    .latex-float-button:hover {
        transform: scale(1.1);
        color: white;
    }

    .latex-tooltip {
        position: absolute;
        right: 70px;
        background-color: #333;
        color: white;
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 14px;
        white-space: nowrap;
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.3s ease, visibility 0.3s;
    }

    .latex-float-button:hover .latex-tooltip {
        opacity: 1;
        visibility: visible;
    }

    /* Style pour les formules LaTeX dans l'éditeur */
    .latex-formula {
        display: inline-block;
        padding: 2px 5px;
        margin: 0 2px;
        background: #f9f9f9;
        border: 1px solid #e0e0e0;
        border-radius: 4px;
    }
</style>
==================================================

Fichier: Templates/components/latex_scripts.html.twig
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\components\latex_scripts.html.twig
-----
{# Scripts LaTeX #}
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script src="{{ asset('js/latex-editor.js') }}"></script>

{# Script de vérification des CDN #}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Vérifier si MathJax est chargé correctement
        setTimeout(function() {
            if (window.MathJax) {
                console.log('✅ MathJax est correctement chargé');
            } else {
                console.error('❌ MathJax n\'est pas chargé');
            }

            // Vérifier si Font Awesome est chargé (pour l'icône du bouton)
            const iconElement = document.querySelector('.fas.fa-square-root-alt');
            if (iconElement) {
                const computedStyle = window.getComputedStyle(iconElement, ':before');
                if (computedStyle.content && computedStyle.content !== 'none') {
                    console.log('✅ Font Awesome est correctement chargé');
                } else {
                    console.error('❌ Font Awesome n\'est pas chargé correctement');
                }
            }

            // Vérifier si les styles LaTeX sont appliqués
            const floatButton = document.querySelector('.latex-float-button');
            if (floatButton) {
                const btnStyle = window.getComputedStyle(floatButton);
                if (btnStyle.backgroundColor && btnStyle.backgroundColor !== 'rgba(0, 0, 0, 0)') {
                    console.log('✅ Styles CSS pour le bouton LaTeX sont appliqués');
                } else {
                    console.error('❌ Styles CSS pour le bouton LaTeX ne sont pas appliqués');
                }
            }
        }, 1000); // Attendre 1 seconde pour s'assurer que tout est chargé
    });
</script>
==================================================

Fichier: Templates/cv_generator/welcome.html.twig
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\cv_generator\welcome.html.twig
-----
{% extends 'base.html.twig' %}

{% block title %}ESPRIT CV Generator | Accueil{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Poppins:wght@500;600;700;800&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    {# Base & Core Styles #}
    <link rel="stylesheet" href="{{ asset('css/variables.css') }}">
    <link rel="stylesheet" href="{{ asset('css/base.css') }}">
    <link rel="stylesheet" href="{{ asset('css/typography.css') }}">
    <link rel="stylesheet" href="{{ asset('css/animations.css') }}">
    <link rel="stylesheet" href="{{ asset('css/responsive.css') }}">

    {# Section-specific Styles #}
    <link rel="stylesheet" href="{{ asset('css/hero.css') }}">
    <link rel="stylesheet" href="{{ asset('css/features.css') }}">
    <link rel="stylesheet" href="{{ asset('css/process.css') }}">
    <link rel="stylesheet" href="{{ asset('css/testimonials.css') }}">
    <link rel="stylesheet" href="{{ asset('css/faq.css') }}">
    <link rel="stylesheet" href="{{ asset('css/statistics.css') }}">
    <link rel="stylesheet" href="{{ asset('css/logo-marquee.css') }}">
    <link rel="stylesheet" href="{{ asset('css/cta.css') }}">
    <link rel="stylesheet" href="{{ asset('css/section_editor.css') }}">
    <link rel="stylesheet" href="{{ asset('css/cv-examples-enhancements.css') }}">

    {# Legacy/Additional Styles #}
    <!-- <link rel="stylesheet" href="{{ asset('css/template_carousel.css') }}"> -->

    <link rel="stylesheet" href="{{ asset('css/template-selection.css') }}">
    <!-- <link rel="stylesheet" href="{{ asset('css/welcome.css') }}"> -->
    <link rel="stylesheet" href="{{ asset('css/template_carousel.css') }}">
    <link rel="stylesheet" href="{{ asset('css/cv-examples-carousel.css') }}">

{% endblock %}

{% block body %}
    <div class="welcome-container">
    <!-- Hero Section -->
    <!-- Hero Section Optimisée -->
    <!-- Hero Section avec composant d'exemples de CV -->
    <section class="custom-hero-section">
        <!-- Formes géométriques animées -->
        <div class="hero-shape hero-shape-1"></div>
        <div class="hero-shape hero-shape-2"></div>
        <div class="hero-shape hero-shape-3"></div>

        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-6 hero-content">
                    <!-- Badge animé -->
                    <div class="hero-badge">
                        <span class="badge-pulse"></span>
                        <span class="badge-text">CV optimisés pour les recruteurs</span>
                    </div>

                    <h1 class="hero-title">Créez un CV professionnel avec <span class="hero-accent">ESPRIT</span> CV Generator</h1>
                    <p class="hero-subtitle">Générez un CV personnalisé en quelques minutes. Choisissez parmi nos templates professionnels et boostez vos chances de décrocher le job de vos rêves!</p>

                    <!-- Statistiques rapides -->
                    <div class="hero-stats">
                        <div class="hero-stat-item">
                            <div class="hero-stat-number">12K+</div>
                            <div class="hero-stat-label">CV générés</div>
                        </div>
                        <div class="hero-stat-item">
                            <div class="hero-stat-number">85%</div>
                            <div class="hero-stat-label">Taux d'entretiens</div>
                        </div>
                        <div class="hero-stat-item">
                            <div class="hero-stat-number">4.9</div>
                            <div class="hero-stat-label">Note moyenne</div>
                        </div>
                    </div>

                    <div class="hero-buttons">
                        <a href="{{ path('app_cv_generator') }}" class="btn btn-hero-primary">
                            <i class="fas fa-file-alt me-2"></i>Créer mon CV
                        </a>
                        <a href="#templates" class="btn btn-hero-secondary">
                            <i class="fas fa-palette me-2"></i>Voir les templates
                        </a>
                    </div>
                </div>

                <!-- Composant de prévisualisation de CV compact -->
                <div class="col-lg-6">
                    <div class="cv-example-showcase">
                        <div class="cv-example-container">
                            <!-- Les images de CV qui défilent -->
                            <div class="cv-examples-slider">
                                <div class="cv-example-slide active">
                                    <img src="{{ asset('images/cvs/ismail.png') }}" alt="CV Template Tech" class="cv-example-image">
                                    <div class="cv-example-label">Template Tech</div>
                                </div>
                                <div class="cv-example-slide">
                                    <img src="{{ asset('images/cvs/executive.jpg') }}" alt="CV Template Executive" class="cv-example-image">
                                    <div class="cv-example-label">ESPRIT Original</div>
                                </div>
                                <div class="cv-example-slide">
                                    <img src="{{ asset('images/cvs/6.png') }}" alt="CV Template Creative" class="cv-example-image">
                                    <div class="cv-example-label">Template Creative</div>
                                </div>
                            </div>

                            <!-- Points de navigation -->
                            <div class="cv-examples-navigation">
                                <span class="cv-nav-dot active" data-slide="0"></span>
                                <span class="cv-nav-dot" data-slide="1"></span>
                                <span class="cv-nav-dot" data-slide="2"></span>
                            </div>
                        </div>

                        <!-- Éléments décoratifs -->
                        <div class="decoration-element decoration-1">
                            <i class="fas fa-check-circle"></i>
                        </div>
                        <div class="decoration-element decoration-2">
                            <i class="fas fa-star"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Current Date and Time -->

    </section>
    <section id="templates" class="template-selection-section">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Choisissez Votre Template</h2>
                <p class="section-subtitle">Sélectionnez parmi nos designs professionnels adaptés à différents domaines</p>
            </div>

            <!-- Nouveau carousel moderne -->
            <div class="modern-carousel-container animate-on-scroll">
                <!-- Contrôles principaux -->
                <div class="modern-carousel-controls">
                    <button class="modern-carousel-arrow prev" id="carousel-prev" aria-label="Template précédent">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <div class="carousel-counter">
                        <span id="current-template">1</span><span>/</span><span id="total-templates">7</span>
                    </div>
                    <button class="modern-carousel-arrow next" id="carousel-next" aria-label="Template suivant">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>

                <!-- Carousel principal -->
                <div class="modern-carousel-wrapper" id="template-carousel">
                    <!-- Template 1 - Moderne/Professionnel -->
                    <div class="modern-carousel-item active" data-carousel-item="0" data-template="template1">
                        <div class="modern-template-card">
                            <div class="template-preview-container">
                                <img src="{{ asset('images/cvs/executive.jpg') }}" alt="Template Tech Expert" class="template-preview" onerror="this.src='https://placeholder.pics/svg/400x600/DEDEDE/555555/Template%201'">
                                <div class="template-overlay">
                                    <span class="preview-badge"><i class="fas fa-eye"></i> Aperçu</span>
                                </div>
                            </div>
                            <div class="modern-template-details">
                                <div class="template-header">
                                    <h3 class="template-title">ESPRIT Original</h3>
                                    <div class="template-rating">
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star-half-alt"></i>
                                        <span class="rating-count">(124)</span>
                                    </div>
                                </div>
                                <p class="template-description">Un design moderne parfait pour les profils d'ingénierie et tech</p>
                                <div class="template-categories">
                                    <span class="category-tag"><i class="fas fa-code"></i> Tech</span>
                                    <span class="category-tag"><i class="fas fa-cog"></i> Ingénierie</span>
                                    <span class="category-tag"><i class="fas fa-laptop-code"></i> IT</span>
                                </div>
                                <div class="template-actions">
                                    <button class="btn-template-preview" data-template="template1" data-preview="true">
                                        <i class="fas fa-search-plus"></i> Voir en détail
                                    </button>
                                    <button class="btn-template-select select-template-btn" data-template="template1">
                                        <i class="fas fa-check-circle"></i> Sélectionner
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Template 2 - Classique/Professionnel -->
                    <div class="modern-carousel-item" data-carousel-item="1" data-template="template2">
                        <div class="modern-template-card">
                            <div class="template-preview-container">
                                <img src="{{ asset('images/cvs/2.png') }}" alt="Template Executive" class="template-preview" onerror="this.src='https://placeholder.pics/svg/400x600/DEDEDE/555555/Template%202'">
                                <div class="template-overlay">
                                    <span class="preview-badge"><i class="fas fa-eye"></i> Aperçu</span>
                                </div>
                            </div>
                            <div class="modern-template-details">
                                <div class="template-header">
                                    <h3 class="template-title">Executive</h3>
                                    <div class="template-rating">
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <span class="rating-count">(98)</span>
                                    </div>
                                </div>
                                <p class="template-description">Design classique et élégant parfait pour les profils business et management</p>
                                <div class="template-categories">
                                    <span class="category-tag"><i class="fas fa-briefcase"></i> Business</span>
                                    <span class="category-tag"><i class="fas fa-chart-line"></i> Management</span>
                                    <span class="category-tag"><i class="fas fa-user-tie"></i> Exécutif</span>
                                </div>
                                <div class="template-actions">
                                    <button class="btn-template-preview" data-template="template2" data-preview="true">
                                        <i class="fas fa-search-plus"></i> Voir en détail
                                    </button>
                                    <button class="btn-template-select select-template-btn" data-template="template2">
                                        <i class="fas fa-check-circle"></i> Sélectionner
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Template 3-7 - Similaires aux modèles précédents ... -->
                    <!-- Templates 3 à 7 conservés tels quels -->

                </div>

                <!-- Thumbnails navigation -->
                <div class="template-thumbnails" role="tablist">
                    <button class="template-thumbnail active" data-carousel-goto="0" aria-label="Template 1" aria-controls="template-carousel" role="tab" aria-selected="true">
                        <img src="{{ asset('images/cvs/1.png') }}" alt="Tech Expert" class="thumbnail-img" onerror="this.src='https://placeholder.pics/svg/100x150/DEDEDE/555555/1'">
                    </button>
                    <button class="template-thumbnail" data-carousel-goto="1" aria-label="Template 2" aria-controls="template-carousel" role="tab" aria-selected="false">
                        <img src="{{ asset('images/cvs/2.png') }}" alt="Executive" class="thumbnail-img" onerror="this.src='https://placeholder.pics/svg/100x150/DEDEDE/555555/2'">
                    </button>
                    <!-- Autres miniatures... -->
                </div>
            </div>

            <!-- Filtres de template -->
            <div class="template-filters animate-on-scroll">
                <div class="filter-section">
                    <h4 class="filter-title">Filtrer par catégorie</h4>
                    <div class="filter-options">
                        <button class="filter-button active" data-filter="all">Tous</button>
                        <button class="filter-button" data-filter="modern">Moderne</button>
                        <button class="filter-button" data-filter="classic">Classique</button>
                        <button class="filter-button" data-filter="creative">Créatif</button>
                        <button class="filter-button" data-filter="professional">Professionnel</button>
                        <button class="filter-button" data-filter="academic">Académique</button>
                    </div>
                </div>

                <div class="filter-section">
                    <h4 class="filter-title">Filtrer par domaine</h4>
                    <div class="filter-options">
                        <button class="filter-button" data-filter="tech">Tech & IT</button>
                        <button class="filter-button" data-filter="business">Business</button>
                        <button class="filter-button" data-filter="engineering">Ingénierie</button>
                        <button class="filter-button" data-filter="academic">Académique</button>
                        <button class="filter-button" data-filter="creative">Design & Création</button>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Features Section -->
    <section class="features-outer-section py-5 my-5">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Caractéristiques Principales</h2>
                <p class="section-subtitle">Notre générateur de CV offre tout ce dont vous avez besoin pour créer un CV professionnel qui vous distingue des autres candidats</p>
            </div>

            <div class="row">
                <div class="col-lg-4 col-md-6 animate-on-scroll">
                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-paint-brush"></i>
                        </div>
                        <h3 class="feature-title">Templates Professionnels</h3>
                        <p class="feature-text">Choisissez parmi une variété de templates modernes et professionnels adaptés à différents secteurs d'activité.</p>
                        <a href="#templates" class="feature-link">
                            Explorer les templates <i class="fas fa-arrow-right"></i>
                        </a>
                    </div>
                </div>

                <div class="col-lg-4 col-md-6 animate-on-scroll">
                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-magic"></i>
                        </div>
                        <h3 class="feature-title">Interface Intuitive</h3>
                        <p class="feature-text">Notre interface conviviale vous guide pas à pas dans la création de votre CV, sans aucune compétence technique requise.</p>
                        <a href="{{ path('app_cv_generator') }}" class="feature-link">
                            Essayer maintenant <i class="fas fa-arrow-right"></i>
                        </a>
                    </div>
                </div>

                <div class="col-lg-4 col-md-6 animate-on-scroll">
                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-download"></i>
                        </div>
                        <h3 class="feature-title">Export PDF</h3>
                        <p class="feature-text">Téléchargez instantanément votre CV en format PDF de haute qualité, prêt à être envoyé aux recruteurs.</p>
                        <a href="{{ path('app_cv_generator') }}" class="feature-link">
                            Créer mon CV <i class="fas fa-arrow-right"></i>
                        </a>
                    </div>
                </div>

                <!-- Autres cartes de fonctionnalités... -->
            </div>
        </div>
    </section>

    <!-- Process Section -->
    <section class="process-section py-5 my-5 bg-light">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Comment ça fonctionne</h2>
                <p class="section-subtitle">Créez votre CV professionnel en 3 étapes simples</p>
            </div>

            <div class="row process-steps">
                <!-- Step 1 -->
                <div class="col-lg-4 animate-on-scroll">
                    <div class="process-step">
                        <div class="process-number">1</div>
                        <div class="process-icon">
                            <i class="fas fa-palette"></i>
                        </div>
                        <h3 class="process-title">Choisissez un template</h3>
                        <p class="process-description">Parcourez notre collection de templates professionnels et sélectionnez celui qui correspond le mieux à votre profil et au secteur visé.</p>
                    </div>
                </div>

                <!-- Step 2 -->
                <div class="col-lg-4 animate-on-scroll">
                    <div class="process-step">
                        <div class="process-number">2</div>
                        <div class="process-icon">
                            <i class="fas fa-edit"></i>
                        </div>
                        <h3 class="process-title">Ajoutez votre contenu</h3>
                        <p class="process-description">Complétez chaque section avec vos informations personnelles, expériences professionnelles, formations et compétences.</p>
                    </div>
                </div>

                <!-- Step 3 -->
                <div class="col-lg-4 animate-on-scroll">
                    <div class="process-step">
                        <div class="process-number">3</div>
                        <div class="process-icon">
                            <i class="fas fa-download"></i>
                        </div>
                        <h3 class="process-title">Téléchargez votre CV</h3>
                        <p class="process-description">Prévisualisez votre CV, apportez les dernières modifications si nécessaire, puis téléchargez-le en format PDF haute qualité.</p>
                    </div>
                </div>
            </div>

            <div class="text-center mt-5 animate-on-scroll">
                <a href="{{ path('app_cv_generator') }}" class="btn btn-primary btn-lg">
                    <i class="fas fa-rocket me-2"></i>Commencer maintenant
                </a>
            </div>
        </div>
    </section>

    <section id="cv-examples" class="cv-examples-section py-5">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Exemples de CV</h2>
                <p class="section-subtitle">Découvrez quelques exemples de CV créés avec notre générateur</p>
            </div>

            <div class="row justify-content-center">
                <div class="col-12">
                    <!-- Carrousel des exemples de CV -->
                    <div class="cv-examples-carousel" tabindex="0" aria-label="Exemples de CV">
                        <!-- Annonce pour lecteurs d'écran -->
                        <div class="sr-only-announcement" aria-live="polite" role="status" style="position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0, 0, 0, 0); white-space: nowrap; border: 0;"></div>

                        <!-- Navigation du carrousel -->
                        <div class="carousel-navigation">
                            <button class="carousel-btn prev-btn" aria-label="Template précédent">
                                <i class="fas fa-chevron-left"></i>
                            </button>
                            <div class="carousel-indicators" role="tablist">
                                <span class="indicator active" data-index="0" role="tab" aria-selected="true" aria-label="Template Élégant" tabindex="0"></span>
                                <span class="indicator" data-index="1" role="tab" aria-selected="false" aria-label="Template Moderne" tabindex="0"></span>
                            </div>
                            <button class="carousel-btn next-btn" aria-label="Template suivant">
                                <i class="fas fa-chevron-right"></i>
                            </button>
                        </div>

                        <!-- Conteneur des CV -->
                        <div class="cv-carousel-container">
                            <!-- Slide 1 - Template Élégant -->
                            <div class="cv-slide active" aria-hidden="false">
                                <div class="template-label">Template Élégant</div>
                                <div class="cv-container">
                                    <div class="header">
                                        <img src="{{ asset('images/cvs/profile-example.jpg') }}" alt="Photo de profil" class="profile-img" onerror="this.src='{{ asset('images/placeholder-profile.jpg') }}'">
                                        <h1>Mohamed ABIDI</h1>
                                        <h2>Business Information Systems</h2>
                                        <p class="about-me">BAC + 3 en informatique de gestion, étudiant à ESPRIT SCHOOL OF BUSINESS. Spécialisé en développement web avec le stack MERN et en gestion des données. Expérience en gestion de sponsoring et administration de club.</p>
                                    </div>

                                    <div class="main-content">
                                        <div class="left-column">
                                            <div class="info">
                                                <h3 class="section-title">Contact</h3>
                                                <div class="info-item">
                                                    <p>Téléphone : +216 23 199 953</p>
                                                    <p>Email : mohamed.abidi@esprit.tn</p>
                                                    <p>Adresse : Sousse, Hammamet Sud / Tozeur, Nefta</p>
                                                </div>
                                            </div>

                                            <div class="languages">
                                                <h3 class="section-title">Langues</h3>
                                                <div class="language-item">
                                                    <p>Français (B2 selon Rosetta Stone)</p>
                                                    <p>Anglais (B2 selon Rosetta Stone)</p>
                                                    <p>Arabe (Natif)</p>
                                                </div>
                                            </div>

                                            <div class="interests">
                                                <h3 class="section-title">Intérêts</h3>
                                                <div class="interest-item">
                                                    <p>Développement web</p>
                                                    <p>Programmation JavaScript</p>
                                                    <p>Big Data</p>
                                                </div>
                                            </div>

                                            <div class="competences">
                                                <h3 class="section-title">Compétences</h3>

                                                <div class="skills">
                                                    <div class="skill-category">
                                                        <h4>Techniques</h4>
                                                        <ul class="skill-list">
                                                            <li>MERN Stack</li>
                                                            <li>JavaScript</li>
                                                            <li>Gestion des données</li>
                                                        </ul>
                                                    </div>

                                                    <div class="skill-category">
                                                        <h4>Professionnelles</h4>
                                                        <ul class="skill-list">
                                                            <li>Gestion</li>
                                                            <li>Économie</li>
                                                            <li>Administration</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="right-column">
                                            <div class="experiences">
                                                <h3 class="section-title">Expériences Professionnelles</h3>

                                                <div class="experience">
                                                    <div class="experience-title">Responsable Sponsoring <span class="experience-company">- TUNIVISIONS ESPRIT</span></div>
                                                    <div class="experience-date">2022 - Présent</div>
                                                    <div class="experience-description">
                                                        <ul>
                                                            <li>Gestion du secteur du club Tunivisions Esprit, avec responsabilité de la recherche et négociation des partenariats</li>
                                                            <li>Membre du conseil d'administration du club Tunivisions Esprit, participant aux décisions stratégiques et à la gouvernance</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="education">
                                                <h3 class="section-title">Formations</h3>

                                                <div class="education-item">
                                                    <div class="education-title">Licence en Business Computing <span class="education-institution">- ESPRIT SCHOOL OF BUSINESS</span></div>
                                                    <div class="education-date">2021 - Présent</div>
                                                    <div class="education-description">
                                                        <p>Parcours en Business Information Systems (BIS), spécialisation en développement web et gestion des données.</p>
                                                    </div>
                                                </div>

                                                <div class="education-item">
                                                    <div class="education-title">Baccalauréat Sciences <span class="education-institution">- Lycée BECHIR KHRAYEF NEFTA</span></div>
                                                    <div class="education-date">2020</div>
                                                    <div class="education-description">
                                                        <p>Formation scientifique générale ayant permis l'admission à ESPRIT SCHOOL OF BUSINESS.</p>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="skills-section">
                                                <h3 class="section-title">Compétences spécifiques</h3>
                                                <p>Maîtrise des techniques actualisées en développement web avec le stack MERN (MongoDB, Express, React, Node.js). Développeur amateur en JavaScript avec connaissances approfondies dans le domaine de la gestion des données et du Big Data. Compétences en gestion de projet et en économie.</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Slide 2 - Template Moderne -->
                            <div class="cv-slide" aria-hidden="true">
                                <div class="template-label">Template Moderne</div>
                                <div class="cv-container">
                                    <div class="header">
                                        <img src="{{ asset('images/cvs/profile-example.jpg') }}" alt="Photo de profil" class="profile-img" onerror="this.src='{{ asset('images/placeholder-profile.jpg') }}'">
                                        <div class="name-title">
                                            <h1>Mohamed ABIDI</h1>
                                            <h2>3ème année BIS (Business Information Systems)</h2>
                                            <p>BAC + 3 en informatique de gestion, actuellement étudiant à ESPRIT SCHOOL OF BUSINESS, spécialisé en développement web et gestion des données. Passionné par l'innovation technologique et les solutions numériques pour les entreprises.</p>
                                        </div>
                                    </div>

                                    <div class="main-content">
                                        <div class="left-column">
                                            <div class="info">
                                                <h3 class="section-title">Informations</h3>
                                                <div class="info-item">
                                                    <p><strong>Téléphone :</strong> +216 23 199 953</p>
                                                    <p><strong>Email :</strong> mohamed.abidi@esprit.tn</p>
                                                    <p><strong>Adresse :</strong> Sousse, Hammamet Sud / Tozeur, Nefta</p>
                                                    <p><strong>LinkedIn :</strong> linkedin.com/in/mohamedabidi</p>
                                                    <p><strong>GitHub :</strong> github.com/mohamed-abidi</p>
                                                </div>
                                            </div>

                                            <div class="languages">
                                                <h3 class="section-title">Langues</h3>
                                                <div class="language-item">
                                                    <p>Français (B2 selon Rosetta Stone)</p>
                                                    <p>Anglais (B2 selon Rosetta Stone)</p>
                                                    <p>Arabe (Natif)</p>
                                                </div>
                                            </div>

                                            <div class="interests">
                                                <h3 class="section-title">Intérêts</h3>
                                                <div class="interest-item">
                                                    <p>Développement web</p>
                                                    <p>Gestion des données</p>
                                                    <p>Programmation JavaScript</p>
                                                    <p>Intelligence artificielle</p>
                                                    <p>Big Data & Analytics</p>
                                                </div>
                                            </div>

                                            <div class="certifications">
                                                <h3 class="section-title">Certifications</h3>
                                                <div class="certification-item">
                                                    <div class="certification-title">Rosetta Stone - Anglais B2</div>
                                                    <div class="certification-date">2023</div>
                                                </div>
                                                <div class="certification-item">
                                                    <div class="certification-title">Rosetta Stone - Français B2</div>
                                                    <div class="certification-date">2023</div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="right-column">
                                            <div class="objective">
                                                <h3 class="section-title">Objectif Professionnel</h3>
                                                <p>Étudiant motivé en informatique de gestion cherchant à mettre en pratique mes compétences en développement web et gestion des données dans un environnement professionnel innovant. Je souhaite contribuer à des projets qui combinent technologie et solutions d'affaires pour répondre aux défis des entreprises modernes.</p>
                                            </div>

                                            <div class="experiences">
                                                <h3 class="section-title">Expériences Professionnelles</h3>

                                                <div class="experience">
                                                    <div class="experience-title">Responsable Sponsoring - TUNIVISIONS ESPRIT</div>
                                                    <div class="experience-date">2022 - Présent</div>
                                                    <div class="experience-description">
                                                        <ul>
                                                            <li>Gestion du secteur du club Tunivisions Esprit, coordination de l'équipe sponsoring</li>
                                                            <li>Membre du conseil d'administration du club Tunivisions Esprit</li>
                                                            <li>Élaboration et mise en œuvre de stratégies pour attirer des sponsors</li>
                                                            <li>Négociation de partenariats et suivi des relations avec les sponsors</li>
                                                        </ul>
                                                    </div>
                                                </div>

                                                <div class="experience">
                                                    <div class="experience-title">Développeur Web Junior - Projet académique</div>
                                                    <div class="experience-date">2023</div>
                                                    <div class="experience-description">
                                                        <ul>
                                                            <li>Développement d'applications web avec la stack MERN</li>
                                                            <li>Conception et implémentation de bases de données</li>
                                                            <li>Collaboration en équipe sur des projets de développement</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="education">
                                                <h3 class="section-title">Formations</h3>

                                                <div class="education-item">
                                                    <div class="education-title">LICENCE EN BUSINESS COMPUTING - ESPRIT SCHOOL OF BUSINESS</div>
                                                    <div class="education-date">2021 - Présent</div>
                                                    <div class="education-description">
                                                        <p>Parcours en Business Information Systems (BIS). Formation couvrant les aspects techniques et managériaux des systèmes d'information dans l'entreprise.</p>
                                                    </div>
                                                </div>

                                                <div class="education-item">
                                                    <div class="education-title">BAC SCIENCES - Lycée BECHIR KHRAYEF NEFTA</div>
                                                    <div class="education-date">2020</div>
                                                    <div class="education-description">
                                                        <p>Formation scientifique générale ayant permis l'admission à ESPRIT SCHOOL OF BUSINESS.</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="text-center mt-4">
                        <a href="{{ path('app_cv_generator') }}" class="btn btn-primary btn-lg">
                            <i class="fas fa-file-alt me-2"></i>Créer mon CV avec ce style
                        </a>
                        <a href="{{ path('app_cv_builder') }}" class="btn btn-lg" style="background-color: #8bc34a; color: white;">
                            <i class="fas fa-tools me-2"></i>Construire mon CV personnalisé
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Testimonials Section Améliorée -->
    <section class="testimonials-section py-5 bg-light">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Témoignages</h2>
                <p class="section-subtitle">Découvrez ce que nos utilisateurs disent de notre générateur de CV</p>
            </div>

            <div class="testimonials-grid">
                <!-- Témoignage 1 -->
                <div class="testimonial-card animate-on-scroll">
                    <div class="testimonial-quote">"</div>
                    <p class="testimonial-content">J'ai obtenu trois entretiens en une semaine après avoir refait mon CV avec cet outil. L'interface est intuitive et les templates sont vraiment professionnels. Je le recommande vivement!</p>
                    <div class="testimonial-user">
                        <img src="{{ asset('images/avatar-1.jpg') }}" alt="Sophia Laroui" class="testimonial-avatar" onerror="this.src='https://ui-avatars.com/api/?name=Sofia+L&background=random'">
                        <div class="testimonial-info">
                            <h4 class="testimonial-name">Sophia Laroui</h4>
                            <p class="testimonial-position">Ingénieure Logiciel</p>
                            <div class="testimonial-rating">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Témoignage 2 (Arabe tunisien) -->
                <div class="testimonial-card animate-on-scroll">
                    <div class="testimonial-quote">"</div>
                    <p class="testimonial-content" dir="rtl" lang="ar-TN">برشا فرحان بالخدمة متاع الموقع هذا. عملتلي سيفي محترم ومهني وفي ظرف نهار واحد لقيت شكون يتصل بيا للانترفيو. الموقع سهل وتعاونوني على باهي.</p>
                    <div class="testimonial-user">
                        <img src="{{ asset('images/avatar-2.jpg') }}" alt="Yassine Marzougui" class="testimonial-avatar" onerror="this.src='https://ui-avatars.com/api/?name=Yassine+M&background=random'">
                        <div class="testimonial-info">
                            <h4 class="testimonial-name">ياسين المرزوقي</h4>
                            <p class="testimonial-position">مطور برمجيات</p>
                            <div class="testimonial-rating">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star-half-alt"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Témoignage 3 -->
                <div class="testimonial-card animate-on-scroll">
                    <div class="testimonial-quote">"</div>
                    <p class="testimonial-content">En tant que recruteur, je trouve que les CV générés par cet outil se démarquent vraiment. Ils sont clairs, bien structurés et mettent en valeur les compétences essentielles.</p>
                    <div class="testimonial-user">
                        <img src="{{ asset('images/avatar-3.jpg') }}" alt="Ahmed Ben Salem" class="testimonial-avatar" onerror="this.src='https://ui-avatars.com/api/?name=Ahmed+B&background=random'">
                        <div class="testimonial-info">
                            <h4 class="testimonial-name">Ahmed Ben Salem</h4>
                            <p class="testimonial-position">Responsable Recrutement</p>
                            <div class="testimonial-rating">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star-half-alt"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Témoignage 4 (Arabe tunisien) -->
                <div class="testimonial-card animate-on-scroll">
                    <div class="testimonial-quote">"</div>
                    <p class="testimonial-content" dir="rtl" lang="ar-TN">كنت نحوس على خدمة من عام و بعد ما عملت سيفي في الموقع هذا لقيت خدمة في شهر. التمبلايتس عندهم شكلهم حلو و محترم و السيستام سهل.</p>
                    <div class="testimonial-user">
                        <img src="{{ asset('images/avatar-4.jpg') }}" alt="Sarra Tounsi" class="testimonial-avatar" onerror="this.src='https://ui-avatars.com/api/?name=Sarra+T&background=random'">
                        <div class="testimonial-info">
                            <h4 class="testimonial-name">سارة التونسي</h4>
                            <p class="testimonial-position">محللة بيانات</p>
                            <div class="testimonial-rating">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Témoignage 5 -->
                <div class="testimonial-card animate-on-scroll">
                    <div class="testimonial-quote">"</div>
                    <p class="testimonial-content">Pour ma première recherche d'emploi, j'étais perdu concernant la création d'un CV. Ce générateur m'a guidé pas à pas et m'a permis d'obtenir un stage dans une entreprise internationale.</p>
                    <div class="testimonial-user">
                        <img src="{{ asset('images/avatar-5.jpg') }}" alt="Yassine Trabelsi" class="testimonial-avatar" onerror="this.src='https://ui-avatars.com/api/?name=Yassine+T&background=random'">
                        <div class="testimonial-info">
                            <h4 class="testimonial-name">Yassine Trabelsi</h4>
                            <p class="testimonial-position">Étudiant en Master</p>
                            <div class="testimonial-rating">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Témoignage 7 -->
                <div class="testimonial-card animate-on-scroll">
                    <div class="testimonial-quote">"</div>
                    <p class="testimonial-content">Après 10 ans dans la même entreprise, j'avais besoin de rafraîchir mon CV. Cet outil m'a aidé à réorganiser mon expérience et à mettre en valeur mes compétences. J'ai décroché un nouveau poste en un mois!</p>
                    <div class="testimonial-user">
                        <img src="{{ asset('images/avatar-7.jpg') }}" alt="Lina Mansouri" class="testimonial-avatar" onerror="this.src='https://ui-avatars.com/api/?name=Lina+M&background=random'">
                        <div class="testimonial-info">
                            <h4 class="testimonial-name">Lina Mansouri</h4>
                            <p class="testimonial-position">Chef de Projet Marketing</p>
                            <div class="testimonial-rating">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- FAQ Section -->
    <section class="faq-section py-5 my-5">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Questions fréquentes</h2>
                <p class="section-subtitle">Tout ce que vous devez savoir sur notre générateur de CV</p>
                <div class="mt-4">
                    <a href="{{ path('app_cv_generator') }}" class="btn btn-primary btn-lg">
                        <i class="fas fa-tools me-2"></i>Construire mon CV
                    </a>
                </div>
            </div>

            <div class="row justify-content-center">
                <div class="col-lg-8">
                    <div class="accordion faq-accordion" id="faqAccordion">
                        <!-- Question 1 -->
                        <div class="accordion-item animate-on-scroll">
                            <h3 class="accordion-header" id="faqHeading1">
                                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#faqCollapse1" aria-expanded="true" aria-controls="faqCollapse1">
                                    Est-ce que le service est gratuit?
                                </button>
                            </h3>
                            <div id="faqCollapse1" class="accordion-collapse collapse show" aria-labelledby="faqHeading1" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    <p>Oui, notre générateur de CV de base est entièrement gratuit pour les étudiants d'ESPRIT. Vous pouvez créer, modifier et exporter votre CV en PDF sans frais. Nous proposons également des fonctionnalités premium avec des templates exclusifs et des options avancées pour ceux qui souhaitent aller plus loin.</p>
                                </div>
                            </div>
                        </div>

                        <!-- Question 2 -->
                        <div class="accordion-item animate-on-scroll">
                            <h3 class="accordion-header" id="faqHeading2">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faqCollapse2" aria-expanded="false" aria-controls="faqCollapse2">
                                    Combien de templates de CV sont disponibles?
                                </button>
                            </h3>
                            <div id="faqCollapse2" class="accordion-collapse collapse" aria-labelledby="faqHeading2" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    <p>Nous proposons actuellement plusieurs templates professionnels différents, adaptés à divers secteurs d'activité et niveaux d'expérience. Chaque template est entièrement personnalisable en termes de couleurs, polices et mise en page. Nous ajoutons régulièrement de nouveaux designs pour vous offrir toujours plus d'options.</p>
                                </div>
                            </div>
                        </div>

                        <!-- Question 3 -->
                        <div class="accordion-item animate-on-scroll">
                            <h3 class="accordion-header" id="faqHeading3">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faqCollapse3" aria-expanded="false" aria-controls="faqCollapse3">
                                    Puis-je modifier mon CV après l'avoir créé?
                                </button>
                            </h3>
                            <div id="faqCollapse3" class="accordion-collapse collapse" aria-labelledby="faqHeading3" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    <p>Absolument! Vous pouvez modifier votre CV autant de fois que vous le souhaitez. Toutes vos informations sont sauvegardées dans votre compte, ce qui vous permet de revenir facilement pour effectuer des mises à jour ou même changer complètement de template sans avoir à ressaisir toutes vos données.</p>
                                </div>
                            </div>
                        </div>

                        <!-- Question 4 -->
                        <div class="accordion-item animate-on-scroll">
                            <h3 class="accordion-header" id="faqHeading4">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faqCollapse4" aria-expanded="false" aria-controls="faqCollapse4">
                                    Les CV créés sont-ils optimisés pour les ATS?
                                </button>
                            </h3>
                            <div id="faqCollapse4" class="accordion-collapse collapse" aria-labelledby="faqHeading4" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    <p>Oui, tous nos templates sont conçus pour être compatibles avec les systèmes de suivi des candidatures (ATS) utilisés par les recruteurs. Cela signifie que votre CV sera correctement analysé par ces systèmes, augmentant vos chances d'être sélectionné pour un entretien. Notre système intègre également des recommandations pour optimiser le contenu de votre CV en fonction des critères ATS.</p>
                                </div>
                            </div>
                        </div>

                        <!-- Question 5 -->
                        <div class="accordion-item animate-on-scroll">
                            <h3 class="accordion-header" id="faqHeading5">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faqCollapse5" aria-expanded="false" aria-controls="faqCollapse5">
                                    Comment puis-je obtenir de l'aide si j'en ai besoin?
                                </button>
                            </h3>
                            <div id="faqCollapse5" class="accordion-collapse collapse" aria-labelledby="faqHeading5" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    <p>Nous offrons plusieurs options d'assistance: vous trouverez des guides détaillés dans notre centre d'aide, des conseils intégrés à chaque étape de la création de votre CV, et notre équipe de support est disponible par email ou chat en direct du lundi au vendredi, de 9h à 18h. Pour les étudiants d'ESPRIT, des sessions d'aide personnalisée sont également organisées régulièrement sur le campus.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="text-center mt-5 animate-on-scroll">
                <a href="#" class="btn btn-outline-primary">Voir toutes les questions <i class="fas fa-arrow-right ms-2"></i></a>
            </div>
        </div>
    </section>

    <!-- Statistics Section -->
    <section class="statistics-section py-5 my-5">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Notre Impact</h2>
                <h3 class="section-title">(تشجيع)  </h3>

                <p class="section-subtitle">Des résultats concrets qui démontrent l'efficacité de notre générateur de CV</p>
            </div>

            <div class="statistics-container">
                <div class="row text-center">
                    <div class="col-md-3 col-6 mb-4 mb-md-0 animate-on-scroll">
                        <div class="statistic-card">
                            <div class="statistic-icon">
                                <i class="fas fa-users"></i>
                            </div>
                            <div class="statistic-number" data-count="25000">0</div>
                            <div class="statistic-label">Utilisateurs actifs</div>
                        </div>
                    </div>

                    <div class="col-md-3 col-6 mb-4 mb-md-0 animate-on-scroll">
                        <div class="statistic-card">
                            <div class="statistic-icon">
                                <i class="fas fa-file-alt"></i>
                            </div>
                            <div class="statistic-number" data-count="120000">0</div>
                            <div class="statistic-label">CV générés</div>
                        </div>
                    </div>

                    <div class="col-md-3 col-6 animate-on-scroll">
                        <div class="statistic-card">
                            <div class="statistic-icon">
                                <i class="fas fa-building"></i>
                            </div>
                            <div class="statistic-number" data-count="500">0</div>
                            <div class="statistic-label">Entreprises partenaires</div>
                        </div>
                    </div>

                    <div class="col-md-3 col-6 animate-on-scroll">
                        <div class="statistic-card">
                            <div class="statistic-icon">
                                <i class="fas fa-trophy"></i>
                            </div>
                            <div class="statistic-number" data-count="85">0</div>
                            <div class="statistic-label">Taux de réussite (%)</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Infinite Logo Carousel Section -->
    <section class="logo-marquee-section py-4">
        <div class="container">
            <div class="logo-marquee-title text-center mb-3 animate-on-scroll">
                <p>ESPRIT CV Generator sera utilisé INCHALLAH par les étudiants de</p>
            </div>
        </div>

        <div class="logo-marquee-container">
            <div class="logo-track">
                <!-- Premier groupe de logos -->
                <div class="logo-item">
                    <img src="{{ asset('images/tunisie-removebg-preview.png') }}" alt="Tunisie" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/logo.png') }}" alt="ESPRIT Logo" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/espritprepa-removebg-preview.png') }}" alt="ESPRIT Prepa" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/espritesb.png') }}" alt="ESPRIT ESB" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/esprit-removebg-preview.png') }}" alt="ESPRIT" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/esprim.png') }}" alt="ESPRIM" class="logo-item-img">
                </div>

                <!-- Deuxième groupe de logos (dupliqués pour effet continu) -->
                <div class="logo-item">
                    <img src="{{ asset('images/tunisie-removebg-preview.png') }}" alt="Tunisie" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/logo.png') }}" alt="ESPRIT Logo" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/espritprepa-removebg-preview.png') }}" alt="ESPRIT Prepa" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/espritesb.png') }}" alt="ESPRIT ESB" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/esprit-removebg-preview.png') }}" alt="ESPRIT" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/esprim.png') }}" alt="ESPRIM" class="logo-item-img">
                </div>

                <!-- Troisième groupe de logos (dupliqués pour effet continu) -->
                <div class="logo-item">
                    <img src="{{ asset('images/tunisie-removebg-preview.png') }}" alt="Tunisie" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/logo.png') }}" alt="ESPRIT Logo" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/espritprepa-removebg-preview.png') }}" alt="ESPRIT Prepa" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/espritesb.png') }}" alt="ESPRIT ESB" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/esprit-removebg-preview.png') }}" alt="ESPRIT" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/esprim.png') }}" alt="ESPRIM" class="logo-item-img">
                </div>
            </div>
        </div>
    </section>

    <!-- CTA Section -->
    <section class="cta-section">
        <div class="cta-shape-1"></div>
        <div class="cta-shape-2"></div>

        <div class="container">
            <div class="cta-content">
                <h2 class="cta-title">Prêt à créer un CV qui impressionne?</h2>
                <p class="cta-text">Rejoignez des milliers d'utilisateurs satisfaits et commencez à générer votre CV professionnel dès aujourd'hui. Notre outil simple et intuitif vous guide à chaque étape.</p>
                <a href="{{ path('app_cv_generator') }}" class="cta-button">
                </a>

                <!-- Social Media Icons -->
            </div>

        </div>
    </section>

    <!-- Current Date and User Info -->

        <div id="latex-formulas-container" class="mt-3"></div>

        <div class="social-icons-container">
        <p class="social-title">Suivez-nous sur les réseaux sociaux</p>
        <div class="social-icons">
            <a href="https://youtu.be/5FKwnZ7OFVg?si=lvX-6Wh8DjyRfuGM" target="_blank" rel="noopener noreferrer" class="social-icon" aria-label="YouTube ESPRIT">
                <i class="fab fa-youtube"></i>
            </a>
            <a href="https://www.instagram.com/esprit_ingenieur?utm_source=ig_web_button_share_sheet&igsh=ZDNlZDc0MzIxNw==" target="_blank" rel="noopener noreferrer" class="social-icon" aria-label="Instagram ESPRIT">
                <i class="fab fa-instagram"></i>
            </a>
            <a href="https://www.facebook.com/esprit.tn" target="_blank" rel="noopener noreferrer" class="social-icon" aria-label="Facebook ESPRIT">
                <i class="fab fa-facebook-f"></i>
            </a>
            <a href="https://www.linkedin.com/school/esprit_2/posts/?feedView=all" target="_blank" rel="noopener noreferrer" class="social-icon" aria-label="LinkedIn ESPRIT">
                <i class="fab fa-linkedin-in"></i>
            </a>
        </div>
    </div>


</div>
    {% include 'components/latex_button.html.twig' %}
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    {% include 'components/latex_scripts.html.twig' %}
    <script src="{{ asset('js/template_carousel.js') }}"></script>
    <script src="{{ asset('js/welcome_animations.js') }}"></script>
    <script src="{{ asset('js/cv-examples-carousel.js') }}"></script>
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.14.0/Sortable.min.js"></script>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
    <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Bouton pour ouvrir l'éditeur LaTeX
            document.getElementById('open-latex-editor').addEventListener('click', function() {
                // Ouvrir l'éditeur LaTeX dans une popup
                window.open('/latex', 'LaTeX Editor', 'width=800,height=600');
            });

            // Écouter les messages de la fenêtre popup
            window.addEventListener('message', function(event) {
                if (event.data && event.data.type === 'latex_insert') {
                    // Créer un élément pour afficher la formule
                    const formulaDiv = document.createElement('div');
                    formulaDiv.className = 'latex-formula mb-2 p-2 border rounded';
                    formulaDiv.setAttribute('data-latex', event.data.latex);
                    formulaDiv.innerHTML = '$$' + event.data.latex + '$$';

                    // Ajouter au conteneur
                    document.getElementById('latex-formulas-container').appendChild(formulaDiv);

                    // Rendre avec MathJax
                    if (window.MathJax) {
                        MathJax.typesetPromise([formulaDiv]);
                    }
                }
            });
        });
        document.addEventListener('DOMContentLoaded', function() {
            // Animation du slider d'exemples de CV
            const slides = document.querySelectorAll('.cv-example-slide');
            const dots = document.querySelectorAll('.cv-nav-dot');
            let currentSlide = 0;
            const totalSlides = slides.length;

            function showSlide(index) {
                // Masquer tous les slides
                slides.forEach(slide => {
                    slide.classList.remove('active');
                });

                // Désactiver tous les points
                dots.forEach(dot => {
                    dot.classList.remove('active');
                });

                // Activer le slide et le point correspondant
                slides[index].classList.add('active');
                dots[index].classList.add('active');

                currentSlide = index;
            }

            // Changement automatique des slides
            function nextSlide() {
                const nextIndex = (currentSlide + 1) % totalSlides;
                showSlide(nextIndex);
            }

            // Événements pour les points de navigation
            dots.forEach((dot, index) => {
                dot.addEventListener('click', function() {
                    showSlide(index);

                    // Réinitialiser le timer
                    clearInterval(slideInterval);
                    slideInterval = setInterval(nextSlide, 4000);
                });
            });

            // Démarrer le carrousel automatique
            let slideInterval = setInterval(nextSlide, 4000);

            // Pause de l'autoplay au survol
            const container = document.querySelector('.cv-example-container');
            container.addEventListener('mouseenter', function() {
                clearInterval(slideInterval);
            });

            container.addEventListener('mouseleave', function() {
                slideInterval = setInterval(nextSlide, 4000);
            });

            // Animation initiale
            showSlide(0);
        });


        document.addEventListener('DOMContentLoaded', function() {
            // Animation des éléments du héros
            setTimeout(() => {
                document.querySelector('.hero-badge').classList.add('show');
                document.querySelector('.hero-title').classList.add('show');
                document.querySelector('.hero-subtitle').classList.add('show');
                document.querySelector('.hero-stats').classList.add('show');
                document.querySelector('.hero-buttons').classList.add('show');
                document.querySelector('.hero-trust')?.classList.add('show');
                document.querySelector('.hero-image-container')?.classList.add('show');
            }, 100);
        });

        document.addEventListener('DOMContentLoaded', function() {
            // Fix pour les icônes Font Awesome
            if (typeof FontAwesome === 'undefined') {
                console.warn('Font Awesome non chargé correctement. Tentative de chargement...');
                const fontAwesomeLink = document.createElement('link');
                fontAwesomeLink.rel = 'stylesheet';
                fontAwesomeLink.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css';
                document.head.appendChild(fontAwesomeLink);
            }

            // Animation au défilement
            const animateElements = document.querySelectorAll('.animate-on-scroll');

            function checkScroll() {
                animateElements.forEach(element => {
                    const elementTop = element.getBoundingClientRect().top;
                    const windowHeight = window.innerHeight;

                    if (elementTop < windowHeight - 100) {
                        element.classList.add('show');
                    }
                });
            }

            // Exécuter une première fois pour afficher les éléments visibles immédiatement
            checkScroll();

            // Puis à chaque défilement
            window.addEventListener('scroll', checkScroll);

            // Mise à jour du compteur de carousel
            function updateCounter(index) {
                const currentElement = document.getElementById('current-template');
                if (currentElement) {
                    currentElement.textContent = (parseInt(index) + 1);
                }
            }

            // Navigation du carrousel
            const prevButton = document.getElementById('carousel-prev');
            const nextButton = document.getElementById('carousel-next');
            const carouselItems = document.querySelectorAll('.modern-carousel-item');
            const totalItems = carouselItems.length;

            let currentIndex = 0;

            if (prevButton && nextButton) {
                prevButton.addEventListener('click', function() {
                    currentIndex = (currentIndex - 1 + totalItems) % totalItems;
                    showSlide(currentIndex);
                });

                nextButton.addEventListener('click', function() {
                    currentIndex = (currentIndex + 1) % totalItems;
                    showSlide(currentIndex);
                });
            }

            function showSlide(index) {
                carouselItems.forEach((item, i) => {
                    if (i === index) {
                        item.classList.add('active');
                    } else {
                        item.classList.remove('active');
                    }
                });

                // Mettre à jour les miniatures
                const thumbnails = document.querySelectorAll('.template-thumbnail');
                thumbnails.forEach((thumb, i) => {
                    if (i === index) {
                        thumb.classList.add('active');
                        thumb.setAttribute('aria-selected', 'true');
                    } else {
                        thumb.classList.remove('active');
                        thumb.setAttribute('aria-selected', 'false');
                    }
                });

                updateCounter(index);
            }

            // Gestion des miniatures du carousel
            const thumbnails = document.querySelectorAll('.template-thumbnail');
            thumbnails.forEach((thumbnail, index) => {
                thumbnail.addEventListener('click', function() {
                    showSlide(index);
                    currentIndex = index;
                });
            });

            // Ajouter une fonction pour le preview en taille réelle
            const previewButtons = document.querySelectorAll('.btn-template-preview');
            previewButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const templateId = this.getAttribute('data-template');
                    const templateImg = document.querySelector(`.modern-carousel-item[data-template="${templateId}"] .template-preview`).src;

                    // Créer un modal pour l'aperçu
                    const modal = document.createElement('div');
                    modal.className = 'template-preview-modal';
                    modal.innerHTML = `
                        <div class="template-preview-modal-content">
                            <span class="close-preview-modal">&times;</span>
                            <h3>Aperçu en plein écran</h3>
                            <img src="${templateImg}" alt="Aperçu template" class="fullscreen-preview">
                            <div class="preview-actions">
                                <button class="btn btn-primary select-template-btn" data-template="${templateId}">
                                    <i class="fas fa-check-circle"></i> Sélectionner ce template
                                </button>
                            </div>
                        </div>
                    `;

                    document.body.appendChild(modal);

                    // Ajouter le style pour le modal
                    if (!document.getElementById('modal-style')) {
                        const style = document.createElement('style');
                        style.id = 'modal-style';
                        style.textContent = `
                            .template-preview-modal {
                                position: fixed;
                                top: 0;
                                left: 0;
                                width: 100%;
                                height: 100%;
                                background: rgba(0,0,0,0.8);
                                z-index: 1000;
                                display: flex;
                                align-items: center;
                                justify-content: center;
                                opacity: 0;
                                transition: opacity 0.3s ease;
                            }
                            .template-preview-modal.active {
                                opacity: 1;
                            }
                            .template-preview-modal-content {
                                background: white;
                                padding: 30px;
                                border-radius: 12px;
                                max-width: 90%;
                                max-height: 90%;
                                overflow: auto;
                                position: relative;
                                transform: translateY(20px);
                                transition: transform 0.3s ease;
                            }
                            .template-preview-modal.active .template-preview-modal-content {
                                transform: translateY(0);
                            }
                            .close-preview-modal {
                                position: absolute;
                                top: 15px;
                                right: 20px;
                                font-size: 24px;
                                cursor: pointer;
                                color: #555;
                            }
                            .fullscreen-preview {
                                max-width: 100%;
                                height: auto;
                                display: block;
                                margin: 20px 0;
                            }
                            .preview-actions {
                                margin-top: 20px;
                                text-align: center;
                            }
                        `;

                        document.head.appendChild(style);
                    }

                    // Animation d'ouverture
                    setTimeout(() => modal.classList.add('active'), 10);

                    // Bouton de fermeture du modal
                    modal.querySelector('.close-preview-modal').addEventListener('click', function() {
                        modal.classList.remove('active');
                        setTimeout(() => modal.remove(), 300);
                    });

                    // Event listener pour le bouton select dans le modal
                    modal.querySelector('.select-template-btn').addEventListener('click', function() {
                        const templateId = this.getAttribute('data-template');
                        selectTemplate(templateId);
                        modal.classList.remove('active');
                        setTimeout(() => modal.remove(), 300);
                    });
                });
            });

            // Fonction pour sélectionner un template
            const selectTemplateButtons = document.querySelectorAll('.select-template-btn');
            selectTemplateButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const templateId = this.getAttribute('data-template');
                    selectTemplate(templateId);
                });
            });

            function selectTemplate(templateId) {
                // Simuler la sélection (rediriger vers la page de génération de CV avec le template)
                console.log(`Template ${templateId} sélectionné`);
                showFeedback(`Template ${templateId} sélectionné. Redirection en cours...`, 'success');

                // Dans un cas réel, rediriger vers la page avec le template sélectionné
                setTimeout(() => {
                    window.location.href = `{{ path('app_cv_generator') }}?template=${templateId}`;
                }, 1000);
            }

            // Ajouter la fonctionnalité de filtre
            const filterButtons = document.querySelectorAll('.filter-button');
            filterButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const filter = this.getAttribute('data-filter');

                    // Mettre à jour l'affichage du bouton actif dans ce groupe
                    const parent = this.parentElement;
                    parent.querySelectorAll('.filter-button').forEach(btn => {
                        btn.classList.remove('active');
                    });
                    this.classList.add('active');

                    // Simuler un filtrage (dans une version réelle, filtrer les templates)
                    console.log(`Filtrage par ${filter}`);
                    showFeedback(`Filtrage par ${filter} - Actualisation des templates...`, 'info');
                });
            });

            // Fonction pour afficher les feedbacks/notifications
            function showFeedback(message, type = 'info') {
                const feedbackContainer = document.createElement('div');
                feedbackContainer.className = `feedback-toast feedback-${type}`;
                feedbackContainer.innerHTML = `
                    <div class="feedback-icon">
                        <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'}"></i>
                    </div>
                    <div class="feedback-content">
                        ${message}
                    </div>
                `;

                document.body.appendChild(feedbackContainer);

                // Style pour les toasts
                if (!document.getElementById('feedback-style')) {
                    const style = document.createElement('style');
                    style.id = 'feedback-style';
                    style.textContent = `
                        .feedback-toast {
                            position: fixed;
                            bottom: 30px;
                            right: 30px;
                            padding: 15px 20px;
                            border-radius: 8px;
                            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
                            display: flex;
                            align-items: center;
                            z-index: 1000;
                            opacity: 0;
                            transform: translateY(20px);
                            animation: feedback-fade-in 0.3s ease forwards, feedback-fade-out 0.3s ease forwards 3s;
                        }

                        .feedback-icon {
                            margin-right: 15px;
                            font-size: 20px;
                        }

                        .feedback-content {
                            font-size: 14px;
                        }

                        .feedback-success {
                            background-color: #d4edda;
                            color: #155724;
                            border-left: 4px solid #28a745;
                        }

                        .feedback-info {
                            background-color: #d1ecf1;
                            color: #0c5460;
                            border-left: 4px solid #17a2b8;
                        }

                        .feedback-error {
                            background-color: #f8d7da;
                            color: #721c24;
                            border-left: 4px solid #dc3545;
                        }

                        @keyframes feedback-fade-in {
                            to {
                                opacity: 1;
                                transform: translateY(0);
                            }
                        }

                        @keyframes feedback-fade-out {
                            from {
                                opacity: 1;
                                transform: translateY(0);
                            }
                            to {
                                opacity: 0;
                                transform: translateY(-20px);
                            }
                        }
                    `;

                    document.head.appendChild(style);
                }

                // Supprimer le toast après animation
                setTimeout(() => {
                    feedbackContainer.remove();
                }, 3300);
            }

            // Animation des statistiques
            function animateStatistics() {
                const statNumbers = document.querySelectorAll('.statistic-number');

                statNumbers.forEach(stat => {
                    const targetValue = parseInt(stat.getAttribute('data-count'));
                    const duration = 2000; // 2 secondes
                    const stepTime = 50; // 50ms par étape
                    const steps = duration / stepTime;
                    const increment = targetValue / steps;
                    let currentValue = 0;

                    const counter = setInterval(() => {
                        currentValue += increment;
                        if (currentValue >= targetValue) {
                            stat.textContent = targetValue.toLocaleString();
                            clearInterval(counter);
                        } else {
                            stat.textContent = Math.floor(currentValue).toLocaleString();
                        }
                    }, stepTime);
                });
            }

            // Observer pour déclencher l'animation des statistiques lorsqu'elles sont visibles
            const statisticsSection = document.querySelector('.statistics-section');
            if (statisticsSection) {
                const observer = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            animateStatistics();
                            observer.unobserve(entry.target);
                        }
                    });
                }, { threshold: 0.2 });

                observer.observe(statisticsSection);
            }

            // Mise à jour de la date et de l'heure actuelles
            const currentDate = document.querySelector('.text-center.mt-4.mb-4 div:first-child');
            if (currentDate) {
                currentDate.textContent = 'Date et heure actuelles (UTC): 2025-04-29 13:05:09';
            }

            // Mise à jour du nom d'utilisateur connecté
            const currentUser = document.querySelector('.text-center.mt-4.mb-4 div:last-child');
            if (currentUser) {
                currentUser.textContent = 'Utilisateur connecté: Mohamed-abidi-95';
            }
        });
    </script>
{% endblock %}
==================================================

Fichier: Templates/latex/diagnostic.html.twig
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\latex\diagnostic.html.twig
-----
{# Templates/latex/diagnostic.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Diagnostic LaTeX{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .diagnostic-container {
            max-width: 900px;
            margin: 0 auto;
        }
        .status-good {
            color: #28a745;
        }
        .status-bad {
            color: #dc3545;
        }
        .status-warning {
            color: #ffc107;
        }
        .test-container {
            margin-top: 30px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container diagnostic-container mt-5">
        <h1>Diagnostic de l'Environnement LaTeX</h1>

        <div class="card mb-4">
            <div class="card-header">
                <h2>
                    <i class="fas fa-cogs"></i> État LaTeX
                </h2>
            </div>
            <div class="card-body">
                <p>
                    <strong>Installation LaTeX:</strong>
                    {% if latex_installed %}
                        <span class="status-good">
                        <i class="fas fa-check-circle"></i> Installé
                    </span>
                    {% else %}
                        <span class="status-bad">
                        <i class="fas fa-times-circle"></i> Non installé ou non disponible
                    </span>
                    {% endif %}
                </p>

                {% if latex_installed %}
                    <p><strong>Version:</strong> <code>{{ latex_version }}</code></p>
                {% else %}
                    <div class="alert alert-warning">
                        <h4>LaTeX n'est pas disponible</h4>
                        <p>Pour installer LaTeX sur Windows, téléchargez MiKTeX depuis <a href="https://miktex.org/download" target="_blank">miktex.org</a></p>
                    </div>
                {% endif %}
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header">
                <h2>
                    <i class="fas fa-folder"></i> Répertoires
                </h2>
            </div>
            <div class="card-body">
                <table class="table">
                    <thead>
                    <tr>
                        <th>Répertoire</th>
                        <th>Chemin</th>
                        <th>Existe</th>
                        <th>Écriture</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for name, dir in directories %}
                        <tr>
                            <td>{{ name }}</td>
                            <td><code>{{ dir.path }}</code></td>
                            <td>
                                {% if dir.exists %}
                                    <span class="status-good"><i class="fas fa-check-circle"></i> Oui</span>
                                {% else %}
                                    <span class="status-bad"><i class="fas fa-times-circle"></i> Non</span>
                                {% endif %}
                            </td>
                            <td>
                                {% if dir.writable %}
                                    <span class="status-good"><i class="fas fa-check-circle"></i> Oui</span>
                                {% else %}
                                    <span class="status-bad"><i class="fas fa-times-circle"></i> Non</span>
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>

                {% if not directories.temp.exists or not directories.output.exists %}
                    <div class="alert alert-warning mt-3">
                        <h5>Problème de répertoires</h5>
                        <p>Pour créer manuellement les répertoires nécessaires, exécutez ces commandes dans PowerShell:</p>
                        <pre>New-Item -ItemType Directory -Path "{{ directories.temp.path }}" -Force
New-Item -ItemType Directory -Path "{{ directories.output.path }}" -Force</pre>
                    </div>
                {% endif %}
            </div>
        </div>

        {% if latex_installed and test_result is not null %}
            <div class="card mb-4">
                <div class="card-header">
                    <h2>
                        <i class="fas fa-flask"></i> Test de Compilation
                    </h2>
                </div>
                <div class="card-body">
                    {% if test_result.success %}
                        <div class="alert alert-success">
                            <i class="fas fa-check-circle"></i> Test réussi! La compilation LaTeX fonctionne correctement.
                        </div>

                        {% if test_result.filename is defined %}
                            <p>PDF généré: <code>{{ test_result.filename }}</code></p>
                            <a href="{{ path('app_latex_view_pdf', {'filename': test_result.filename}) }}"
                               target="_blank" class="btn btn-primary">
                                <i class="fas fa-file-pdf"></i> Voir le PDF de Test
                            </a>
                        {% endif %}
                    {% else %}
                        <div class="alert alert-danger">
                            <i class="fas fa-exclamation-triangle"></i> Le test a échoué!
                        </div>

                        {% if test_result.error %}
                            <div class="mt-3">
                                <h5>Erreur:</h5>
                                <pre class="bg-light p-3">{{ test_result.error }}</pre>
                            </div>
                        {% endif %}
                    {% endif %}
                </div>
            </div>
        {% endif %}

        <div class="mt-4 text-center">
            <a href="{{ path('app_latex') }}" class="btn btn-primary">
                <i class="fas fa-arrow-left"></i> Retour à l'Éditeur LaTeX
            </a>
            <a href="{{ path('app_latex_diagnostic') }}" class="btn btn-info">
                <i class="fas fa-sync"></i> Actualiser le Diagnostic
            </a>
        </div>
    </div>
{% endblock %}
==================================================

Fichier: Templates/latex/edit_for_cv.html.twig
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\latex\edit_for_cv.html.twig
-----
{# Templates/latex/edit_for_cv.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Éditeur LaTeX pour CV{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        body {
            overflow: hidden;
            padding: 0;
            margin: 0;
            height: 100vh;
            display: flex;
            flex-direction: column;
        }
        .container-fluid {
            flex: 1;
            display: flex;
            flex-direction: column;
            padding: 15px;
        }
        .editor-area {
            flex: 1;
            display: flex;
            flex-direction: column;
        }
        .latex-editor {
            flex: 1;
            width: 100%;
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 10px;
            font-family: monospace;
            resize: none;
        }
        .toolbar {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }
        .preview-area {
            margin-top: 15px;
            border: 1px solid #ddd;
            padding: 10px;
            min-height: 100px;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #f8f9fa;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container-fluid">
        <h3>Insérer une formule LaTeX dans votre CV</h3>
        <p class="text-muted">Position: <span class="badge bg-info">{{ position|default('Non spécifiée') }}</span></p>

        <div class="toolbar">
            <div class="btn-group btn-group-sm">
                <button class="btn btn-outline-secondary" data-formula="\sum_{i=1}^{n} i = \frac{n(n+1)}{2}">Somme</button>
                <button class="btn btn-outline-secondary" data-formula="\frac{a}{b}">Fraction</button>
                <button class="btn btn-outline-secondary" data-formula="x = \frac{-b \pm \sqrt{b^2-4ac}}{2a}">Quadratique</button>
                <button class="btn btn-outline-secondary" data-formula="\int_{a}^{b} f(x) \, dx">Intégrale</button>
                <button class="btn btn-outline-secondary" data-formula="\lim_{x \to \infty} f(x)">Limite</button>
                <button class="btn btn-outline-secondary" data-formula="\begin{pmatrix} a & b \\ c & d \end{pmatrix}">Matrice</button>
            </div>
            <button id="clear-btn" class="btn btn-sm btn-outline-danger">Effacer</button>
        </div>

        <div class="editor-area">
            <textarea id="latex-formula" class="latex-editor" placeholder="Entrez votre formule LaTeX ici..."></textarea>
        </div>

        <div class="preview-area" id="preview">
            <div id="formula-preview">Aperçu de la formule</div>
        </div>

        <div class="mt-3 d-flex justify-content-between">
            <button class="btn btn-secondary" onclick="window.close()">Annuler</button>
            <button id="insert-btn" class="btn btn-primary">Insérer dans le CV</button>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
    <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const formulaInput = document.getElementById('latex-formula');
            const formulaPreview = document.getElementById('formula-preview');
            const insertBtn = document.getElementById('insert-btn');
            const clearBtn = document.getElementById('clear-btn');
            const position = "{{ position|default('') }}";
            const target = "{{ target|default('_parent') }}";

            // Insérer une formule prédéfinie
            document.querySelectorAll('[data-formula]').forEach(button => {
                button.addEventListener('click', function() {
                    formulaInput.value = this.getAttribute('data-formula');
                    updatePreview();
                });
            });

            // Mettre à jour l'aperçu
            function updatePreview() {
                const formula = formulaInput.value.trim();
                if (formula) {
                    formulaPreview.innerHTML = '$$' + formula + '$$';
                    MathJax.typesetPromise([formulaPreview]).catch(function(err) {
                        console.error('Erreur MathJax:', err);
                    });
                } else {
                    formulaPreview.innerHTML = 'Aperçu de la formule';
                }
            }

            // Écouter les changements dans le textarea
            formulaInput.addEventListener('input', updatePreview);
            formulaInput.addEventListener('change', updatePreview);

            // Effacer le contenu
            clearBtn.addEventListener('click', function() {
                formulaInput.value = '';
                updatePreview();
            });

            // Insérer la formule dans le CV
            insertBtn.addEventListener('click', function() {
                const formula = formulaInput.value.trim();

                if (!formula) {
                    alert('Veuillez entrer une formule LaTeX');
                    return;
                }

                // Envoyer la formule à la fenêtre parente
                if (window.opener && !window.opener.closed) {
                    window.opener.postMessage({
                        type: 'latex_insert',
                        latex: formula,
                        position: position
                    }, '*');
                } else if (target === '_parent') {
                    // Envoyer au parent si c'est une iframe
                    window.parent.postMessage({
                        type: 'latex_insert',
                        latex: formula,
                        position: position
                    }, '*');
                } else {
                    // Stocker dans localStorage comme fallback
                    localStorage.setItem('latex_formula', formula);
                    localStorage.setItem('latex_position', position);
                }

                // Fermer la fenêtre/iframe
                if (window.opener) {
                    window.close();
                } else {
                    alert('Formule LaTeX insérée avec succès');
                }
            });
        });
    </script>
{% endblock %}
==================================================

Fichier: Templates/latex/index.html.twig
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\latex\index.html.twig
-----
{% extends 'base.html.twig' %}

{% block title %}LaTeX vers PDF - Convertisseur{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;700&family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #8bc34a;          /* Main green color */
            --primary-dark: #689f38;           /* Darker green for hover states */
            --primary-light: #aed581;          /* Lighter green for backgrounds */
            --accent-color: #558b2f;           /* Deep green for accents */
            --text-primary: #33691e;           /* Dark green for text */
            --secondary-color: #3f51b5;        /* Complementary blue color */
            --secondary-light: #c5cae9;        /* Light blue for subtle backgrounds */
            --gray-100: #f8f9fa;               /* Very light gray */
            --gray-200: #e9ecef;               /* Light gray */
            --gray-300: #dee2e6;               /* Medium light gray */
            --gray-500: #adb5bd;               /* Medium gray */
            --gray-700: #495057;               /* Medium dark gray */
            --gray-900: #212529;               /* Dark gray */
            --success: #4caf50;                /* Success green */
            --info: #03a9f4;                   /* Info blue */
            --warning: #ff9800;                /* Warning orange */
            --danger: #f44336;                 /* Danger red */
            --shadow-sm: 0 1px 2px rgba(0,0,0,0.05);
            --shadow-md: 0 4px 6px rgba(0,0,0,0.1);
            --shadow-lg: 0 10px 15px rgba(0,0,0,0.1);
            --transition: all 0.2s ease-in-out;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--gray-100);
            color: var(--gray-900);
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 1rem;
        }

        .card {
            background-color: white;
            border-radius: 8px;
            box-shadow: var(--shadow-md);
            overflow: hidden;
        }

        h1, h2, h3, h4, h5, h6 {
            color: var(--text-primary);
            font-weight: 600;
        }

        .btn-primary {
            background-color: var(--primary-color) !important;
            border-color: var(--primary-color) !important;
            color: white !important;
            font-weight: 500;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            transition: var(--transition);
            box-shadow: var(--shadow-sm);
        }

        .btn-primary:hover, .btn-primary:focus {
            background-color: var(--primary-dark) !important;
            border-color: var(--primary-dark) !important;
            box-shadow: var(--shadow-md);
            transform: translateY(-2px);
        }

        .btn-success {
            background-color: var(--success) !important;
            border-color: var(--success) !important;
            color: white !important;
            font-weight: 500;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            transition: var(--transition);
            box-shadow: var(--shadow-sm);
        }

        .btn-success:hover, .btn-success:focus {
            background-color: #43a047 !important;
            border-color: #43a047 !important;
            box-shadow: var(--shadow-md);
            transform: translateY(-2px);
        }

        .btn-outline-primary {
            color: var(--primary-color) !important;
            border-color: var(--primary-color) !important;
            background-color: transparent;
            font-weight: 500;
            transition: var(--transition);
        }

        .btn-outline-primary:hover, .btn-outline-primary:focus {
            color: white !important;
            background-color: var(--primary-color) !important;
            box-shadow: var(--shadow-sm);
        }

        .btn-outline-secondary {
            color: var(--gray-700) !important;
            border-color: var(--gray-300) !important;
            background-color: transparent;
            transition: var(--transition);
        }

        .btn-outline-secondary:hover, .btn-outline-secondary:focus {
            color: var(--gray-900) !important;
            background-color: var(--gray-200) !important;
        }

        .btn-outline-danger {
            color: var(--danger) !important;
            border-color: var(--danger) !important;
            background-color: transparent;
            transition: var(--transition);
        }

        .btn-outline-danger:hover, .btn-outline-danger:focus {
            color: white !important;
            background-color: var(--danger) !important;
        }

        .btn-icon {
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }

        .btn-icon i {
            margin-right: 0.5rem;
        }

        .latex-container {
            display: flex;
            min-height: 80vh;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: var(--shadow-lg);
            background-color: white;
            margin-bottom: 2rem;
        }

        .latex-editor {
            flex: 1;
            padding: 0;
            border-right: 1px solid var(--gray-300);
            display: flex;
            flex-direction: column;
            background-color: white;
        }

        .pdf-preview {
            flex: 1;
            padding: 0;
            display: flex;
            flex-direction: column;
            background-color: white;
        }

        .editor-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 1.5rem;
            border-bottom: 1px solid var(--gray-300);
            background-color: var(--primary-light);
            color: var(--text-primary);
        }

        .editor-header h3 {
            margin: 0;
            font-size: 1.2rem;
            font-weight: 600;
            display: flex;
            align-items: center;
        }

        .editor-header h3 i {
            margin-right: 0.5rem;
        }

        #latex-code {
            width: 100%;
            height: 100%;
            min-height: 400px;
            font-family: 'JetBrains Mono', monospace;
            font-size: 14px;
            padding: 1rem;
            border: none;
            resize: none;
            line-height: 1.6;
            color: var(--gray-900);
            background-color: white;
        }

        #latex-code:focus {
            outline: none;
        }

        #pdf-viewer {
            width: 100%;
            height: 100%;
            min-height: 400px;
            border: none;
            background-color: var(--gray-100);
        }

        .btn-toolbar {
            padding: 1rem 1.5rem;
            background-color: var(--gray-100);
            border-bottom: 1px solid var(--gray-300);
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
        }

        .loading {
            display: none;
            text-align: center;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 10;
        }

        .spinner-border {
            width: 3rem;
            height: 3rem;
            border-width: 0.25rem;
            color: var(--primary-color);
        }

        .upload-section {
            background-color: white;
            border-radius: 10px;
            padding: 1.5rem;
            box-shadow: var(--shadow-md);
        }

        .upload-section h3 {
            margin-top: 0;
            margin-bottom: 1rem;
            font-size: 1.2rem;
            color: var(--text-primary);
            display: flex;
            align-items: center;
        }

        .upload-section h3 i {
            margin-right: 0.5rem;
        }

        .template-btn {
            padding: 0.375rem 0.75rem;
            font-weight: 500;
        }

        .error-container {
            color: white;
            background-color: var(--danger);
            border-radius: 6px;
            padding: 0.75rem 1rem;
            margin-bottom: 1rem;
            display: none;
        }

        .editor-container {
            position: relative;
            flex: 1;
            display: flex;
            flex-direction: column;
        }

        .status-bar {
            background: var(--gray-100);
            border-top: 1px solid var(--gray-300);
            padding: 0.5rem 1rem;
            font-size: 0.75rem;
            color: var(--gray-700);
            display: flex;
            justify-content: space-between;
        }

        .alert-info {
            background-color: var(--secondary-light);
            border-left: 4px solid var(--secondary-color);
            color: var(--gray-900);
            padding: 1rem;
            border-radius: 6px;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
        }

        .alert-info i {
            margin-right: 0.75rem;
            color: var(--secondary-color);
            font-size: 1.25rem;
        }

        .editor-actions {
            padding: 1rem 1.5rem;
            border-top: 1px solid var(--gray-300);
            display: flex;
            justify-content: space-between;
            background-color: white;
        }

        .progress {
            height: 0.5rem;
            border-radius: 1rem;
            overflow: hidden;
        }

        .progress-bar {
            background-color: var(--primary-color);
            transition: width 0.3s ease;
        }

        .clipboard-button {
            position: absolute;
            top: 1rem;
            right: 1rem;
            z-index: 10;
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
            background-color: var(--gray-200);
            border: 1px solid var(--gray-300);
            border-radius: 4px;
            color: var(--gray-700);
            transition: var(--transition);
        }

        .clipboard-button:hover {
            background-color: var(--gray-300);
            color: var(--gray-900);
        }

        .feature-icons {
            display: flex;
            gap: 1.5rem;
            margin: 2rem 0;
            justify-content: center;
        }

        .feature-icon {
            text-align: center;
            flex: 1;
            max-width: 200px;
        }

        .feature-icon i {
            font-size: 2.5rem;
            color: var(--primary-color);
            margin-bottom: 1rem;
        }

        .feature-icon h4 {
            font-size: 1.1rem;
            margin-bottom: 0.5rem;
        }

        .feature-icon p {
            font-size: 0.9rem;
            color: var(--gray-700);
        }

        /* Social Media Section */
        .social-icons-container {
            text-align: center;
            padding: 1.5rem 0;
            background-color: white;
            border-radius: 10px;
            box-shadow: var(--shadow-md);
            margin-top: 2rem;
            margin-bottom: 2rem;
        }

        .social-title {
            color: var(--text-primary);
            font-size: 1.1rem;
            margin-bottom: 1rem;
            font-weight: 500;
        }

        .social-icons {
            display: flex;
            justify-content: center;
            gap: 1.5rem;
            margin-bottom: 1rem;
        }

        .social-icon {
            width: 48px;
            height: 48px;
            border-radius: 50%;
            background-color: var(--gray-100);
            color: var(--primary-color);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            transition: all 0.3s;
            text-decoration: none;
            box-shadow: var(--shadow-sm);
        }

        .social-icon:hover {
            background-color: var(--primary-color);
            color: white;
            transform: translateY(-5px) scale(1.1);
            box-shadow: var(--shadow-md);
        }

        .footer {
            text-align: center;
            color: var(--gray-700);
            font-size: 0.9rem;
            padding: 1rem 0;
            margin-top: 1rem;
        }

        /* Pour le mode responsive */
        @media (max-width: 992px) {
            .latex-container {
                flex-direction: column;
            }

            .latex-editor, .pdf-preview {
                width: 100%;
                border-right: none;
                border-bottom: 1px solid var(--gray-300);
            }

            .feature-icons {
                flex-wrap: wrap;
            }

            .feature-icon {
                min-width: 40%;
                margin-bottom: 1.5rem;
            }

            .social-icons {
                gap: 1rem;
            }
        }

        @media (max-width: 768px) {
            .feature-icon {
                min-width: 100%;
            }

            .social-icon {
                width: 40px;
                height: 40px;
                font-size: 1.2rem;
            }
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container mt-4 mb-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h1 class="mb-1">Convertisseur LaTeX vers PDF</h1>
                <p class="text-muted">Créez et exportez facilement vos documents scientifiques</p>
            </div>
            <div>
                <a href="{{ path('app_cv_generator') }}" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i> Retour au générateur de CV
                </a>
            </div>
        </div>

        <div class="alert alert-info mb-4">
            <i class="fas fa-info-circle"></i>
            <div>
                <strong>Comment utiliser cet outil:</strong> Entrez ou collez votre code LaTeX, puis cliquez sur "Aperçu" pour visualiser votre document ou "Générer PDF" pour le télécharger. Ce système utilise MikTeX pour une compilation LaTeX haute qualité.
            </div>
        </div>

        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="alert alert-{{ label }} alert-dismissible fade show mb-4">
                    {{ message }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            {% endfor %}
        {% endfor %}

        <div id="error-container" class="error-container mb-3">
            <i class="fas fa-exclamation-circle me-2"></i>
            <span id="error-message"></span>
        </div>

        <div class="card mb-4">
            <div class="btn-toolbar">
                <div class="btn-group me-2 mb-2">
                    <button type="button" class="btn btn-sm btn-outline-primary template-btn" id="cv-template">
                        <i class="fas fa-id-card me-1"></i> Template CV
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-primary template-btn" id="letter-template">
                        <i class="fas fa-envelope me-1"></i> Template Lettre
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-primary template-btn" id="article-template">
                        <i class="fas fa-newspaper me-1"></i> Template Article
                    </button>
                </div>

                <div class="btn-group me-2 mb-2">
                    <button type="button" class="btn btn-sm btn-outline-secondary" id="insert-math">
                        <i class="fas fa-square-root-alt me-1"></i> Insérer Math
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-secondary" id="insert-figure">
                        <i class="fas fa-image me-1"></i> Insérer Figure
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-secondary" id="insert-table">
                        <i class="fas fa-table me-1"></i> Insérer Tableau
                    </button>
                </div>

                <div class="btn-group mb-2">
                    <button type="button" class="btn btn-sm btn-outline-danger" id="clear-btn">
                        <i class="fas fa-trash-alt me-1"></i> Effacer
                    </button>
                </div>
            </div>

            <div class="latex-container">
                <div class="latex-editor">
                    <div class="editor-header">
                        <h3><i class="fas fa-code"></i> Code LaTeX</h3>
                        <div>
                            <button type="button" class="btn btn-sm btn-outline-secondary" id="copy-btn" title="Copier le code">
                                <i class="fas fa-copy"></i>
                            </button>
                        </div>
                    </div>

                    <div class="editor-container">
                        <textarea id="latex-code" placeholder="Entrez votre code LaTeX ici..." spellcheck="false"></textarea>
                        <div class="status-bar">
                            <span id="cursor-position">Ligne: 1, Col: 1</span>
                            <span id="char-count">0 caractères</span>
                        </div>
                    </div>

                    <div class="editor-actions">
                        <button type="button" class="btn btn-primary btn-icon" id="preview-btn">
                            <i class="fas fa-eye"></i> Aperçu
                        </button>
                        <button type="button" class="btn btn-success btn-icon" id="generate-btn">
                            <i class="fas fa-download"></i> Générer PDF
                        </button>
                    </div>
                </div>

                <div class="pdf-preview">
                    <div class="editor-header">
                        <h3><i class="fas fa-file-pdf"></i> Aperçu PDF</h3>
                        <div>
                            <a id="open-pdf-link" href="#" target="_blank" class="btn btn-sm btn-outline-secondary" style="display: none;" title="Ouvrir dans un nouvel onglet">
                                <i class="fas fa-external-link-alt"></i>
                            </a>
                        </div>
                    </div>

                    <div class="loading" id="loading-spinner">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Chargement...</span>
                        </div>
                        <p class="mt-3 text-center">Génération du PDF en cours...</p>
                    </div>

                    <iframe id="pdf-viewer" src="about:blank"></iframe>
                </div>
            </div>
        </div>

        <div class="d-flex justify-content-between align-items-center mb-4">
            <a href="{{ path('app_latex_diagnostic') }}" class="btn btn-outline-secondary">
                <i class="fas fa-stethoscope me-2"></i> Diagnostiquer l'installation LaTeX
            </a>


        </div>

        <div class="upload-section">
            <h3><i class="fas fa-file-upload"></i> Ou téléchargez un fichier LaTeX</h3>

            <form action="{{ path('app_latex_upload') }}" method="post" enctype="multipart/form-data" id="upload-form">
                <div class="input-group">
                    <input type="file" class="form-control" id="latex-file" name="latex_file" accept=".tex">
                    <button class="btn btn-primary" type="submit">
                        <i class="fas fa-upload me-2"></i> Convertir
                    </button>
                </div>
                <div class="form-text text-muted mt-2">
                    Formats acceptés: .tex - Taille maximale: 5 Mo
                </div>
            </form>

            <div class="progress mt-3 upload-progress" style="display: none;">
                <div class="progress-bar" role="progressbar" style="width: 0%"></div>
            </div>
        </div>

        <div class="feature-icons mt-5">
            <div class="feature-icon">
                <i class="fas fa-bolt"></i>
                <h4>Conversion rapide</h4>
                <p>De LaTeX vers PDF en quelques secondes</p>
            </div>
            <div class="feature-icon">
                <i class="fas fa-puzzle-piece"></i>
                <h4>Templates prêts à l'emploi</h4>
                <p>CV, lettre, article scientifique</p>
            </div>
            <div class="feature-icon">
                <i class="fas fa-file-export"></i>
                <h4>Export simple</h4>
                <p>Téléchargez directement votre PDF</p>
            </div>
            <div class="feature-icon">
                <i class="fas fa-laptop-code"></i>
                <h4>Éditeur avancé</h4>
                <p>Avec insertion de code facilitée par MikTeX</p>
            </div>
        </div>

        <!-- Social Media Section -->
        <div class="social-icons-container">
            <p class="social-title">Suivez-nous sur les réseaux sociaux</p>
            <div class="social-icons">
                <a href="https://youtu.be/5FKwnZ7OFVg?si=lvX-6Wh8DjyRfuGM" target="_blank" rel="noopener noreferrer" class="social-icon" aria-label="YouTube ESPRIT">
                    <i class="fab fa-youtube"></i>
                </a>
                <a href="https://www.instagram.com/esprit_ingenieur?utm_source=ig_web_button_share_sheet&igsh=ZDNlZDc0MzIxNw==" target="_blank" rel="noopener noreferrer" class="social-icon" aria-label="Instagram ESPRIT">
                    <i class="fab fa-instagram"></i>
                </a>
                <a href="https://www.facebook.com/esprit.tn" target="_blank" rel="noopener noreferrer" class="social-icon" aria-label="Facebook ESPRIT">
                    <i class="fab fa-facebook-f"></i>
                </a>
                <a href="https://www.linkedin.com/school/esprit_2/posts/?feedView=all" target="_blank" rel="noopener noreferrer" class="social-icon" aria-label="LinkedIn ESPRIT">
                    <i class="fab fa-linkedin-in"></i>
                </a>
            </div>
        </div>

        <!-- Footer -->
        <div class="footer">
            © 2025 ESPRIT CV Generator. Tous droits réservés.
            <div class="small text-muted mt-1">
                Dernière mise à jour: {{ "now"|date("Y-m-d") }} par {{ "Mohamed-abidi-95" }}
            </div>
        </div>

        <form id="latex-form" action="{{ path('app_latex_convert') }}" method="post" style="display:none;">
            <input type="hidden" name="latex" id="latex-input">
        </form>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM chargé, initialisation du convertisseur LaTeX...');

            // Éléments du DOM
            const latexCode = document.getElementById('latex-code');
            const latexInput = document.getElementById('latex-input');
            const latexForm = document.getElementById('latex-form');
            const pdfViewer = document.getElementById('pdf-viewer');
            const loadingSpinner = document.getElementById('loading-spinner');
            const previewBtn = document.getElementById('preview-btn');
            const generateBtn = document.getElementById('generate-btn');
            const clearBtn = document.getElementById('clear-btn');
            const copyBtn = document.getElementById('copy-btn');
            const cvTemplate = document.getElementById('cv-template');
            const letterTemplate = document.getElementById('letter-template');
            const articleTemplate = document.getElementById('article-template');
            const errorContainer = document.getElementById('error-container');
            const errorMessage = document.getElementById('error-message');
            const cursorPosition = document.getElementById('cursor-position');
            const charCount = document.getElementById('char-count');
            const openPdfLink = document.getElementById('open-pdf-link');
            const insertMathBtn = document.getElementById('insert-math');
            const insertFigureBtn = document.getElementById('insert-figure');
            const insertTableBtn = document.getElementById('insert-table');
            const uploadForm = document.getElementById('upload-form');
            const uploadProgress = document.querySelector('.upload-progress');

            // État
            let lastCursorPosition = 0;

            // Récupérer du contenu sauvegardé dans localStorage
            const savedContent = localStorage.getItem('latex_editor_content');
            if (savedContent) {
                latexCode.value = savedContent;
                updateCharCount();
            }

            // Auto-save dans localStorage toutes les 30 secondes
            setInterval(() => {
                if (latexCode.value.trim()) {
                    localStorage.setItem('latex_editor_content', latexCode.value);
                }
            }, 30000);

            // Fonction pour mettre à jour l'aperçu PDF
            function updatePreview(e) {
                if (e) {
                    e.preventDefault();
                    e.stopPropagation();
                }

                console.log('Fonction updatePreview appelée');
                const code = latexCode.value.trim();

                if (!code) {
                    showError('Veuillez entrer du code LaTeX avant de générer un aperçu.');
                    return false;
                }

                // Masquer les erreurs précédentes
                hideError();

                // Afficher le spinner de chargement
                pdfViewer.style.display = 'none';
                loadingSpinner.style.display = 'block';
                openPdfLink.style.display = 'none';

                // Envoyer le code LaTeX pour prévisualisation
                console.log('Envoi de la requête pour prévisualisation');
                fetch('{{ path('app_latex_preview') }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({
                        latex: code
                    })
                })
                    .then(response => {
                        console.log('Réponse reçue, status:', response.status);
                        return response.json();
                    })
                    .then(data => {
                        console.log('Données JSON reçues:', data);
                        loadingSpinner.style.display = 'none';
                        pdfViewer.style.display = 'block';

                        if (data.success) {
                            pdfViewer.src = data.pdfUrl;
                            openPdfLink.href = data.pdfUrl;
                            openPdfLink.style.display = 'inline-block';
                            console.log('PDF généré avec succès, URL:', data.pdfUrl);
                        } else {
                            showError('Erreur lors de la génération du PDF: ' + data.error);
                            pdfViewer.src = 'about:blank';
                            console.error('Erreur de prévisualisation:', data.error);
                        }
                    })
                    .catch(error => {
                        loadingSpinner.style.display = 'none';
                        pdfViewer.style.display = 'block';
                        console.error('Erreur fetch:', error);
                        showError('Une erreur s\'est produite lors de la communication avec le serveur.');
                    });

                return false;
            }

            // Fonction pour générer et télécharger le PDF
            function generatePdf(e) {
                if (e) {
                    e.preventDefault();
                    e.stopPropagation();
                }

                console.log('Fonction generatePdf appelée');
                const code = latexCode.value.trim();

                if (!code) {
                    showError('Veuillez entrer du code LaTeX avant de générer un PDF.');
                    return false;
                }

                hideError();
                latexInput.value = code;

                console.log('Soumission du formulaire pour téléchargement PDF');
                try {
                    latexForm.submit();
                } catch (error) {
                    console.error('Erreur lors de la soumission du formulaire:', error);
                    showError('Erreur lors de la génération du PDF.');
                }

                return false;
            }

            // Fonctions pour gérer les erreurs
            function showError(message) {
                errorMessage.innerHTML = message.replace(/\n/g, '<br>');
                errorContainer.style.display = 'block';

                // Scroll to error message
                errorContainer.scrollIntoView({ behavior: 'smooth', block: 'center' });

                setTimeout(() => {
                    hideError();
                }, 8000); // Augmenté à 8 secondes pour les erreurs LaTex qui peuvent être longues
            }

            function hideError() {
                errorContainer.style.display = 'none';
            }

            // Mettre à jour la position du curseur
            function updateCursorPosition() {
                // Sauvegarder la position actuelle pour une utilisation future
                lastCursorPosition = latexCode.selectionStart;

                // Calculer ligne et colonne
                const text = latexCode.value.substring(0, latexCode.selectionStart);
                const lines = text.split('\n');
                const lineCount = lines.length;
                const colCount = lines[lineCount - 1].length + 1;

                cursorPosition.textContent = `Ligne: ${lineCount}, Col: ${colCount}`;
            }

            // Mettre à jour le compteur de caractères
            function updateCharCount() {
                const count = latexCode.value.length;
                charCount.textContent = `${count} caractère${count !== 1 ? 's' : ''}`;
            }

            // Insérer du texte à la position du curseur
            function insertTextAtCursor(text) {
                const startPos = latexCode.selectionStart;
                const endPos = latexCode.selectionEnd;
                const before = latexCode.value.substring(0, startPos);
                const after = latexCode.value.substring(endPos, latexCode.value.length);

                latexCode.value = before + text + after;

                // Placer le curseur après le texte inséré
                const newCursorPos = startPos + text.length;
                latexCode.selectionStart = newCursorPos;
                latexCode.selectionEnd = newCursorPos;

                // Focus sur l'éditeur
                latexCode.focus();

                // Mettre à jour les compteurs
                updateCursorPosition();
                updateCharCount();
            }

            // Insérer un modèle de template
            function insertTemplate(templateName, e) {
                if (e) {
                    e.preventDefault();
                    e.stopPropagation();
                }

                console.log('Insertion du template:', templateName);

                let templateContent = '';

                switch(templateName) {
                    case 'cv':
                        templateContent = `\\documentclass[a4paper,11pt]{article}
\\usepackage[utf8]{inputenc}
\\usepackage[T1]{fontenc}
\\usepackage{geometry}
\\usepackage{enumitem}
\\usepackage{xcolor}

\\geometry{a4paper, margin=2cm}
\\renewcommand{\\familydefault}{\\sfdefault}
\\definecolor{accent}{RGB}{139, 195, 74}

\\begin{document}

\\begin{center}
    {\\Huge\\bfseries CURRICULUM VITAE}
\\end{center}

\\vspace{1cm}

\\noindent
\\begin{minipage}{0.6\\textwidth}
    {\\Large\\bfseries Votre Nom}\\\\
    Date de naissance: 01.01.1990\\\\
    Adresse: Votre adresse\\\\
    Téléphone: +123 456 789\\\\
    Email: vous@email.com
\\end{minipage}
\\hfill
\\begin{minipage}{0.3\\textwidth}
    % Vous pouvez insérer une photo ici
    \\framebox[\\textwidth]{Photo}
\\end{minipage}

\\vspace{0.5cm}
\\hrule
\\vspace{0.5cm}

\\section*{\\textcolor{accent}{FORMATION}}
\\begin{itemize}[leftmargin=0cm]
    \\item \\textbf{2018-2022} | Diplôme d'ingénieur, École d'ingénieurs
    \\item \\textbf{2016-2018} | Licence, Université
\\end{itemize}

\\section*{\\textcolor{accent}{EXPÉRIENCES PROFESSIONNELLES}}
\\begin{itemize}[leftmargin=0cm]
    \\item \\textbf{2022-présent} | Développeur logiciel, Entreprise XYZ
    \\item \\textbf{2020-2022} | Stage développeur web, Entreprise ABC
\\end{itemize}

\\section*{\\textcolor{accent}{COMPÉTENCES}}
\\begin{itemize}[leftmargin=0cm]
    \\item Langages de programmation: Java, Python, PHP
    \\item Frameworks: Spring, Django, Symfony
    \\item Base de données: MySQL, MongoDB
    \\item DevOps: Docker, CI/CD
\\end{itemize}

\\section*{\\textcolor{accent}{LANGUES}}
\\begin{itemize}[leftmargin=0cm]
    \\item Français: Langue maternelle
    \\item Anglais: Courant (C1)
    \\item Espagnol: Intermédiaire (B1)
\\end{itemize}

\\end{document}`;
                        break;
                    case 'letter':
                        templateContent = `\\documentclass[a4paper,11pt]{letter}
\\usepackage[utf8]{inputenc}
\\usepackage[T1]{fontenc}
\\usepackage{geometry}
\\usepackage{xcolor}

\\geometry{a4paper, margin=2cm}
\\renewcommand{\\familydefault}{\\sfdefault}
\\definecolor{accent}{RGB}{139, 195, 74}

\\signature{Votre Nom}
\\address{Votre Adresse\\\\Votre Ville, Code Postal}

\\begin{document}

\\begin{letter}{Entreprise XYZ\\\\Adresse de l'entreprise\\\\Ville, Code Postal}

\\opening{Madame, Monsieur,}

Je soumets ma candidature pour le poste de Développeur Web annoncé sur votre site internet.

Actuellement en poste chez ABC comme développeur full-stack, je souhaite rejoindre votre entreprise car elle correspond parfaitement à mes aspirations professionnelles. Mon expérience en développement web, notamment avec les technologies JavaScript et PHP, me permettrait d'être rapidement opérationnel au sein de vos équipes.

Je suis particulièrement attiré par les projets innovants que votre entreprise développe dans le domaine de l'intelligence artificielle appliquée au web.

Je reste à votre disposition pour un entretien où je pourrai vous présenter plus en détail mes compétences et ma motivation.

\\closing{Veuillez agréer, Madame, Monsieur, l'expression de mes salutations distinguées.}

\\end{letter}
\\end{document}`;
                        break;
                    case 'article':
                        templateContent = `\\documentclass[a4paper,11pt]{article}
\\usepackage[utf8]{inputenc}
\\usepackage[T1]{fontenc}
\\usepackage{geometry}
\\usepackage{graphicx}
\\usepackage{hyperref}
\\usepackage{xcolor}

\\definecolor{linkcolor}{RGB}{139, 195, 74}
\\hypersetup{colorlinks=true, linkcolor=linkcolor, citecolor=linkcolor, urlcolor=linkcolor}

\\title{Titre de l'Article}
\\author{Votre Nom\\\\\\texttt{email@domaine.com}}
\\date{\\today}

\\begin{document}

\\maketitle

\\begin{abstract}
    Résumé de votre article. Le résumé doit présenter brièvement le contenu et les conclusions principales de votre travail.
\\end{abstract}

\\section{Introduction}
L'introduction présente le contexte et les motivations de l'étude.

\\section{Méthodologie}
Cette section décrit comment l'étude a été menée.

\\section{Résultats}
Présentation des résultats obtenus.

\\section{Discussion}
Interprétation des résultats et comparaison avec la littérature existante.

\\section{Conclusion}
Résumé des principales conclusions et perspectives.

\\begin{thebibliography}{9}
    \\bibitem{ref1}
    Auteur, A. (2022). Titre de l'article. \\textit{Nom de la revue}, Volume(Numéro), Pages.

    \\bibitem{ref2}
    Auteur, B., \\& Auteur, C. (2021). Titre du livre. Éditeur.
\\end{thebibliography}

\\end{document}`;
                        break;
                }

                if (templateContent) {
                    latexCode.value = templateContent;
                    updateCharCount();
                }

                return false;
            }

            // Gestionnaires d'événements avec vérification que les éléments existent
            if (previewBtn) {
                previewBtn.onclick = updatePreview;
                console.log('Écouteur ajouté: previewBtn');
            } else {
                console.error('Élément non trouvé: previewBtn');
            }

            if (generateBtn) {
                generateBtn.onclick = generatePdf;
                console.log('Écouteur ajouté: generateBtn');
            } else {
                console.error('Élément non trouvé: generateBtn');
            }

            // Copier le contenu
            if (copyBtn) {
                copyBtn.onclick = function(e) {
                    e.preventDefault();
                    latexCode.select();
                    document.execCommand('copy');
                    // Animation de feedback
                    this.innerHTML = '<i class="fas fa-check"></i>';
                    setTimeout(() => {
                        this.innerHTML = '<i class="fas fa-copy"></i>';
                    }, 1500);
                };
                console.log('Écouteur ajouté: copyBtn');
            } else {
                console.error('Élément non trouvé: copyBtn');
            }

            if (clearBtn) {
                clearBtn.onclick = function(e) {
                    e.preventDefault();
                    if (confirm('Êtes-vous sûr de vouloir effacer tout le contenu ?')) {
                        latexCode.value = '';
                        pdfViewer.src = 'about:blank';
                        openPdfLink.style.display = 'none';
                        localStorage.removeItem('latex_editor_content');
                        updateCharCount();
                    }
                };
                console.log('Écouteur ajouté: clearBtn');
            } else {
                console.error('Élément non trouvé: clearBtn');
            }

            // Boutons de template
            if (cvTemplate) {
                cvTemplate.onclick = function(e) {
                    insertTemplate('cv', e);
                };
                console.log('Écouteur ajouté: cvTemplate');
            } else {
                console.error('Élément non trouvé: cvTemplate');
            }

            if (letterTemplate) {
                letterTemplate.onclick = function(e) {
                    insertTemplate('letter', e);
                };
                console.log('Écouteur ajouté: letterTemplate');
            } else {
                console.error('Élément non trouvé: letterTemplate');
            }

            if (articleTemplate) {
                articleTemplate.onclick = function(e) {
                    insertTemplate('article', e);
                };
                console.log('Écouteur ajouté: articleTemplate');
            } else {
                console.error('Élément non trouvé: articleTemplate');
            }

            // Suivi de la position du curseur et du nombre de caractères
            if (latexCode) {
                latexCode.addEventListener('click', updateCursorPosition);
                latexCode.addEventListener('keyup', function() {
                    updateCursorPosition();
                    updateCharCount();
                });
                console.log('Écouteurs ajoutés pour latexCode');
            } else {
                console.error('Élément non trouvé: latexCode');
            }

            // Boutons d'insertion
            if (insertMathBtn) {
                insertMathBtn.onclick = function(e) {
                    e.preventDefault();
                    insertTextAtCursor(`\\begin{equation}
    E = mc^2
\\end{equation}`);
                };
                console.log('Écouteur ajouté: insertMathBtn');
            } else {
                console.error('Élément non trouvé: insertMathBtn');
            }

            if (insertFigureBtn) {
                insertFigureBtn.onclick = function(e) {
                    e.preventDefault();
                    insertTextAtCursor(`\\begin{figure}[htbp]
    \\centering
    % \\includegraphics[width=0.7\\textwidth]{chemin/vers/image}
    \\caption{Légende de la figure.}
    \\label{fig:exemple}
\\end{figure}`);
                };
                console.log('Écouteur ajouté: insertFigureBtn');
            } else {
                console.error('Élément non trouvé: insertFigureBtn');
            }

            if (insertTableBtn) {
                insertTableBtn.onclick = function(e) {
                    e.preventDefault();
                    insertTextAtCursor(`\\begin{table}[htbp]
    \\centering
    \\begin{tabular}{|c|c|c|}
        \\hline
        Colonne 1 & Colonne 2 & Colonne 3 \\\\
        \\hline
        Valeur 1 & Valeur 2 & Valeur 3 \\\\
        Valeur 4 & Valeur 5 & Valeur 6 \\\\
        \\hline
    \\end{tabular}
    \\caption{Légende du tableau.}
    \\label{tab:exemple}
\\end{table}`);
                };
                console.log('Écouteur ajouté: insertTableBtn');
            } else {
                console.error('Élément non trouvé: insertTableBtn');
            }

            // Gérer le formulaire d'upload
            if (uploadForm) {
                uploadForm.addEventListener('submit', function(e) {
                    const fileInput = document.getElementById('latex-file');
                    if (!fileInput || !fileInput.files.length) {
                        e.preventDefault();
                        showError('Veuillez sélectionner un fichier .tex à télécharger');
                        return;
                    }

                    const file = fileInput.files[0];
                    if (file.size > 5 * 1024 * 1024) { // 5 MB max
                        e.preventDefault();
                        showError('Le fichier est trop volumineux. Taille maximale: 5 Mo');
                        return;
                    }

                    // Simuler une barre de progression pour le téléchargement
                    uploadProgress.style.display = 'block';
                    const progressBar = uploadProgress.querySelector('.progress-bar');
                    let progress = 0;

                    const interval = setInterval(() => {
                        progress += 10;
                        if (progress > 90) clearInterval(interval);
                        progressBar.style.width = progress + '%';
                    }, 200);
                });
                console.log('Écouteur ajouté: uploadForm');
            } else {
                console.error('Élément non trouvé: uploadForm');
            }

            // Initialiser les compteurs
            updateCharCount();

            // Animation des icônes sociales
            const socialIcons = document.querySelectorAll('.social-icon');
            if (socialIcons.length > 0) {
                socialIcons.forEach(icon => {
                    icon.addEventListener('mouseenter', function() {
                        this.style.transform = 'translateY(-5px) scale(1.1)';
                    });
                    icon.addEventListener('mouseleave', function() {
                        this.style.transform = '';
                    });
                });
            }

            console.log('Initialisation du convertisseur LaTeX terminée');
        });
    </script>
{% endblock %}

==================================================

Fichier: Templates\cv_generator\test_latex_editor.html.twig
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\cv_generator\test_latex_editor.html.twig
-----
{% extends 'base.html.twig' %}

{% block title %}Test Éditeur LaTeX{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .test-container {
            max-width: 800px;
            margin: 30px auto;
            padding: 20px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .latex-preview {
            margin: 20px 0;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background: #f9f9f9;
            min-height: 50px;
        }

        .formula-list {
            margin-top: 20px;
        }

        .formula-item {
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #eee;
            border-radius: 4px;
        }

        .action-buttons {
            margin-top: 20px;
        }

        .moderncv-section {
            margin-top: 40px;
            padding-top: 20px;
            border-top: 1px solid #eee;
        }

        pre {
            background: #f5f5f5;
            padding: 10px;
            border-radius: 4px;
            overflow-x: auto;
            font-size: 0.9em;
        }

        .code-box {
            max-height: 300px;
            overflow-y: auto;
            margin-bottom: 15px;
        }

        .tab-content {
            padding: 15px;
            border: 1px solid #dee2e6;
            border-top: 0;
            border-radius: 0 0 .25rem .25rem;
        }

        .engine-card {
            transition: transform 0.3s ease;
        }

        .engine-card:hover {
            transform: translateY(-5px);
        }

        .badge-engine {
            position: absolute;
            top: 10px;
            right: 10px;
        }

        .engine-icon {
            font-size: 2.5rem;
            margin-bottom: 15px;
            color: #6c757d;
        }

        .timestamp {
            font-size: 0.8rem;
            color: #6c757d;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container test-container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>Test de l'Éditeur LaTeX</h1>
            <span class="text-muted small">{{ current_time|date('Y-m-d H:i:s') }} UTC</span>
        </div>

        <p>Cette page vous permet de tester l'éditeur LaTeX et d'explorer les différentes façons d'intégrer LaTeX dans votre CV.</p>

        <div class="d-flex justify-content-between align-items-center mb-4">
            <button id="open-latex-button" class="btn btn-primary">
                <i class="fas fa-square-root-alt"></i> Ouvrir l'éditeur LaTeX
            </button>

            <div>
                <span class="badge bg-info">Utilisateur: {{ username }}</span>
            </div>
        </div>

        <h3>Prévisualisation</h3>
        <div id="latex-preview" class="latex-preview">
            Aucune formule LaTeX insérée pour l'instant.
        </div>

        <h3>Formules enregistrées</h3>
        <div id="formula-list" class="formula-list">
            <p id="no-formulas-message">Aucune formule enregistrée.</p>
        </div>

        <div class="action-buttons">
            <button id="clear-formulas" class="btn btn-danger">Effacer toutes les formules</button>
        </div>

        <!-- Nouvelle section pour ModernCV -->
        <div class="moderncv-section">
            <h2><i class="fas fa-file-pdf"></i> Générer un CV avec ModernCV</h2>
            <p>Découvrez notre nouvelle fonctionnalité de génération de CV professionnel avec différents moteurs LaTeX et le package ModernCV.</p>

            <ul class="nav nav-tabs" id="latexTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="example-tab" data-bs-toggle="tab" data-bs-target="#example" type="button" role="tab" aria-controls="example" aria-selected="true">Exemple</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="template-tab" data-bs-toggle="tab" data-bs-target="#template" type="button" role="tab" aria-controls="template" aria-selected="false">Template</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="wasysym-tab" data-bs-toggle="tab" data-bs-target="#wasysym" type="button" role="tab" aria-controls="wasysym" aria-selected="false">Symboles wasysym</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="engines-tab" data-bs-toggle="tab" data-bs-target="#engines" type="button" role="tab" aria-controls="engines" aria-selected="false">Moteurs LaTeX</button>
                </li>
            </ul>

            <div class="tab-content" id="latexTabsContent">
                <div class="tab-pane fade show active" id="example" role="tabpanel" aria-labelledby="example-tab">
                    <h4>Code LaTeX d'exemple pour ModernCV</h4>
                    <div class="code-box">
                        <pre><code class="language-tex">{{ exampleLatexCode|raw }}</code></pre>
                    </div>
                </div>

                <div class="tab-pane fade" id="template" role="tabpanel" aria-labelledby="template-tab">
                    <h4>Contenu de votre template LaTeX</h4>
                    <div class="code-box">
                        <pre><code class="language-tex">{{ templates.classic|raw }}</code></pre>
                    </div>
                </div>

                <div class="tab-pane fade" id="wasysym" role="tabpanel" aria-labelledby="wasysym-tab">
                    <h4>Exemples de symboles disponibles avec wasysym</h4>
                    <div class="row">
                        <div class="col-md-6">
                            <ul class="list-group">
                                <li class="list-group-item"><code>\\smiley{}</code> - ☺</li>
                                <li class="list-group-item"><code>\\frownie{}</code> - ☹</li>
                                <li class="list-group-item"><code>\\checkbox{}</code> - ☑</li>
                                <li class="list-group-item"><code>\\Square{}</code> - □</li>
                                <li class="list-group-item"><code>\\CheckedBox{}</code> - ☒</li>
                            </ul>
                        </div>
                        <div class="col-md-6">
                            <ul class="list-group">
                                <li class="list-group-item"><code>\\XBox{}</code> - ☒</li>
                                <li class="list-group-item"><code>\\officialsymbol{}</code> - ®</li>
                                <li class="list-group-item"><code>\\currency{}</code> - ¤</li>
                                <li class="list-group-item"><code>\\diameter{}</code> - ⌀</li>
                                <li class="list-group-item"><code>\\phone{}</code> - ☎</li>
                            </ul>
                        </div>
                    </div>
                </div>

                <!-- Nouveau onglet pour les moteurs LaTeX -->
                <div class="tab-pane fade" id="engines" role="tabpanel" aria-labelledby="engines-tab">
                    <h4>Choisir un moteur LaTeX</h4>
                    <p>Nous prenons en charge deux moteurs LaTeX différents pour répondre à tous vos besoins :</p>
                    <div class="row mt-4">
                        <div class="col-md-6 mb-4">
                            <div class="card h-100 engine-card">
                                <div class="card-header bg-primary text-white">
                                    <h5 class="mb-0">pdfLaTeX</h5>
                                    <span class="badge bg-light text-dark badge-engine">Standard</span>
                                </div>
                                <div class="card-body text-center">
                                    <i class="fas fa-file-pdf engine-icon"></i>
                                    <h5>Moteur standard</h5>
                                    <p class="card-text">Compatible avec la majorité des environnements LaTeX.</p>
                                    <hr>
                                    <h6>Avantages</h6>
                                    <ul class="list-group list-group-flush mb-3">
                                        <li class="list-group-item"><i class="fas fa-check text-success"></i> Hautement compatible</li>
                                        <li class="list-group-item"><i class="fas fa-check text-success"></i> Performances rapides</li>
                                        <li class="list-group-item"><i class="fas fa-check text-success"></i> Stable et éprouvé</li>
                                    </ul>
                                    <h6>Limitations</h6>
                                    <ul class="list-group list-group-flush">
                                        <li class="list-group-item"><i class="fas fa-times text-danger"></i> Support limité pour les polices avancées</li>
                                        <li class="list-group-item"><i class="fas fa-times text-danger"></i> Gestion complexe des caractères non-latins</li>
                                    </ul>
                                </div>
                                <div class="card-footer">
                                    <div class="d-grid gap-2">
                                        <a href="{{ path('app_cv_moderncv_preview', {'engine': 'pdflatex'}) }}" class="btn btn-outline-primary" target="_blank">
                                            <i class="fas fa-eye"></i> Prévisualiser avec pdfLaTeX
                                        </a>
                                        <a href="{{ path('app_cv_moderncv', {'engine': 'pdflatex'}) }}" class="btn btn-primary">
                                            <i class="fas fa-download"></i> Télécharger avec pdfLaTeX
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 mb-4">
                            <div class="card h-100 engine-card">
                                <div class="card-header bg-info text-white">
                                    <h5 class="mb-0">XeLaTeX</h5>
                                    <span class="badge bg-warning badge-engine">Avancé</span>
                                </div>
                                <div class="card-body text-center">
                                    <i class="fas fa-font engine-icon"></i>
                                    <h5>Moteur moderne</h5>
                                    <p class="card-text">Support avancé pour les polices et les langues internationales.</p>
                                    <hr>
                                    <h6>Avantages</h6>
                                    <ul class="list-group list-group-flush mb-3">
                                        <li class="list-group-item"><i class="fas fa-check text-success"></i> Polices OpenType et TrueType</li>
                                        <li class="list-group-item"><i class="fas fa-check text-success"></i> Support multilingue avancé</li>
                                        <li class="list-group-item"><i class="fas fa-check text-success"></i> Utilisation des polices du système</li>
                                    </ul>
                                    <h6>Limitations</h6>
                                    <ul class="list-group list-group-flush">
                                        <li class="list-group-item"><i class="fas fa-times text-danger"></i> Nécessite XeLaTeX installé sur le serveur</li>
                                        <li class="list-group-item"><i class="fas fa-times text-danger"></i> Performances légèrement plus lentes</li>
                                    </ul>
                                </div>
                                <div class="card-footer">
                                    <div class="d-grid gap-2">
                                        <a href="{{ path('app_cv_moderncv_preview', {'engine': 'xelatex'}) }}" class="btn btn-outline-info" target="_blank">
                                            <i class="fas fa-eye"></i> Prévisualiser avec XeLaTeX
                                        </a>
                                        <a href="{{ path('app_cv_moderncv', {'engine': 'xelatex'}) }}" class="btn btn-info">
                                            <i class="fas fa-download"></i> Télécharger avec XeLaTeX
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="alert alert-warning mt-3">
                        <i class="fas fa-info-circle"></i> <strong>Note:</strong> Si vous rencontrez des problèmes avec un moteur, essayez l'autre. XeLaTeX est recommandé pour les documents nécessitant des polices spéciales ou des langues non-latines.
                    </div>
                </div>
            </div>

            <div class="d-flex justify-content-start gap-3 mt-4">
                <div class="dropdown me-2">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="engineDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fas fa-cog"></i> Choisir le moteur LaTeX
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="engineDropdown">
                        <li><a class="dropdown-item" href="{{ path('app_cv_moderncv', {'engine': 'pdflatex'}) }}">
                                <i class="fas fa-file-pdf me-2"></i> pdfLaTeX (standard)
                            </a></li>
                        <li><a class="dropdown-item" href="{{ path('app_cv_moderncv', {'engine': 'xelatex'}) }}">
                                <i class="fas fa-font me-2"></i> XeLaTeX (polices avancées)
                            </a></li>
                    </ul>
                </div>

                <a href="{{ path('app_cv_moderncv_preview') }}" class="btn btn-info" target="_blank">
                    <i class="fas fa-eye"></i> Prévisualiser le CV
                </a>
                <a href="{{ path('app_cv_moderncv') }}" class="btn btn-success">
                    <i class="fas fa-download"></i> Télécharger le CV
                </a>
            </div>

            <div class="mt-3 alert alert-info">
                <h5><i class="fas fa-info-circle"></i> Ce que nous avons fait récemment</h5>
                <ul>
                    <li>Ajouté le package <code>wasysym</code> pour résoudre l'erreur "Command requires wasysym package"</li>
                    <li>Amélioré le service <code>LatexPdfGenerator</code> pour supporter à la fois pdfLaTeX et XeLaTeX</li>
                    <li>Créé des templates spécifiques pour chaque moteur LaTeX</li>
                    <li>Configuré les routes pour prévisualiser et télécharger les CV générés avec le moteur de votre choix</li>
                    <li>Ajouté un support pour intégrer vos formules LaTeX dans un CV professionnel</li>
                </ul>
                <p class="timestamp text-end mb-0">Mis à jour le: {{ current_time|date('Y-m-d H:i:s') }} par {{ username }}</p>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
    <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
    <!-- Ajout d'un highlight de syntaxe pour mieux visualiser le code LaTeX -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/github.min.css">

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const openButton = document.getElementById('open-latex-button');
            const preview = document.getElementById('latex-preview');
            const formulaList = document.getElementById('formula-list');
            const noFormulasMessage = document.getElementById('no-formulas-message');
            const clearButton = document.getElementById('clear-formulas');

            // Initialiser highlight.js pour la coloration syntaxique du code
            document.querySelectorAll('pre code').forEach((block) => {
                hljs.highlightBlock(block);
            });

            // Charger les formules existantes depuis localStorage
            const loadFormulas = () => {
                const storedFormulas = localStorage.getItem('latex_formulas');
                const formulas = storedFormulas ? JSON.parse(storedFormulas) : [];

                if (formulas.length > 0) {
                    noFormulasMessage.style.display = 'none';
                    formulaList.innerHTML = '';

                    formulas.forEach((formula, index) => {
                        const formulaItem = document.createElement('div');
                        formulaItem.className = 'formula-item';

                        const formulaContent = document.createElement('div');
                        formulaContent.innerHTML = '$$' + formula + '$$';

                        const formulaActions = document.createElement('div');
                        formulaActions.className = 'mt-2 d-flex justify-content-between align-items-center';

                        const formulaText = document.createElement('code');
                        formulaText.className = 'me-2';
                        formulaText.textContent = formula;
                        formulaText.style.fontSize = '0.8rem';
                        formulaText.style.color = '#666';

                        const buttonGroup = document.createElement('div');

                        const deleteButton = document.createElement('button');
                        deleteButton.className = 'btn btn-sm btn-outline-danger ms-2';
                        deleteButton.innerHTML = '<i class="fas fa-trash"></i> Supprimer';
                        deleteButton.onclick = () => removeFormula(index);

                        formulaActions.appendChild(formulaText);
                        buttonGroup.appendChild(deleteButton);
                        formulaActions.appendChild(buttonGroup);
                        formulaItem.appendChild(formulaContent);
                        formulaItem.appendChild(formulaActions);
                        formulaList.appendChild(formulaItem);
                    });

                    // Rendre les formules avec MathJax
                    if (window.MathJax) {
                        MathJax.typesetPromise([formulaList]);
                    }
                } else {
                    noFormulasMessage.style.display = 'block';
                    formulaList.innerHTML = '';
                    formulaList.appendChild(noFormulasMessage);
                }
            };

            // Supprimer une formule
            const removeFormula = (index) => {
                const storedFormulas = localStorage.getItem('latex_formulas');
                const formulas = storedFormulas ? JSON.parse(storedFormulas) : [];

                formulas.splice(index, 1);
                localStorage.setItem('latex_formulas', JSON.stringify(formulas));
                loadFormulas();
            };

            // Ouvrir l'éditeur LaTeX
            openButton.addEventListener('click', function() {
                window.open('/latex', 'LaTeXEditor', 'width=800,height=600');
            });

            // Récupérer la formule LaTeX depuis localStorage
            window.addEventListener('storage', function(e) {
                if (e.key === 'latex_formula') {
                    const formula = localStorage.getItem('latex_formula');
                    if (formula) {
                        // Afficher dans la prévisualisation
                        preview.innerHTML = '$$' + formula + '$$';

                        // Stocker dans la liste des formules
                        const storedFormulas = localStorage.getItem('latex_formulas');
                        const formulas = storedFormulas ? JSON.parse(storedFormulas) : [];
                        formulas.push(formula);
                        localStorage.setItem('latex_formulas', JSON.stringify(formulas));

                        // Rendre avec MathJax
                        if (window.MathJax) {
                            MathJax.typesetPromise([preview]);
                        }

                        // Supprimer la formule temporaire
                        localStorage.removeItem('latex_formula');

                        // Recharger la liste des formules
                        loadFormulas();
                    }
                }
            });

            // Écouter les événements de message
            window.addEventListener('message', function(event) {
                if (event.data && event.data.type === 'latex_insert') {
                    const formula = event.data.latex;

                    // Afficher dans la prévisualisation
                    preview.innerHTML = '$$' + formula + '$$';

                    // Stocker dans la liste des formules
                    const storedFormulas = localStorage.getItem('latex_formulas');
                    const formulas = storedFormulas ? JSON.parse(storedFormulas) : [];
                    formulas.push(formula);
                    localStorage.setItem('latex_formulas', JSON.stringify(formulas));

                    // Rendre avec MathJax
                    if (window.MathJax) {
                        MathJax.typesetPromise([preview]);
                    }

                    // Recharger la liste des formules
                    loadFormulas();
                }
            });

            // Effacer toutes les formules
            clearButton.addEventListener('click', function() {
                if (confirm('Êtes-vous sûr de vouloir supprimer toutes les formules?')) {
                    localStorage.removeItem('latex_formulas');
                    preview.innerHTML = 'Aucune formule LaTeX insérée pour l\'instant.';
                    loadFormulas();
                }
            });

            // Charger les formules existantes au chargement de la page
            loadFormulas();
        });
    </script>
{% endblock %}
==================================================

Fichier: Templates\latex\cv_template_xe.tex
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\latex\cv_template_xe.tex
-----
% !TEX program = xelatex
\documentclass[11pt,a4paper,sans]{moderncv}

% Style et couleur
\moderncvstyle{classic}
\moderncvcolor{blue}

% Packages nécessaires
\usepackage[scale=0.75]{geometry}
\usepackage{fontspec}
\usepackage{wasysym}

% Informations personnelles
\name{{{name}}}{{{surname}}}
\title{{{title}}}
\phone{{{phone}}}
\email{{{email}}}

% Si vous avez besoin d'activer les icônes sociales, décommentez ces lignes
% \social[linkedin]{{{linkedin}}}
% \social[github]{{{github}}}

\begin{document}

    \makecvtitle

    \section{Expérience professionnelle}
    {{#experiences}}
    {{/experiences}}

    \section{Formation}
    {{#education}}
    {{/education}}

    \section{Compétences techniques}
    {{#skills}}
    {{/skills}}

    \section{Langues}
    {{#languages}}
    {{/languages}}

\end{document}
==================================================

Fichier: Templates\latex\cv_template.tex
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\latex\cv_template.tex
-----
% !TEX program = xelatex
\documentclass[11pt,a4paper,sans]{moderncv}

% Style et couleur
\moderncvstyle{classic}
\moderncvcolor{blue}

% Packages nécessaires
\usepackage{fontspec}
\usepackage{wasysym}  % Ajout du package wasysym pour les symboles spéciaux
\usepackage[scale=0.75]{geometry}

% Informations personnelles
\name{{{name}}}{{{surname}}}
\title{{{title}}}
\phone{{{phone}}}
\email{{{email}}}

% Si vous avez besoin d'activer les icônes sociales plus tard, décommentez ces lignes
% \social[linkedin]{{{linkedin}}}
% \social[github]{{{github}}}

\begin{document}

    \makecvtitle

    \section{Expérience professionnelle}
    {{#experiences}}
    {{/experiences}}

    \section{Formation}
    {{#education}}
    {{/education}}

    \section{Compétences techniques}
    {{#skills}}
    {{/skills}}

    \section{Langues}
    {{#languages}}
    {{/languages}}

\end{document}
==================================================

Fichier: Templates\latex\cv_template_pdf.tex
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\latex\cv_template_pdf.tex
-----
\documentclass[11pt,a4paper,sans]{moderncv}

% Style et couleur
\moderncvstyle{classic}
\moderncvcolor{blue}

% Packages nécessaires pour pdfLaTeX
\usepackage[scale=0.75]{geometry}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{wasysym}

% Informations personnelles
\name{{{name}}}{{{surname}}}
\title{{{title}}}
\phone{{{phone}}}
\email{{{email}}}

% Si vous avez besoin d'activer les icônes sociales, décommentez ces lignes
% \social[linkedin]{{{linkedin}}}
% \social[github]{{{github}}}

\begin{document}

    \makecvtitle

    \section{Expérience professionnelle}
    {{#experiences}}
    {{/experiences}}

    \section{Formation}
    {{#education}}
    {{/education}}

    \section{Compétences techniques}
    {{#skills}}
    {{/skills}}

    \section{Langues}
    {{#languages}}
    {{/languages}}

\end{document}
==================================================

Fichier: src\Service\LatexPdfGenerator.php
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\src\Service\LatexPdfGenerator.php
-----
<?php
// Last updated: 2025-05-11 00:15:00
// Author: Mohamed-abidi-95
// src/Service/LatexPdfGenerator.php
namespace App\Service;

use Symfony\Component\Process\Process;
use Symfony\Component\Process\Exception\ProcessFailedException;
use Psr\Log\LoggerInterface;

class LatexPdfGenerator
{
    private string $projectDir;
    private LatexService $latexService;
    private LoggerInterface $logger;
    private string $tempDir;
    private string $outputDir;

    public function __construct(string $projectDir, LatexService $latexService, LoggerInterface $logger)
    {
        $this->projectDir = $projectDir;
        $this->latexService = $latexService;
        $this->logger = $logger;
        $this->tempDir = $projectDir . '/var/latex/temp';
        $this->outputDir = $projectDir . '/var/latex/output';
    }

    /**
     * Génère un PDF à partir d'un template LaTeX avec un moteur au choix
     *
     * @param string $templateFile Nom du fichier template
     * @param array $options Données à injecter dans le template
     * @param string $engine Moteur LaTeX à utiliser ('pdflatex' ou 'xelatex')
     * @return string Nom du fichier PDF généré
     */

    public function generatePdfFromTemplate(string $templateFile, array $options = [], string $engine = 'pdflatex'): string
    {
        $this->ensureDirectoriesExist();

        // Nom de fichier unique basé sur timestamp et identifiant unique
        $timestamp = time();
        $uniqueId = uniqid('cv_');
        $outputFile = $this->outputDir . '/' . $uniqueId . '.pdf';

        // Chemin vers le template LaTeX
        $templatePath = $this->projectDir . '/Templates/latex/' . $templateFile;

        // Vérifier que le template existe
        if (!file_exists($templatePath)) {
            // Essayer un chemin alternatif
            $alternatePath = $this->projectDir . '/templates/latex/' . $templateFile;
            if (file_exists($alternatePath)) {
                $templatePath = $alternatePath;
            } else {
                throw new \RuntimeException("Template LaTeX non trouvé: " . $templatePath);
            }
        }

        // Générer le contenu LaTeX personnalisé
        if (!empty($options)) {
            $content = file_get_contents($templatePath);

            // Adapter le contenu en fonction du moteur LaTeX choisi
            $content = $this->adaptTemplateForEngine($content, $engine);

            // Remplacer les variables par leurs valeurs
            $content = $this->processTemplate($content, $options);

            // Écrire le contenu dans un fichier temporaire
            $tempFile = $this->tempDir . '/temp_' . $uniqueId . '.tex';
            file_put_contents($tempFile, $content);
            $templatePath = $tempFile;

            $this->logger->info("Fichier LaTeX temporaire créé: " . basename($tempFile));
        }

        try {
            // Utiliser le service LaTeX pour générer le PDF
            $result = $this->latexService->generatePdf($content, $this->outputDir);

            if (!$result['success']) {
                throw new \RuntimeException('Échec de la génération du PDF: ' . $result['error']);
            }

            return basename($result['pdf_path']);
        } catch (ProcessFailedException $e) {
            $this->logger->error("Erreur lors de la génération du PDF: " . $e->getMessage());
            throw new \RuntimeException('Échec de la génération du PDF: ' . $e->getMessage());
        }
    }

    /**
     * Adapte le template en fonction du moteur LaTeX utilisé
     */
    private function adaptTemplateForEngine(string $templateContent, string $engine): string
    {
        // Ajuster l'en-tête et les packages en fonction du moteur
        if ($engine === 'xelatex') {
            // Pour XeLaTeX, s'assurer que le template utilise fontspec
            if (!str_contains($templateContent, 'fontspec')) {
                $templateContent = preg_replace(
                    '/\\\\documentclass/',
                    "% !TEX program = xelatex\n\\\\documentclass",
                    $templateContent,
                    1
                );

                // Ajouter fontspec après geometry si pas déjà présent
                if (!str_contains($templateContent, '\\usepackage{fontspec}')) {
                    $templateContent = preg_replace(
                        '/(\\\\usepackage\[[^\]]*\]\{geometry\})/',
                        "$1\n\\\\usepackage{fontspec}",
                        $templateContent
                    );
                }

                // S'assurer que inputenc et fontenc sont supprimés ou commentés
                $templateContent = preg_replace(
                    '/\\\\usepackage(\[[^\]]*\])?\{inputenc\}/',
                    '% \\\\usepackage$1{inputenc}',
                    $templateContent
                );
                $templateContent = preg_replace(
                    '/\\\\usepackage(\[[^\]]*\])?\{fontenc\}/',
                    '% \\\\usepackage$1{fontenc}',
                    $templateContent
                );
            }
        } else {
            // Pour pdfLaTeX, remplacer fontspec par inputenc et fontenc
            $templateContent = preg_replace(
                '/% !TEX program = xelatex/',
                '% Template adapté pour pdfLaTeX',
                $templateContent
            );

            if (str_contains($templateContent, '\\usepackage{fontspec}')) {
                $templateContent = str_replace(
                    '\\usepackage{fontspec}',
                    "\\usepackage[utf8]{inputenc}\n\\usepackage[T1]{fontenc}",
                    $templateContent
                );
            } else if (!str_contains($templateContent, 'inputenc') && !str_contains($templateContent, 'fontenc')) {
                // Si ni fontspec ni inputenc/fontenc ne sont présents, ajouter inputenc et fontenc
                $templateContent = preg_replace(
                    '/(\\\\usepackage\[[^\]]*\]\{geometry\})/',
                    "$1\n\\\\usepackage[utf8]{inputenc}\n\\\\usepackage[T1]{fontenc}",
                    $templateContent
                );
            }
        }

        return $templateContent;
    }

    /**
     * Traite le template en remplaçant les variables par les données
     */
    private function processTemplate(string $content, array $options): string
    {
        // Remplacer les variables simples
        foreach ($options as $key => $value) {
            if (!is_array($value)) {
                $content = str_replace('{{{' . $key . '}}}', $this->escapeLatex($value), $content);
            }
        }

        // Traiter les sections complexes

        // Traitement des expériences professionnelles
        if (isset($options['experiences'])) {
            $experiencesContent = '';
            foreach ($options['experiences'] as $exp) {
                $period = $this->escapeLatex($exp['period'] ?? '');
                $position = $this->escapeLatex($exp['position'] ?? '');
                $company = $this->escapeLatex($exp['company'] ?? '');
                $location = $this->escapeLatex($exp['location'] ?? '');

                $descContent = '';
                if (isset($exp['descriptions']) && is_array($exp['descriptions'])) {
                    $descContent .= "\\begin{itemize}\n";
                    foreach ($exp['descriptions'] as $desc) {
                        $descContent .= "\\item " . $this->escapeLatex($desc) . "\n";
                    }
                    $descContent .= "\\end{itemize}";
                }

                $experiencesContent .= "\\cventry{" . $period . "}{" . $position . "}{" . $company . "}{" . $location . "}{}{" . $descContent . "}\n";
            }
            $content = str_replace('{{#experiences}}', $experiencesContent, $content);
        }

        // Traitement de la formation
        if (isset($options['education'])) {
            $educationContent = '';
            foreach ($options['education'] as $edu) {
                $period = $this->escapeLatex($edu['period'] ?? '');
                $degree = $this->escapeLatex($edu['degree'] ?? '');
                $institution = $this->escapeLatex($edu['institution'] ?? '');
                $location = $this->escapeLatex($edu['location'] ?? '');
                $description = isset($edu['description']) ? $this->escapeLatex($edu['description']) : '';

                $educationContent .= "\\cventry{" . $period . "}{" . $degree . "}{" . $institution . "}{" . $location . "}{}{" . $description . "}\n";
            }
            $content = str_replace('{{#education}}', $educationContent, $content);
        }

        // Traitement des compétences
        if (isset($options['skills'])) {
            $skillsContent = '';
            foreach ($options['skills'] as $skill) {
                $category = $this->escapeLatex($skill['category'] ?? '');
                $list = $this->escapeLatex($skill['list'] ?? '');

                $skillsContent .= "\\cvitem{" . $category . "}{" . $list . "}\n";
            }
            $content = str_replace('{{#skills}}', $skillsContent, $content);
        }

        // Traitement des langues
        if (isset($options['languages'])) {
            $languagesContent = '';
            foreach ($options['languages'] as $lang) {
                $language = $this->escapeLatex($lang['language'] ?? '');
                $level = $this->escapeLatex($lang['level'] ?? '');
                $certification = $this->escapeLatex($lang['certification'] ?? '');

                $languagesContent .= "\\cvitemwithcomment{" . $language . "}{" . $level . "}{" . $certification . "}\n";
            }
            $content = str_replace('{{#languages}}', $languagesContent, $content);
        }

        return $content;
    }

    /**
     * S'assure que les répertoires nécessaires existent
     */
    private function ensureDirectoriesExist(): void
    {
        if (!is_dir($this->tempDir)) {
            mkdir($this->tempDir, 0777, true);
        }

        if (!is_dir($this->outputDir)) {
            mkdir($this->outputDir, 0777, true);
        }
    }

    /**
     * Échappe les caractères spéciaux LaTeX
     */
    private function escapeLatex(string $text): string
    {
        $map = [
            '#' => '\#',
            '$' => '\$',
            '%' => '\%',
            '&' => '\&',
            '_' => '\_',
            '{' => '\{',
            '}' => '\}',
            '~' => '\textasciitilde{}',
            '^' => '\textasciicircum{}',
            '\\' => '\textbackslash{}',
            '<' => '\textless{}',
            '>' => '\textgreater{}'
        ];

        return str_replace(array_keys($map), array_values($map), $text);
    }
}
==================================================

