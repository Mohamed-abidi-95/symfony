===================================================
EXTRACTION DU CODE DU PROJET SYMFONY - 2025-04-29 17:42:51
Projet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer
===================================================

===================================================
FICHIER: assets\styles\app.css
===================================================
/* 
 * ESPRIT CV Generator - Styles principaux
 * Author: Mohamed-abidi-95
 * Last updated: 2025-04-26 23:05:53
 */

/* Importer Bootstrap depuis node_modules */

/* Variables personnalisées */
:root {
    --primary-color: #ff3a3a;
    --primary-dark: #e12d2d;
    --primary-light: #ff6b6b;
    --secondary-color: #2d3748;
    --secondary-dark: #1a202c;
    --light-bg: #f8f9fa;
    --dark-bg: #343a40;
    --esprit-gray: #6c757d;
    --esprit-light: #e9ecef;
    --header-height: 80px;
    --footer-height: 60px;
    --border-radius: 0.25rem;
    --box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    --transition-speed: 0.3s;
}

/* Styles globaux */
body {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
}

main {
    flex: 1;
}

/* Header et logos */
.header-logos {
    background-color: white;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    padding: 20px 0;
}

.logo-container img {
    max-width: 100%;
    height: auto;
    transition: transform var(--transition-speed) ease;
}

.logo-container img:hover {
    transform: scale(1.05);
}

/* Navbar personnalisée */
.navbar-esprit {
    background-color: var(--light-bg);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.navbar-brand {
    font-weight: bold;
    color: var(--primary-color);
}

.navbar-light .navbar-nav .nav-link {
    color: var(--secondary-color);
    font-weight: 500;
    padding: 0.5rem 1rem;
    transition: color var(--transition-speed) ease;
}

.navbar-light .navbar-nav .nav-link:hover,
.navbar-light .navbar-nav .nav-link:focus,
.navbar-light .navbar-nav .nav-link.active {
    color: var(--primary-color);
}

/* Boutons personnalisés */
.btn-primary {
    background-color: var(--primary-color);
    border-color: var(--primary-dark);
    transition: all var(--transition-speed) ease;
}

.btn-primary:hover,
.btn-primary:focus,
.btn-primary:active {
    background-color: var(--primary-dark);
    border-color: var(--primary-dark);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

.btn-outline-primary {
    color: var(--primary-color);
    border-color: var(--primary-color);
}

.btn-outline-primary:hover,
.btn-outline-primary:focus {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
    color: white;
}

/* Classes utilitaires */
.text-primary-color {
    color: var(--primary-color) !important;
}

.bg-primary-color {
    background-color: var(--primary-color) !important;
}

.text-secondary-color {
    color: var(--secondary-color) !important;
}

.bg-secondary-color {
    background-color: var(--secondary-color) !important;
}

/* Animations */
.fade-in {
    animation: fadeIn 0.5s ease-in;
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

/* Styles pour le menu multilingue */
.dropdown-item {
    display: flex;
    align-items: center;
    padding: 0.5rem 1rem;
}

.dropdown-item svg {
    margin-right: 0.5rem;
    width: 20px;
    height: 15px;
}

.dropdown-item:active,
.dropdown-item:focus {
    background-color: var(--primary-color);
    color: white;
}

.language-dropdown .dropdown-toggle::after {
    margin-left: 0.5rem;
}

/* Styles pour le CV Generator */
.cv-container {
    background: white;
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);
    padding: 2rem;
    margin: 1rem 0;
}

.cv-section {
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--esprit-light);
}

.cv-section:last-child {
    border-bottom: none;
}

.cv-section-title {
    color: var(--primary-color);
    font-weight: bold;
    margin-bottom: 1rem;
    font-size: 1.25rem;
}

/* Toast notifications */
.toast {
    border: none;
    box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.1);
}

.toast-header {
    border-bottom: 1px solid rgba(0, 0, 0, 0.05);
}

.toast-header strong {
    color: var(--primary-color);
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .header-logos {
        padding: 10px 0;
    }
    
    .logo-container img {
        max-height: 40px;
    }
    
    .navbar-brand {
        font-size: 1rem;
    }
    
    .navbar-light .navbar-nav .nav-link {
        padding: 0.25rem 0.5rem;
    }
    
    .cv-container {
        padding: 1rem;
    }
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
    .cv-container {
        background-color: var(--dark-bg);
        color: white;
    }
    
    .navbar-esprit {
        background-color: var(--dark-bg);
    }
    
    .navbar-light .navbar-nav .nav-link {
        color: var(--esprit-light);
    }
    
    .dropdown-menu {
        background-color: var(--secondary-dark);
    }
    
    .dropdown-item {
        color: var(--esprit-light);
    }
    
    .dropdown-item:hover {
        background-color: var(--secondary-color);
    }
}

/* Print styles */
@media print {
    .navbar, .header-logos, .footer, .no-print {
        display: none !important;
    }
    
    body {
        background-color: white !important;
    }
    
    .cv-container {
        box-shadow: none;
        padding: 0;
        margin: 0;
    }
}



===================================================
FICHIER: Templates\base.html.twig
===================================================
<!DOCTYPE html>
<html lang="{{ app.request.locale|default('fr') }}" dir="{{ app.request.locale in ['ar'] ? 'rtl' : 'ltr' }}">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}                  {% endblock %}</title>
    <meta name="description" content="{% block description %}GÃ©nÃ©rateur de CV professionnel - ESPRIT{% endblock %}">
    <link rel="icon" href="{{ asset('favicon.ico') }}">

    {% block stylesheets %}
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Poppins:wght@500;600;700;800&display=swap" rel="stylesheet">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css">
        <link rel="stylesheet" href="{{ asset('assets/styles/app.css') }}">
    {% endblock %}
</head>
<body class="{% block body_class %}{% endblock %}">
{% block navbar %}
    {% include 'components/_navbar.html.twig' %}
{% endblock %}

<main>
    {% block body %}{% endblock %}
</main>

<footer class="bg-light py-4 mt-auto">
    <div class="container">
        <div class="text-center text-muted">
            &copy; {{ 'now'|date('Y') }} ESPRIT CV Generator. Tous droits rÃ©servÃ©s.
        </div>
    </div>
</footer>

<div id="notification-container" class="position-fixed top-0 end-0 p-3" style="z-index: 1050;"></div>

{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    {# Supprimez cette ligne : <script src="{{ asset('assets/navbar-fix.js') }}"></script> #}
    <script src="{{ asset('assets/app.js') }}"></script>
{% endblock %}
</body>
</html>


===================================================
FICHIER: Templates\components\language_nav.html.twig
===================================================
{#
Navigation multilingue avec drapeaux
Fichier: language_nav.html.twig
Date: 2025-04-26 17:35:21
Utilisateur: Mohamed-abidi-95
#}
<!--
<nav class="bg-white border-gray-200 dark:bg-gray-900">
    <div class="header-logos">
        <div class="container mx-auto px-4">
            <div class="flex justify-center items-center space-x-12">
                <div class="logo-container">
                    <img src="{{ asset('images/esprit-logo.png') }}" alt="ESPRIT" class="h-12">
                </div>
                <div class="logo-container">
                    <img src="{{ asset('images/career-logo.png') }}" alt="Career Center" class="h-10">
                </div>
            </div>
        </div>
    </div>

    <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
        <a href="#" class="flex items-center space-x-3 rtl:space-x-reverse">
            <img src="{{ asset('images/esprim.png') }}" class="h-8" alt="ESPRIT CV Generator" />
            <span class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white">ESPRIT CV</span>
        </a>
        <div class="flex items-center md:order-2 space-x-1 md:space-x-0 rtl:space-x-reverse">
            <button type="button" id="language-dropdown-button" data-dropdown-toggle="language-dropdown-menu" class="inline-flex items-center font-medium justify-center px-4 py-2 text-sm text-gray-900 dark:text-white rounded-lg cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700 dark:hover:text-white">
                {# Drapeau franÃ§ais par dÃ©faut #}
                <svg class="w-5 h-5 rounded-full me-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="flag-icon-css-fr" viewBox="0 0 512 512">
                    <path fill="#fff" d="M0 0h512v512H0z"/>
                    <path fill="#00267f" d="M0 0h170.7v512H0z"/>
                    <path fill="#f31830" d="M341.3 0H512v512H341.3z"/>
                </svg>
                FranÃ§ais
            </button>
            {# Menu dÃ©roulant des langues #}
            <div class="z-50 hidden my-4 text-base list-none bg-white divide-y divide-gray-100 rounded-lg shadow-md dark:bg-gray-700" id="language-dropdown-menu">
                <ul class="py-2 font-medium" role="none">
                    {# FranÃ§ais #}
                    <li>
                        <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white" role="menuitem" data-lang="fr">
                            <div class="inline-flex items-center">
                                <svg class="h-3.5 w-3.5 rounded-full me-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" id="flag-icon-css-fr" viewBox="0 0 512 512">
                                    <path fill="#fff" d="M0 0h512v512H0z"/>
                                    <path fill="#00267f" d="M0 0h170.7v512H0z"/>
                                    <path fill="#f31830" d="M341.3 0H512v512H341.3z"/>
                                </svg>
                                FranÃ§ais
                            </div>
                        </a>
                    </li>

                    {# Anglais #}
                    <li>
                        <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white" role="menuitem" data-lang="en">
                            <div class="inline-flex items-center">
                                <svg aria-hidden="true" class="h-3.5 w-3.5 rounded-full me-2" xmlns="http://www.w3.org/2000/svg" id="flag-icon-css-us" viewBox="0 0 512 512">
                                    <g fill-rule="evenodd">
                                        <g stroke-width="1pt">
                                            <path fill="#bd3d44" d="M0 0h247v10H0zm0 20h247v10H0zm0 20h247v10H0zm0 20h247v10H0zm0 20h247v10H0zm0 20h247v10H0zm0 20h247v10H0z" transform="scale(3.9385)"/>
                                            <path fill="#fff" d="M0 10h247v10H0zm0 20h247v10H0zm0 20h247v10H0zm0 20h247v10H0zm0 20h247v10H0zm0 20h247v10H0z" transform="scale(3.9385)"/>
                                        </g>
                                        <path fill="#192f5d" d="M0 0h98.8v70H0z" transform="scale(3.9385)"/>
                                        <path fill="#fff" d="M8.2 3l1 2.8H12L9.7 7.5l.9 2.7-2.4-1.7L6 10.2l.9-2.7-2.4-1.7h3zm16.5 0l.9 2.8h2.9l-2.4 1.7 1 2.7-2.4-1.7-2.4 1.7 1-2.7-2.4-1.7h2.9zm16.5 0l.9 2.8H45l-2.4 1.7 1 2.7-2.4-1.7-2.4 1.7 1-2.7-2.4-1.7h2.9z" transform="scale(3.9385)"/>
                                    </g>
                                </svg>
                                English
                            </div>
                        </a>
                    </li>

                    {# Allemand (Deutsch) #}
                    <li>
                        <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white" role="menuitem" data-lang="de">
                            <div class="inline-flex items-center">
                                <svg class="h-3.5 w-3.5 rounded-full me-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" id="flag-icon-css-de" viewBox="0 0 512 512">
                                    <path fill="#ffce00" d="M0 341.3h512V512H0z"/>
                                    <path d="M0 0h512v170.7H0z"/>
                                    <path fill="#d00" d="M0 170.7h512v170.6H0z"/>
                                </svg>
                                Deutsch
                            </div>
                        </a>
                    </li>

                    {# Arabe #}
                    <li>
                        <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white" role="menuitem" data-lang="ar">
                            <div class="inline-flex items-center">
                                <svg class="h-3.5 w-3.5 rounded-full me-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" id="flag-icon-css-ma" viewBox="0 0 512 512">
                                    {# Drapeau marocain comme exemple pour l'arabe #}
                                    <path fill="#c1272d" d="M0 0h512v512H0z"/>
                                    <path fill="none" stroke="#006233" stroke-width="12" d="M256 191.4l-38 116.8 99.4-72.2H194.6l99.3 72.2z"/>
                                </svg>
                                Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©
                            </div>
                        </a>
                    </li>
                </ul>
            </div>

            {# Bouton de menu mobile #}
            <button data-collapse-toggle="navbar-language" type="button" class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600" aria-controls="navbar-language" aria-expanded="false">
                <span class="sr-only">Ouvrir le menu</span>
                <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"/>
                </svg>
            </button>
        </div>

        {# Menu principal #}
        <div class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1" id="navbar-language">
            <ul class="flex flex-col font-medium p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
                <li>
                    <a href="#" class="block py-2 px-3 text-white bg-primary-color rounded-sm md:bg-transparent md:text-primary-color md:p-0 md:dark:text-blue-500" aria-current="page">Accueil</a>
                </li>
                <li>
                    <a href="#templates" class="block py-2 px-3 md:p-0 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:hover:text-primary-color dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">Templates</a>
                </li>
                <li>
                    <a href="#customize" class="block py-2 px-3 md:p-0 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:hover:text-primary-color dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">Personnalisation</a>
                </li>
                <li>
                    <a href="#pricing" class="block py-2 px-3 md:p-0 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:hover:text-primary-color dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">Tarifs</a>
                </li>
                <li>
                    <a href="#contact" class="block py-2 px-3 md:p-0 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:hover:text-primary-color dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">Contact</a>
                </li>
            </ul>
        </div>
    </div>

    {# Information de date et utilisateur #}
    <div class="bg-gray-50 dark:bg-gray-800 text-center py-1 text-xs text-gray-500 dark:text-gray-400">
        <span>Date et heure actuelles (UTC): 2025-04-26 17:35:21</span> |
        <span>Utilisateur: Mohamed-abidi-95</span>
    </div>
</nav> -->


===================================================
FICHIER: Templates\components\_cv_examples_carousel.html.twig
===================================================
{# Composant Carrousel d'exemples de CV #}
<div class="cv-examples-carousel" tabindex="0" aria-label="Exemples de CV">
    {# Annonce pour lecteurs d'Ã©cran #}
    <div class="sr-only-announcement" aria-live="polite" role="status" style="position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0, 0, 0, 0); white-space: nowrap; border: 0;"></div>

    {# Navigation du carrousel #}
    <div class="carousel-navigation">
        <button class="carousel-btn prev-btn" aria-label="Template prÃ©cÃ©dent">
            <i class="fas fa-chevron-left"></i>
        </button>
        <div class="carousel-indicators" role="tablist">
            <span class="indicator active" data-index="0" role="tab" aria-selected="true" aria-label="Template 1" tabindex="0"></span>
            <span class="indicator" data-index="1" role="tab" aria-selected="false" aria-label="Template 2" tabindex="0"></span>
        </div>
        <button class="carousel-btn next-btn" aria-label="Template suivant">
            <i class="fas fa-chevron-right"></i>
        </button>
    </div>

    {# Conteneur des CV #}
    <div class="cv-carousel-container">
        {# Slide 1 - Template Ã‰lÃ©gant #}
        <div class="cv-slide active" aria-hidden="false">
            <div class="template-label">Template Ã‰lÃ©gant</div>
            {% include 'components/cv_templates/_template1.html.twig' %}
        </div>

        {# Slide 2 - Template Moderne #}
        <div class="cv-slide" aria-hidden="true">
            <div class="template-label">Template Moderne</div>
            {% include 'components/cv_templates/_template2.html.twig' %}
        </div>
    </div>
</div>


===================================================
FICHIER: Templates\components\_navbar.html.twig
===================================================
{# Templates/components/_navbar.html.twig #}

{# Templates/components/_navbar.html.twig #}

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container">
        <a class="navbar-brand" href="{{ path('app_welcome') }}">
            <img src="{{ asset('images/esprim.png') }}" alt="ESPRIM Logo" height="40" class="me-2">
            ESPRIT CV Generator
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarMain" aria-controls="navbarMain" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarMain">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="{{ path('app_welcome') }}">Accueil</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Ã€ propos</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Services</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">ModÃ¨les</a>
                </li>
            </ul>
            <div class="d-flex align-items-center">
                {# Dark Mode Toggle #}
                <button type="button" class="dark-mode-toggle me-3" aria-label="Basculer le mode sombre">
                    <i class="bi bi-moon-fill moon-icon"></i>
                    <i class="bi bi-sun-fill sun-icon d-none"></i>
                </button>

                {# Language Dropdown #}
                <div class="dropdown language-dropdown">
                    <button class="btn btn-outline-secondary dropdown-toggle d-flex align-items-center" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                        <img src="{{ asset('images/flags/fr.png') }}" alt="FranÃ§ais" class="flag-icon">
                        <span>FranÃ§ais</span>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton1">
                        <li>
                            <a class="dropdown-item d-flex align-items-center" href="#" data-lang="fr">
                                <img src="{{ asset('images/flags/fr.png') }}" alt="FranÃ§ais" class="flag-icon">
                                <span>FranÃ§ais</span>
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item d-flex align-items-center" href="#" data-lang="en">
                                <img src="{{ asset('images/flags/gb.png') }}" alt="English" class="flag-icon">
                                <span>English</span>
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item d-flex align-items-center" href="#" data-lang="es">
                                <img src="{{ asset('images/flags/es.png') }}" alt="EspaÃ±ol" class="flag-icon">
                                <span>EspaÃ±ol</span>
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item d-flex align-items-center" href="#" data-lang="de">
                                <img src="{{ asset('images/flags/de.png') }}" alt="Deutsch" class="flag-icon">
                                <span>Deutsch</span>
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item d-flex align-items-center" href="#" data-lang="ar">
                                <img src="{{ asset('images/flags/tn.png') }}" alt="Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©" class="flag-icon">
                                <span>Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©</span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</nav>


===================================================
FICHIER: Templates\components\cv_templates\_template1.html.twig
===================================================
{# Template CV Ã‰lÃ©gant #}
<div class="cv-container">
    <div class="header">
        <img src="{{ asset('images/cvs/profile-example.jpg') }}" alt="Photo de profil" class="profile-img" onerror="this.src='{{ asset('images/placeholder-profile.jpg') }}'">
        <h1>Mohamed ABIDI</h1>
        <h2>Business Information Systems</h2>
        <p class="about-me">BAC + 3 en informatique de gestion, Ã©tudiant Ã  ESPRIT SCHOOL OF BUSINESS. SpÃ©cialisÃ© en dÃ©veloppement web avec le stack MERN et en gestion des donnÃ©es. ExpÃ©rience en gestion de sponsoring et administration de club.</p>
    </div>

    <div class="main-content">
        <div class="left-column">
            <div class="info">
                <h3 class="section-title">Contact</h3>
                <div class="info-item">
                    <p>TÃ©lÃ©phone : +216 23 199 953</p>
                    <p>Email : mohamed.abidi@esprit.tn</p>
                    <p>Adresse : Sousse, Hammamet Sud / Tozeur, Nefta</p>
                </div>
            </div>

            <div class="languages">
                <h3 class="section-title">Langues</h3>
                <div class="language-item">
                    <p>FranÃ§ais (B2 selon Rosetta Stone)</p>
                    <p>Anglais (B2 selon Rosetta Stone)</p>
                    <p>Arabe (Natif)</p>
                </div>
            </div>

            <div class="interests">
                <h3 class="section-title">IntÃ©rÃªts</h3>
                <div class="interest-item">
                    <p>DÃ©veloppement web</p>
                    <p>Programmation JavaScript</p>
                    <p>Big Data</p>
                </div>
            </div>

            <div class="competences">
                <h3 class="section-title">CompÃ©tences</h3>

                <div class="skills">
                    <div class="skill-category">
                        <h4>Techniques</h4>
                        <ul class="skill-list">
                            <li>MERN Stack</li>
                            <li>JavaScript</li>
                            <li>Gestion des donnÃ©es</li>
                        </ul>
                    </div>

                    <div class="skill-category">
                        <h4>Professionnelles</h4>
                        <ul class="skill-list">
                            <li>Gestion</li>
                            <li>Ã‰conomie</li>
                            <li>Administration</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="right-column">
            <div class="experiences">
                <h3 class="section-title">ExpÃ©riences Professionnelles</h3>

                <div class="experience">
                    <div class="experience-title">Responsable Sponsoring <span class="experience-company">- TUNIVISIONS ESPRIT</span></div>
                    <div class="experience-date">2022 - PrÃ©sent</div>
                    <div class="experience-description">
                        <ul>
                            <li>Gestion du secteur du club Tunivisions Esprit, avec responsabilitÃ© de la recherche et nÃ©gociation des partenariats</li>
                            <li>Membre du conseil d'administration du club Tunivisions Esprit, participant aux dÃ©cisions stratÃ©giques et Ã  la gouvernance</li>
                        </ul>
                    </div>
                </div>
            </div>

            <div class="education">
                <h3 class="section-title">Formations</h3>

                <div class="education-item">
                    <div class="education-title">Licence en Business Computing <span class="education-institution">- ESPRIT SCHOOL OF BUSINESS</span></div>
                    <div class="education-date">2021 - PrÃ©sent</div>
                    <div class="education-description">
                        <p>Parcours en Business Information Systems (BIS), spÃ©cialisation en dÃ©veloppement web et gestion des donnÃ©es.</p>
                    </div>
                </div>

                <div class="education-item">
                    <div class="education-title">BaccalaurÃ©at Sciences <span class="education-institution">- LycÃ©e BECHIR KHRAYEF NEFTA</span></div>
                    <div class="education-date">2020</div>
                    <div class="education-description">
                        <p>Formation scientifique gÃ©nÃ©rale ayant permis l'admission Ã  ESPRIT SCHOOL OF BUSINESS.</p>
                    </div>
                </div>
            </div>

            <div class="skills-section">
                <h3 class="section-title">CompÃ©tences spÃ©cifiques</h3>
                <p>MaÃ®trise des techniques actualisÃ©es en dÃ©veloppement web avec le stack MERN (MongoDB, Express, React, Node.js). DÃ©veloppeur amateur en JavaScript avec connaissances approfondies dans le domaine de la gestion des donnÃ©es et du Big Data. CompÃ©tences en gestion de projet et en Ã©conomie.</p>
            </div>
        </div>
    </div>
</div>


===================================================
FICHIER: Templates\components\cv_templates\_template2.html.twig
===================================================
{# Template CV Moderne #}
<div class="cv-container">
    <div class="header">
        <img src="{{ asset('images/cvs/profile-example.jpg') }}" alt="Photo de profil" class="profile-img" onerror="this.src='{{ asset('images/placeholder-profile.jpg') }}'">
        <div class="name-title">
            <h1>Mohamed ABIDI</h1>
            <h2>3Ã¨me annÃ©e BIS (Business Information Systems)</h2>
            <p>BAC + 3 en informatique de gestion, actuellement Ã©tudiant Ã  ESPRIT SCHOOL OF BUSINESS, spÃ©cialisÃ© en dÃ©veloppement web et gestion des donnÃ©es. PassionnÃ© par l'innovation technologique et les solutions numÃ©riques pour les entreprises.</p>
        </div>
    </div>

    <div class="main-content">
        <div class="left-column">
            <div class="info">
                <h3 class="section-title">Informations</h3>
                <div class="info-item">
                    <p><strong>TÃ©lÃ©phone :</strong> +216 23 199 953</p>
                    <p><strong>Email :</strong> mohamed.abidi@esprit.tn</p>
                    <p><strong>Adresse :</strong> Sousse, Hammamet Sud / Tozeur, Nefta</p>
                    <p><strong>LinkedIn :</strong> linkedin.com/in/mohamedabidi</p>
                    <p><strong>GitHub :</strong> github.com/mohamed-abidi</p>
                </div>
            </div>

            <div class="languages">
                <h3 class="section-title">Langues</h3>
                <div class="language-item">
                    <p>FranÃ§ais (B2 selon Rosetta Stone)</p>
                    <p>Anglais (B2 selon Rosetta Stone)</p>
                    <p>Arabe (Natif)</p>
                </div>
            </div>

            <div class="interests">
                <h3 class="section-title">IntÃ©rÃªts</h3>
                <div class="interest-item">
                    <p>DÃ©veloppement web</p>
                    <p>Gestion des donnÃ©es</p>
                    <p>Programmation JavaScript</p>
                    <p>Intelligence artificielle</p>
                    <p>Big Data & Analytics</p>
                </div>
            </div>

            <div class="certifications">
                <h3 class="section-title">Certifications</h3>
                <div class="certification-item">
                    <div class="certification-title">Rosetta Stone - Anglais B2</div>
                    <div class="certification-date">2023</div>
                </div>
                <div class="certification-item">
                    <div class="certification-title">Rosetta Stone - FranÃ§ais B2</div>
                    <div class="certification-date">2023</div>
                </div>
            </div>
        </div>

        <div class="right-column">
            <div class="objective">
                <h3 class="section-title">Objectif Professionnel</h3>
                <p>Ã‰tudiant motivÃ© en informatique de gestion cherchant Ã  mettre en pratique mes compÃ©tences en dÃ©veloppement web et gestion des donnÃ©es dans un environnement professionnel innovant. Je souhaite contribuer Ã  des projets qui combinent technologie et solutions d'affaires pour rÃ©pondre aux dÃ©fis des entreprises modernes.</p>
            </div>

            <div class="experiences">
                <h3 class="section-title">ExpÃ©riences Professionnelles</h3>

                <div class="experience">
                    <div class="experience-title">Responsable Sponsoring - TUNIVISIONS ESPRIT</div>
                    <div class="experience-date">2022 - PrÃ©sent</div>
                    <div class="experience-description">
                        <ul>
                            <li>Gestion du secteur du club Tunivisions Esprit, coordination de l'Ã©quipe sponsoring</li>
                            <li>Membre du conseil d'administration du club Tunivisions Esprit</li>
                            <li>Ã‰laboration et mise en Å“uvre de stratÃ©gies pour attirer des sponsors</li>
                            <li>NÃ©gociation de partenariats et suivi des relations avec les sponsors</li>
                        </ul>
                    </div>
                </div>

                <div class="experience">
                    <div class="experience-title">DÃ©veloppeur Web Junior - Projet acadÃ©mique</div>
                    <div class="experience-date">2023</div>
                    <div class="experience-description">
                        <ul>
                            <li>DÃ©veloppement d'applications web avec la stack MERN</li>
                            <li>Conception et implÃ©mentation de bases de donnÃ©es</li>
                            <li>Collaboration en Ã©quipe sur des projets de dÃ©veloppement</li>
                        </ul>
                    </div>
                </div>
            </div>

            <div class="education">
                <h3 class="section-title">Formations</h3>

                <div class="education-item">
                    <div class="education-title">LICENCE EN BUSINESS COMPUTING - ESPRIT SCHOOL OF BUSINESS</div>
                    <div class="education-date">2021 - PrÃ©sent</div>
                    <div class="education-description">
                        <p>Parcours en Business Information Systems (BIS). Formation couvrant les aspects techniques et managÃ©riaux des systÃ¨mes d'information dans l'entreprise.</p>
                    </div>
                </div>

                <div class="education-item">
                    <div class="education-title">BAC SCIENCES - LycÃ©e BECHIR KHRAYEF NEFTA</div>
                    <div class="education-date">2020</div>
                    <div class="education-description">
                        <p>Formation scientifique gÃ©nÃ©rale ayant permis l'admission Ã  ESPRIT SCHOOL OF BUSINESS.</p>
                    </div>
                </div>
            </div>

            <div class="competences">
                <h3 class="section-title">CompÃ©tences</h3>

                <div class="skills">
                    <div class="skill-category">
                        <h4>Techniques</h4>
                        <ul class="skill-list">
                            <li>DÃ©veloppement web (MERN stack)</li>
                            <li>Programmation JavaScript</li>
                            <li>Gestion des donnÃ©es & Big Data</li>
                            <li>HTML5/CSS3</li>
                            <li>React.js</li>
                            <li>Node.js</li>
                        </ul>
                    </div>

                    <div class="skill-category">
                        <h4>Professionnelles</h4>
                        <ul class="skill-list">
                            <li>Connaissances techniques en gestion</li>
                            <li>Connaissances rÃ©glementaires en Ã©conomie</li>
                            <li>Gestion de projets</li>
                            <li>Communication</li>
                            <li>Travail d'Ã©quipe</li>
                            <li>RÃ©solution de problÃ¨mes</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


===================================================
FICHIER: Templates\cv_generator\cv_template.html.twig
===================================================
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>{{ data.firstName }} {{ data.lastName }} - CV</title>
    <style>
        body {
            font-family: 'DejaVu Sans', Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
        }

        .photo {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            overflow: hidden;
            margin: 0 auto 20px;
        }

        .photo img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        h1 {
            font-size: 24px;
            margin: 0 0 5px;
            color: #ee3124;
        }

        .contact-info {
            font-size: 14px;
            margin-bottom: 10px;
        }

        .section {
            margin-bottom: 25px;
        }

        h2 {
            font-size: 18px;
            color: #ee3124;
            border-bottom: 1px solid #ddd;
            padding-bottom: 5px;
            margin-bottom: 15px;
        }

        .entry {
            margin-bottom: 15px;
        }

        .entry-title {
            font-weight: bold;
            margin-bottom: 3px;
        }

        .entry-subtitle {
            font-style: italic;
            margin-bottom: 3px;
        }

        .entry-period {
            font-size: 13px;
            color: #666;
            margin-bottom: 5px;
        }

        .skills-list {
            display: flex;
            flex-wrap: wrap;
        }

        .skill-item {
            background-color: #f5f5f5;
            padding: 5px 10px;
            margin-right: 8px;
            margin-bottom: 8px;
            border-radius: 3px;
            font-size: 13px;
        }

        .footer {
            text-align: center;
            margin-top: 40px;
            font-size: 12px;
            color: #999;
        }
    </style>
</head>
<body>
<div class="container">
    <div class="header">
        {% if photoData is defined and photoData %}
            <div class="photo">
                <img src="{{ photoData }}" alt="Profile Photo">
            </div>
        {% endif %}

        <h1>{{ data.firstName }} {{ data.lastName }}</h1>

        <div class="contact-info">
            {% if data.email %}
                {{ data.email }}{% if data.phone %} | {% endif %}
            {% endif %}

            {% if data.phone %}
                {{ data.phone }}
            {% endif %}
        </div>

        {% if data.address or data.city or data.country %}
            <div class="contact-info">
                {{ [data.address, data.city, data.country]|filter(v => v is not empty)|join(', ') }}
            </div>
        {% endif %}
    </div>

    {% if data.education is defined and data.education|length > 0 %}
        <div class="section">
            <h2>Education</h2>

            {% for education in data.education %}
                <div class="entry">
                    <div class="entry-title">{{ education.degree }}</div>
                    <div class="entry-subtitle">{{ education.institution }}{% if education.location %}, {{ education.location }}{% endif %}</div>
                    <div class="entry-period">{{ education.startDate }}{% if education.startDate and education.endDate %} - {% endif %}{{ education.endDate }}</div>
                    {% if education.description %}
                        <div>{{ education.description }}</div>
                    {% endif %}
                </div>
            {% endfor %}
        </div>
    {% endif %}

    {% if data.experience is defined and data.experience|length > 0 %}
        <div class="section">
            <h2>Professional Experience</h2>

            {% for experience in data.experience %}
                <div class="entry">
                    <div class="entry-title">{{ experience.position }}</div>
                    <div class="entry-subtitle">{{ experience.company }}{% if experience.location %}, {{ experience.location }}{% endif %}</div>
                    <div class="entry-period">{{ experience.startDate }}{% if experience.startDate and experience.endDate %} - {% endif %}{{ experience.endDate }}</div>
                    {% if experience.description %}
                        <div>{{ experience.description }}</div>
                    {% endif %}
                </div>
            {% endfor %}
        </div>
    {% endif %}

    {% if data.skills is defined and data.skills|length > 0 %}
        <div class="section">
            <h2>Skills</h2>

            <div class="skills-list">
                {% for skill in data.skills %}
                    <div class="skill-item">{{ skill }}</div>
                {% endfor %}
            </div>
        </div>
    {% endif %}

    {% if data.additionalInfo %}
        <div class="section">
            <h2>Additional Information</h2>

            <div>{{ data.additionalInfo }}</div>
        </div>
    {% endif %}

    <div class="footer">
        <p>CV generated on {{ generatedDate|date('F d, Y') }} using ESPRIT CV Generator</p>
    </div>
</div>
</body>
</html>


===================================================
FICHIER: Templates\cv_generator\cv_template_blue.html.twig
===================================================
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>{{ data.firstName }} {{ data.lastName }} - CV</title>
    <style>
        :root {
            --primary: #3498db;
            --secondary: #2c3e50;
            --accent: #1abc9c;
            --dark: #212529;
            --light: #f8f9fa;
            --gray: #6c757d;
            --border: #dee2e6;
            --white: #ffffff;
        }

        body {
            font-family: 'DejaVu Sans', sans-serif;
            color: var(--dark);
            background-color: var(--light);
            line-height: 1.7;
            margin: 0;
            padding: 0;
        }

        .cv-container {
            max-width: 1140px;
            margin: 0 auto;
            overflow: hidden;
            background-color: var(--white);
            border-radius: 8px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.08);
        }

        header {
            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
            padding: 60px 40px;
            color: var(--white);
            position: relative;
            overflow: hidden;
        }

        header::before {
            content: '';
            position: absolute;
            right: -100px;
            top: -100px;
            width: 400px;
            height: 400px;
            background: rgba(255,255,255,0.05);
            border-radius: 50%;
        }

        header::after {
            content: '';
            position: absolute;
            left: -50px;
            bottom: -100px;
            width: 250px;
            height: 250px;
            background: rgba(255,255,255,0.05);
            border-radius: 50%;
        }

        .profile-title {
            position: relative;
            z-index: 1;
        }

        .name {
            font-size: 36px;
            font-weight: 700;
            margin-bottom: 10px;
        }

        .position {
            font-size: 22px;
            opacity: 0.9;
            font-weight: 300;
            margin-bottom: 25px;
        }

        .contact-list {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-top: 30px;
        }

        .contact-item {
            display: flex;
            align-items: center;
            background-color: rgba(255,255,255,0.1);
            padding: 8px 15px;
            border-radius: 30px;
        }

        .contact-icon {
            margin-right: 10px;
            font-weight: bold;
        }

        main {
            padding: 40px;
        }

        .section {
            margin-bottom: 50px;
        }

        .section:last-child {
            margin-bottom: 0;
        }

        .section-title {
            color: var(--primary);
            font-weight: 600;
            font-size: 24px;
            margin-bottom: 30px;
            position: relative;
            display: inline-block;
        }

        .section-title::after {
            content: '';
            position: absolute;
            left: 0;
            bottom: -10px;
            width: 50%;
            height: 4px;
            background-color: var(--accent);
            border-radius: 2px;
        }

        .about-text {
            font-size: 16px;
            line-height: 1.8;
        }

        .timeline {
            position: relative;
            padding-left: 30px;
        }

        .timeline::before {
            content: '';
            position: absolute;
            left: 0;
            top: 8px;
            height: calc(100% - 8px);
            width: 2px;
            background-color: var(--primary);
        }

        .timeline-item {
            position: relative;
            padding-bottom: 40px;
        }

        .timeline-item:last-child {
            padding-bottom: 0;
        }

        .timeline-dot {
            position: absolute;
            left: -30px;
            top: 8px;
            width: 16px;
            height: 16px;
            border-radius: 50%;
            background-color: var(--white);
            border: 3px solid var(--primary);
        }

        .timeline-title {
            font-weight: 600;
            font-size: 18px;
            color: var(--dark);
            margin-bottom: 5px;
            display: flex;
            align-items: center;
        }

        .timeline-company {
            font-weight: 500;
            color: var(--primary);
            margin-bottom: 10px;
        }

        .timeline-period {
            color: var(--gray);
            font-size: 14px;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
        }

        .skills-grid {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }

        .skill-tag {
            background-color: rgba(52, 152, 219, 0.1);
            color: var(--primary);
            border-radius: 30px;
            padding: 8px 16px;
            font-size: 14px;
            font-weight: 500;
        }

        .language-item {
            margin-bottom: 15px;
        }

        .row {
            display: flex;
            flex-wrap: wrap;
        }

        .col-8 {
            width: 70%;
        }

        .col-4 {
            width: 30%;
        }

        .profile-img {
            width: 160px;
            height: 160px;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid rgba(255,255,255,0.2);
            margin-left: auto;
        }

        ul {
            padding-left: 20px;
        }

        @media print {
            body {
                background-color: white;
                color: black;
            }

            .cv-container {
                box-shadow: none;
                margin: 0;
                max-width: none;
            }
        }
    </style>
</head>
<body>
<div class="cv-container">
    <!-- Header Section -->
    <header>
        <div class="row">
            <div class="col-8 profile-title">
                <h1 class="name">{{ data.firstName }} {{ data.lastName }}</h1>
                <div class="position">{{ data.position }}</div>
                {% if data.additionalInfo %}
                    <p>{{ data.additionalInfo }}</p>
                {% endif %}

                <div class="contact-list">
                    {% if data.email %}
                        <div class="contact-item">
                            <span class="contact-icon">@</span>
                            <span>{{ data.email }}</span>
                        </div>
                    {% endif %}

                    {% if data.phone %}
                        <div class="contact-item">
                            <span class="contact-icon">â˜</span>
                            <span>{{ data.phone }}</span>
                        </div>
                    {% endif %}

                    {% if data.address or data.city or data.country %}
                        <div class="contact-item">
                            <span class="contact-icon">âŒ‚</span>
                            <span>{{ [data.city, data.country]|filter(v => v is not empty)|join(', ') }}</span>
                        </div>
                    {% endif %}

                    {% if data.github %}
                        <div class="contact-item">
                            <span class="contact-icon">GH</span>
                            <span>{{ data.github }}</span>
                        </div>
                    {% endif %}
                </div>
            </div>
            <div class="col-4" style="text-align: right;">
                {% if photoData is defined and photoData %}
                    <img src="{{ photoData|raw }}" alt="Profile Image" class="profile-img">
                {% endif %}
            </div>
        </div>
    </header>

    <!-- Main Content -->
    <main>
        <!-- Experience -->
        {% if data.experience is defined and data.experience|length > 0 %}
            <section class="section">
                <h2 class="section-title">Experience</h2>

                <div class="timeline">
                    {% for experience in data.experience %}
                        <div class="timeline-item">
                            <div class="timeline-dot"></div>
                            <div class="timeline-title">{{ experience.position }}</div>
                            <div class="timeline-company">{{ experience.company }}{% if experience.location %}, {{ experience.location }}{% endif %}</div>
                            <div class="timeline-period">{{ experience.startDate }}{% if experience.startDate and experience.endDate %} - {% endif %}{{ experience.endDate }}</div>
                            {% if experience.description %}
                                <p>{{ experience.description }}</p>
                            {% endif %}
                        </div>
                    {% endfor %}
                </div>
            </section>
        {% endif %}

        <!-- Education -->
        {% if data.education is defined and data.education|length > 0 %}
            <section class="section">
                <h2 class="section-title">Education</h2>

                <div class="timeline">
                    {% for education in data.education %}
                        <div class="timeline-item">
                            <div class="timeline-dot"></div>
                            <div class="timeline-title">{{ education.degree }}</div>
                            <div class="timeline-company">{{ education.institution }}{% if education.location %}, {{ education.location }}{% endif %}</div>
                            <div class="timeline-period">{{ education.startDate }}{% if education.startDate and education.endDate %} - {% endif %}{{ education.endDate }}</div>
                            {% if education.description %}
                                <p>{{ education.description }}</p>
                            {% endif %}
                        </div>
                    {% endfor %}
                </div>
            </section>
        {% endif %}

        <!-- Skills -->
        {% if data.skills is defined and data.skills|length > 0 %}
            <section class="section">
                <h2 class="section-title">Skills</h2>

                <div class="skills-grid">
                    {% for skill in data.skills %}
                        <span class="skill-tag">{{ skill }}</span>
                    {% endfor %}
                </div>
            </section>
        {% endif %}

        <!-- Languages -->
        {% if data.languages is defined and data.languages|length > 0 %}
            <section class="section">
                <h2 class="section-title">Languages</h2>

                {% for language in data.languages %}
                    <div class="language-item">
                        <strong>{{ language }}</strong>
                    </div>
                {% endfor %}
            </section>
        {% endif %}

        <div style="text-align: center; margin-top: 50px; font-size: 12px; color: #777;">
            CV generated on {{ generatedDate|date('F d, Y') }} using ESPRIT CV Generator
        </div>
    </main>
</div>
{% if app is defined and app.debug is defined and app.debug %}
    <div style="background: #f5f5f5; border: 1px solid #ddd; padding: 20px; margin-top: 30px; font-family: monospace;">
        <h2>Debug Data</h2>
        <pre>{{ dump(data) }}</pre>
    </div>
{% endif %}
</body>

</html>


===================================================
FICHIER: Templates\cv_generator\cv_template_green.html.twig
===================================================
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>{{ data.firstName }} {{ data.lastName }} - CV</title>
    <style>
        :root {
            --primary: #27ae60;
            --secondary: #2c3e50;
            --light: #f8f9fa;
            --dark: #343a40;
            --text: #495057;
            --border: #dee2e6;
            --white: #ffffff;
        }

        body {
            font-family: 'DejaVu Sans', 'Segoe UI', Roboto, sans-serif;
            color: var(--text);
            background-color: var(--light);
            line-height: 1.6;
            margin: 0;
            padding: 0;
        }

        .cv-container {
            max-width: 1140px;
            margin: 0 auto;
            box-shadow: 0 10px 40px rgba(0,0,0,0.1);
            border-radius: 8px;
            overflow: hidden;
            background-color: var(--white);
        }

        .sidebar {
            background-color: var(--secondary);
            color: var(--white);
            padding: 40px;
            height: 100%;
        }

        .main-content {
            padding: 40px;
        }

        .profile-img {
            width: 160px;
            height: 160px;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid rgba(255,255,255,0.2);
            margin: 0 auto 20px;
            display: block;
        }

        .name {
            font-size: 32px;
            font-weight: 700;
            margin-top: 20px;
            margin-bottom: 5px;
            color: var(--dark);
            text-align: center;
        }

        .position {
            font-size: 20px;
            opacity: 0.8;
            margin-bottom: 25px;
            font-weight: 500;
            text-align: center;
        }

        .contact-item {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }

        .contact-icon {
            width: 36px;
            height: 36px;
            background-color: rgba(255,255,255,0.1);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 15px;
            font-weight: bold;
        }

        .section-title {
            color: var(--primary);
            font-weight: 700;
            font-size: 24px;
            margin-bottom: 25px;
            position: relative;
            padding-bottom: 10px;
        }

        .section-title::after {
            content: '';
            position: absolute;
            left: 0;
            bottom: 0;
            width: 40px;
            height: 3px;
            background-color: var(--primary);
        }

        .experience-item, .education-item {
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 1px solid var(--border);
        }

        .experience-item:last-child, .education-item:last-child {
            border-bottom: none;
            padding-bottom: 0;
        }

        .job-title, .degree {
            font-weight: 600;
            font-size: 18px;
            color: var(--dark);
            margin-bottom: 5px;
        }

        .company, .university {
            font-weight: 500;
            margin-bottom: 5px;
        }

        .period {
            color: var(--primary);
            font-size: 14px;
            margin-bottom: 10px;
            display: inline-block;
        }

        .skill-progress {
            height: 6px;
            background-color: rgba(39, 174, 96, 0.2);
            border-radius: 3px;
            margin-bottom: 25px;
            position: relative;
        }

        .skill-progress-bar {
            height: 100%;
            background-color: var(--primary);
            border-radius: 3px;
            position: absolute;
            top: 0;
            left: 0;
        }

        .skill-title {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
            font-weight: 500;
        }

        .skill-name {
            color: var(--dark);
        }

        .skill-percentage {
            color: var(--primary);
        }

        .language-item {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }

        .language-dot {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background-color: var(--primary);
            margin-right: 10px;
        }

        .sidebar-section {
            margin-bottom: 40px;
        }

        .sidebar-title {
            font-size: 20px;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-bottom: 20px;
            font-weight: 600;
            color: var(--white);
        }

        .tag {
            display: inline-block;
            background-color: rgba(39, 174, 96, 0.1);
            color: var(--secondary);
            border-radius: 4px;
            padding: 5px 10px;
            margin-right: 8px;
            margin-bottom: 10px;
            font-size: 14px;
        }

        .row {
            display: flex;
            flex-wrap: wrap;
        }

        .col-4 {
            width: 33.333333%;
        }

        .col-8 {
            width: 66.666667%;
        }

        ul {
            padding-left: 20px;
        }

        @media print {
            body {
                background-color: white;
                color: black;
            }

            .cv-container {
                box-shadow: none;
                margin: 0;
                max-width: none;
            }
        }
    </style>
</head>
<body>
<div class="cv-container">
    <div class="row">
        <!-- Sidebar -->
        <div class="col-4 sidebar">
            <div style="text-align: center; margin-bottom: 40px;">
                {% if photoData is defined and photoData %}
                    <img src="{{ photoData|raw }}" alt="Profile Image" class="profile-img">
                {% endif %}
                <h1 class="name" style="color: white;">{{ data.firstName }} {{ data.lastName }}</h1>
                <div class="position" style="color: rgba(255, 255, 255, 0.8);">{{ data.position }}</div>
            </div>

            <div class="sidebar-section">
                <h3 class="sidebar-title">Contact</h3>
                {% if data.email %}
                    <div class="contact-item">
                        <div class="contact-icon">@</div>
                        <div>{{ data.email }}</div>
                    </div>
                {% endif %}

                {% if data.phone %}
                    <div class="contact-item">
                        <div class="contact-icon">â˜</div>
                        <div>{{ data.phone }}</div>
                    </div>
                {% endif %}

                {% if data.address or data.city or data.country %}
                    <div class="contact-item">
                        <div class="contact-icon">âŒ‚</div>
                        <div>{{ [data.address, data.city, data.country]|filter(v => v is not empty)|join(', ') }}</div>
                    </div>
                {% endif %}

                {% if data.github %}
                    <div class="contact-item">
                        <div class="contact-icon">GH</div>
                        <div>{{ data.github }}</div>
                    </div>
                {% endif %}

                {% if data.linkedin %}
                    <div class="contact-item">
                        <div class="contact-icon">in</div>
                        <div>{{ data.linkedin }}</div>
                    </div>
                {% endif %}
            </div>

            {% if data.skills is defined and data.skills|length > 0 %}
                <div class="sidebar-section">
                    <h3 class="sidebar-title">Skills</h3>
                    {% for skill in data.skills %}
                        <div class="skill-item">
                            <div class="skill-title">
                                <span class="skill-name">{{ skill }}</span>
                            </div>
                            <div class="skill-progress">
                                <div class="skill-progress-bar" style="width: 85%"></div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            {% endif %}

            {% if data.languages is defined and data.languages|length > 0 %}
                <div class="sidebar-section">
                    <h3 class="sidebar-title">Languages</h3>
                    {% for language in data.languages %}
                        <div class="language-item">
                            <div class="language-dot"></div>
                            <div>{{ language }}</div>
                        </div>
                    {% endfor %}
                </div>
            {% endif %}
        </div>

        <!-- Main Content -->
        <div class="col-8 main-content">
            {% if data.additionalInfo %}
                <section style="margin-bottom: 30px;">
                    <h2 class="section-title">About Me</h2>
                    <p>{{ data.additionalInfo }}</p>
                </section>
            {% endif %}

            {% if data.experience is defined and data.experience|length > 0 %}
                <section style="margin-bottom: 30px;">
                    <h2 class="section-title">Work Experience</h2>

                    {% for experience in data.experience %}
                        <div class="experience-item">
                            <div class="job-title">{{ experience.position }}</div>
                            <div class="company">{{ experience.company }}{% if experience.location %}, {{ experience.location }}{% endif %}</div>
                            <div class="period">{{ experience.startDate }}{% if experience.startDate and experience.endDate %} - {% endif %}{{ experience.endDate }}</div>
                            {% if experience.description %}
                                <p>{{ experience.description }}</p>
                            {% endif %}
                        </div>
                    {% endfor %}
                </section>
            {% endif %}

            {% if data.education is defined and data.education|length > 0 %}
                <section style="margin-bottom: 30px;">
                    <h2 class="section-title">Education</h2>

                    {% for education in data.education %}
                        <div class="education-item">
                            <div class="degree">{{ education.degree }}</div>
                            <div class="university">{{ education.institution }}{% if education.location %}, {{ education.location }}{% endif %}</div>
                            <div class="period">{{ education.startDate }}{% if education.startDate and education.endDate %} - {% endif %}{{ education.endDate }}</div>
                            {% if education.description %}
                                <p>{{ education.description }}</p>
                            {% endif %}
                        </div>
                    {% endfor %}
                </section>
            {% endif %}

            <div style="text-align: center; margin-top: 50px; font-size: 12px; color: #777;">
                CV generated on {{ generatedDate|date('F d, Y') }} using ESPRIT CV Generator
            </div>
        </div>
    </div>
</div>
{% if app is defined and app.debug is defined and app.debug %}
    <div style="background: #f5f5f5; border: 1px solid #ddd; padding: 20px; margin-top: 30px; font-family: monospace;">
        <h2>Debug Data</h2>
        <pre>{{ dump(data) }}</pre>
    </div>
{% endif %}
</body>
</html>


===================================================
FICHIER: Templates\cv_generator\index.html.twig
===================================================
{% extends 'base.html.twig' %}

{% block title %}CV Generator{% endblock %}

{% block body %}
    <div class="container-fluid p-0">
        {# Header with logos #}
        <div class="header-logos">
            <div class="row m-0 p-3">
                <div class="col-4">
                    <img src="{{ asset('images/logo.png') }}" alt="Logo" class="img-fluid" style="max-height: 109px;">
                </div>
                <div class="col-4 text-center">
                    <img src="{{ asset('images/tunisie-removebg-preview.png') }}" alt="Tunisia" class="img-fluid" style="max-height: 100px;">
                </div>
                <div class="col-4 text-end">
                    <img src="{{ asset('images/esprim.png') }}" alt="ESPRIM" class="img-fluid" style="max-height: 46px;">
                </div>
            </div>
        </div>

        {# Content will go here #}
    </div>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .header-logos {
            background-color: white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
    </style>
{% endblock %}


===================================================
FICHIER: Templates\cv_generator\main.html.twig
===================================================
{% extends 'base.html.twig' %}

{% block title %}CV Generator{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <!-- Modern Libraries -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">

    <style>
        /* Modern Stepper Styles */
        .cv-stepper {
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 100%;
            margin: 30px 0;
        }

        .stepper-step {
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
            z-index: 1;
        }

        .step-number {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #f8f9fa;
            border: 2px solid #dee2e6;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            color: #6c757d;
            transition: all 0.3s;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .step-label {
            margin-top: 10px;
            font-size: 14px;
            color: #6c757d;
            font-weight: 500;
            transition: all 0.3s;
        }

        .step-connector {
            flex-grow: 1;
            height: 3px;
            background-color: #dee2e6;
            margin: 0 15px;
            z-index: 0;
        }

        .stepper-step.active .step-number {
            background-color: #ee3124;
            border-color: #ee3124;
            color: white;
        }

        .stepper-step.active .step-label {
            color: #212529;
            font-weight: 600;
        }

        .stepper-step.completed .step-number {
            background-color: #28a745;
            border-color: #28a745;
            color: white;
        }

        .stepper-step.completed + .step-connector {
            background-color: #28a745;
        }

        /* Modern Card Animations */
        .form-section-page {
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.5s ease, transform 0.5s ease;
        }

        .form-section-page.active {
            opacity: 1;
            transform: translateY(0);
        }

        .card {
            transition: all 0.3s ease;
            border: none;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.12);
        }

        .template-card {
            cursor: pointer;
            transition: all 0.3s;
            position: relative;
            overflow: hidden;
        }

        .template-card::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(45deg, transparent 65%, rgba(255,255,255,0.2) 100%);
            transition: all 0.3s;
        }

        .template-card:hover::after {
            background: linear-gradient(45deg, transparent 50%, rgba(255,255,255,0.3) 100%);
        }

        .template-card.selected-template::before {
            content: '\f00c';
            font-family: 'Font Awesome 5 Free';
            font-weight: 900;
            position: absolute;
            top: 10px;
            right: 10px;
            background: #28a745;
            color: white;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 10;
        }

        /* Skill Autocomplete Styles */
        .skill-suggestions {
            position: absolute;
            background: #fff;
            border-radius: 4px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            z-index: 1000;
            max-height: 200px;
            overflow-y: auto;
            display: none;
        }

        .suggestion-item {
            padding: 10px 15px;
            cursor: pointer;
            transition: background 0.2s;
        }

        .suggestion-item:hover {
            background: rgba(238, 49, 36, 0.1);
        }

        /* Drag and Drop Styles */
        .drag-handle {
            cursor: grab;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 30px;
            height: 30px;
            color: #6c757d;
            transition: all 0.2s;
        }

        .drag-handle:hover {
            color: #ee3124;
        }

        .drag-handle:active {
            cursor: grabbing;
        }

        .sortable-ghost {
            opacity: 0.4;
            background: #f8f9fa;
        }

        .sortable-chosen {
            box-shadow: 0 5px 15px rgba(0,0,0,0.15);
        }

        .sortable-drag {
            opacity: 0.8;
            transform: rotate(2deg);
        }

        /* Modern Photo Upload Styles */
        .profile-photo-container {
            position: relative;
            width: 180px;
            margin: 0 auto 2rem;
            transition: all 0.3s;
        }

        .profile-photo-wrapper {
            position: relative;
            overflow: hidden;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.3s;
        }

        .profile-photo-wrapper::after {
            content: '\f030';
            font-family: 'Font Awesome 5 Free';
            font-weight: 900;
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background: rgba(0,0,0,0.5);
            color: white;
            padding: 8px 0;
            text-align: center;
            font-size: 16px;
            opacity: 0;
            transition: all 0.3s;
        }

        .profile-photo-wrapper:hover::after {
            opacity: 1;
        }

        .profile-photo-container.highlight {
            transform: scale(1.05);
            box-shadow: 0 0 0 3px rgba(238, 49, 36, 0.2), 0 0 20px rgba(0,0,0,0.1);
        }

        .photo-crop-modal {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.7);
            z-index: 2000;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .photo-crop-content {
            background: white;
            border-radius: 8px;
            width: 90%;
            max-width: 600px;
            max-height: 90vh;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .photo-crop-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px;
            border-bottom: 1px solid #dee2e6;
        }

        .photo-crop-body {
            flex: 1;
            min-height: 300px;
            overflow: hidden;
        }

        .photo-crop-footer {
            padding: 15px;
            border-top: 1px solid #dee2e6;
            display: flex;
            justify-content: flex-end;
            gap: 10px;
        }

        .crop-close-btn {
            background: none;
            border: none;
            font-size: 24px;
            line-height: 1;
            cursor: pointer;
        }

        /* Enhanced Preview Styles */
        .cv-preview {
            width: 450px;
            background: white;
        }

        .green-template-preview, .blue-template-preview {
            font-family: 'Roboto', sans-serif;
            color: #333;
        }

        .green-template-preview .preview-header {
            background: linear-gradient(135deg, #27ae60, #2ecc71);
            color: white;
            padding: 20px;
            text-align: center;
            border-radius: 8px 8px 0 0;
        }

        .green-template-preview .preview-body {
            padding: 20px;
        }

        .blue-template-preview {
            display: flex;
        }

        .blue-template-preview .preview-sidebar {
            background: #3498db;
            color: white;
            padding: 20px;
            width: 140px;
            border-radius: 8px 0 0 8px;
        }

        .blue-template-preview .preview-main {
            flex: 1;
            padding: 20px;
        }

        .blue-template-preview header {
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #3498db;
        }

        .preview-skills {
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
        }

        .skill-badge {
            background: rgba(255,255,255,0.2);
            padding: 3px 8px;
            border-radius: 12px;
            font-size: 12px;
        }

        .preview-entry {
            margin-bottom: 10px;
            padding-left: 10px;
            border-left: 3px solid #ddd;
        }

        .green-template-preview .preview-entry {
            border-left-color: #27ae60;
        }

        .blue-template-preview .preview-entry {
            border-left-color: #3498db;
        }

        #previewContent {
            transition: all 0.3s ease;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 10px 25px rgba(0,0,0,0.15);
        }

        /* Additional styles for enlarged icons and images */
        .fas, .far, .fab, .fa {
            font-size: 200%; /* Double the icon size */
            vertical-align: middle;
        }

        /* Adjust specific icons that need special handling */
        .btn i.fas, .btn i.far, .btn i.fab, .btn i.fa {
            font-size: 150%; /* Slightly smaller for button icons to maintain button proportions */
            vertical-align: middle;
            margin-right: 0.5rem;
            margin-left: 0.5rem;
        }

        /* Adjust button padding to accommodate larger icons */
        .btn {
            padding: 0.5rem 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* Fix form element alignment with larger icons */
        .form-label {
            display: flex;
            align-items: center;
            margin-bottom: 0.7rem;
        }

        /* Even larger logo badge */
        .logo-badge {
            width: 280px; /* Further enlarged from 220px */
            height: 280px; /* Further enlarged from 220px */
            border-width: 12px; /* Further enlarged from 10px */
            margin-bottom: 2rem;
        }

        /* Larger logo image inside the badge */
        .title-logo {
            max-width: 220px; /* Further enlarged from 170px */
            max-height: 220px; /* Further enlarged from 170px */
        }

        /* Larger title icon */
        .title-icon {
            font-size: 5.5rem !important; /* Further enlarged from 4.8rem */
            margin-left: 20px;
        }

        /* Adjust title container for larger elements */
        .main-title-container {
            margin: 3.5rem auto 4rem;
        }

        /* Profile photo display in CV */
        .profile-photo-container {
            display: flex;
            justify-content: center;
            margin-bottom: 2rem;
        }

        .profile-photo-wrapper {
            position: relative;
            width: 150px;
            height: 150px;
            border-radius: 50%;
            overflow: hidden;
            border: 5px solid rgba(238, 49, 36, 0.2);
            box-shadow: 0 5px 15px rgba(45, 55, 72, 0.1);
        }

        .profile-photo {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        /* Preview panel profile photo */
        .preview-profile-photo {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid rgba(238, 49, 36, 0.2);
            box-shadow: 0 3px 8px rgba(45, 55, 72, 0.1);
            margin: 0 auto 1rem;
            display: block;
        }

        /* Enhanced preview panel styling */
        .cv-preview {
            position: fixed;
            top: 0;
            right: 0;
            height: 100vh;
            width: 400px;
            background-color: var(--white);
            border-left: 1px solid rgba(113, 128, 150, 0.2);
            box-shadow: -4px 0 15px rgba(45, 55, 72, 0.1);
            padding: 2rem;
            overflow-y: auto;
            z-index: 1000;
            transform: translateX(100%);
            transition: transform 0.3s ease-in-out;
        }

        .cv-preview.show {
            transform: translateX(0);
        }

        .preview-close {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: none;
            border: none;
            font-size: 2.4rem;
            color: var(--slate-gray);
            cursor: pointer;
        }

        .preview-section {
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid rgba(113, 128, 150, 0.2);
        }

        .preview-section:last-child {
            border-bottom: none;
        }

        .preview-section h5 {
            color: var(--primary-red);
            font-weight: 600;
            margin-bottom: 1rem;
        }

        .preview-section h6 {
            color: var(--charcoal);
            font-weight: 600;
            margin-top: 0.5rem;
        }

        /* Language badges styling like skill badges */
        .language-badge {
            background-color: rgba(113, 128, 150, 0.1);
            color: var(--charcoal);
            border-radius: 20px;
            padding: 0.5rem 1rem;
            margin-right: 0.5rem;
            margin-bottom: 0.5rem;
            display: inline-flex;
            align-items: center;
            transition: var(--transition);
        }

        .language-badge button {
            background: none;
            border: none;
            color: var(--slate-gray);
            margin-left: 0.5rem;
            cursor: pointer;
            font-size: 0.8rem;
        }

        .language-badge:hover {
            background-color: rgba(238, 49, 36, 0.1);
            color: var(--primary-red);
        }

        /* Template selection styling */
        .form-check-input[type="radio"] {
            width: 1.2em;
            height: 1.2em;
            margin-top: 0.25em;
        }

        .form-check-label {
            padding-left: 0.5em;
            font-weight: 500;
        }

        /* Template card highlight when selected */
        .template-card.selected-template .card {
            border: 3px solid;
            border-color: #3498db; /* Using a specific blue color instead of var(--primary) */
            box-shadow: 0 0 15px rgba(52, 152, 219, 0.3);
        }

        /* Template card highlight for green */
        .template-card.selected-template-green .card {
            border: 3px solid;
            border-color: #27ae60;
            box-shadow: 0 0 15px rgba(39, 174, 96, 0.3);
        }

        /* Debug info styling */
        details summary {
            cursor: pointer;
            font-weight: 600;
        }

        /* New Animation Elements */
        .fade-in {
            animation: fadeIn 0.5s ease forwards;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        .slide-in {
            animation: slideIn 0.5s ease forwards;
        }

        @keyframes slideIn {
            from { transform: translateY(20px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        .pulse {
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }

        /* Modern form styles */
        .form-control, .form-select {
            padding: 0.75rem 1rem;
            border-radius: 8px;
            box-shadow: none;
            border-color: #dee2e6;
            transition: all 0.3s;
        }

        .form-control:focus, .form-select:focus {
            border-color: #ee3124;
            box-shadow: 0 0 0 0.25rem rgba(238, 49, 36, 0.25);
        }

        .form-floating label {
            padding: 0.75rem 1rem;
        }

        .form-floating .form-control:focus ~ label,
        .form-floating .form-control:not(:placeholder-shown) ~ label {
            transform: scale(0.85) translateY(-0.75rem) translateX(0.15rem);
        }

        /* Modern alert styling */
        .alert {
            border-radius: 8px;
            border: none;
            box-shadow: 0 4px 12px rgba(0,0,0,0.05);
        }

        .alert-info {
            background-color: rgba(52, 152, 219, 0.1);
            color: #2980b9;
        }

        .alert-success {
            background-color: rgba(39, 174, 96, 0.1);
            color: #27ae60;
        }

        .alert-warning {
            background-color: rgba(241, 196, 15, 0.1);
            color: #f39c12;
        }

        .alert-danger {
            background-color: rgba(231, 76, 60, 0.1);
            color: #c0392b;
        }

        /* Empty state styling */
        .empty-state {
            text-align: center;
            padding: 3rem 1rem;
            border: 2px dashed #dee2e6;
            border-radius: 8px;
            background-color: #f8f9fa;
            margin: 1.5rem 0;
        }

        .empty-state-icon {
            font-size: 3rem;
            color: #adb5bd;
            margin-bottom: 1rem;
        }

        .empty-state h5 {
            color: #495057;
            margin-bottom: 0.5rem;
        }

        .empty-state p {
            color: #6c757d;
            margin-bottom: 1.5rem;
        }

        /* Mobile-specific adjustments */
        @media (max-width: 768px) {
            .logo-badge {
                width: 180px; /* Adjusted for mobile */
                height: 180px; /* Adjusted for mobile */
                border-width: 8px; /* Adjusted for mobile */
            }

            .title-logo {
                max-width: 140px; /* Adjusted for mobile */
                max-height: 140px; /* Adjusted for mobile */
            }

            .title-icon {
                font-size: 4rem !important; /* Adjusted for mobile */
            }

            /* Adjust icon sizes on mobile */
            .fas, .far, .fab, .fa {
                font-size: 160%; /* Slightly smaller on mobile */
            }

            .cv-preview {
                width: 90%; /* Wider on mobile */
            }

            .profile-photo-wrapper {
                width: 120px;
                height: 120px;
            }

            .preview-profile-photo {
                width: 100px;
                height: 100px;
            }

            .step-label {
                display: none; /* Hide step labels on mobile */
            }

            .cv-stepper {
                margin: 15px 0; /* Less margin on mobile */
            }
        }
    </style>
{% endblock %}

{% block body %}
    {# Ajouter la sidebar de sÃ©lection des templates #}
    <div class="template-sidebar" id="templateSidebar">
        <!-- EntÃªte de la sidebar -->
        <div class="sidebar-header">
            <h3><i class="fas fa-file-alt"></i> Templates CV</h3>
            <button class="close-sidebar" id="closeSidebar">
                <i class="fas fa-times"></i>
            </button>
        </div>

        <!-- Contenu de la sidebar -->
        <div class="sidebar-content">
            <!-- Section de filtres -->
            <div class="filters-section sidebar-section">
                <div class="sidebar-section-title">
                    <i class="fas fa-filter"></i> Filtrer par
                </div>

                <!-- Filtres par style -->
                <div class="filter-group">
                    <span class="filter-label">Style</span>
                    <div class="filter-options">
                        <button class="filter-option" data-filter="all">Tous</button>
                        <button class="filter-option" data-filter="modern">Moderne</button>
                        <button class="filter-option" data-filter="classic">Classique</button>
                        <button class="filter-option" data-filter="creative">CrÃ©atif</button>
                        <button class="filter-option" data-filter="professional">Professionnel</button>
                    </div>
                </div>

                <!-- Filtres par domaine -->
                <div class="filter-group">
                    <span class="filter-label">Domaine</span>
                    <div class="filter-options">
                        <button class="filter-option" data-filter="all">Tous</button>
                        <button class="filter-option" data-filter="engineering">IngÃ©nierie</button>
                        <button class="filter-option" data-filter="business">Business</button>
                        <button class="filter-option" data-filter="academic">AcadÃ©mique</button>
                    </div>
                </div>
            </div>

            <!-- Section des templates -->
            <div class="templates-section sidebar-section">
                <div class="sidebar-section-title">
                    <i class="fas fa-copy"></i> Templates disponibles
                </div>

                <ul class="template-list" id="templateList">
                    <!-- Template 1 - Moderne/Professionnel -->
                    <li class="template-item" data-template="template1" data-category="modern professional engineering">
                        <img src="{{ asset('images/cvs/1.png') }}" alt="Template Moderne" class="template-thumbnail">
                        <div class="template-info">
                            <h4 class="template-name">Tech Expert</h4>
                            <div class="template-category">
                                <span class="category-tag tag-modern">Moderne</span>
                                <span class="category-tag tag-professional">Professionnel</span>
                                <span class="category-tag tag-engineering">IngÃ©nierie</span>
                            </div>
                        </div>
                    </li>

                    <!-- Template 2 - Classique/Professionnel -->
                    <li class="template-item" data-template="template2" data-category="classic professional business">
                        <img src="{{ asset('images/cvs/2.png') }}" alt="Template Classique" class="template-thumbnail">
                        <div class="template-info">
                            <h4 class="template-name">Executive</h4>
                            <div class="template-category">
                                <span class="category-tag tag-classic">Classique</span>
                                <span class="category-tag tag-professional">Professionnel</span>
                                <span class="category-tag tag-business">Business</span>
                            </div>
                        </div>
                    </li>

                    <!-- Template 3 - CrÃ©atif -->
                    <li class="template-item" data-template="template3" data-category="creative modern">
                        <img src="{{ asset('images/cvs/3.png') }}" alt="Template CrÃ©atif" class="template-thumbnail">
                        <div class="template-info">
                            <h4 class="template-name">Innovation</h4>
                            <div class="template-category">
                                <span class="category-tag tag-creative">CrÃ©atif</span>
                                <span class="category-tag tag-modern">Moderne</span>
                            </div>
                        </div>
                    </li>

                    <!-- Template 4 - AcadÃ©mique -->
                    <li class="template-item" data-template="template4" data-category="classic academic">
                        <img src="{{ asset('images/cvs/4.png') }}" alt="Template AcadÃ©mique" class="template-thumbnail">
                        <div class="template-info">
                            <h4 class="template-name">Academic Plus</h4>
                            <div class="template-category">
                                <span class="category-tag tag-classic">Classique</span>
                                <span class="category-tag tag-academic">AcadÃ©mique</span>
                            </div>
                        </div>
                    </li>

                    <!-- Template 5 - IngÃ©nierie Moderne -->
                    <li class="template-item" data-template="template5" data-category="modern engineering">
                        <img src="{{ asset('images/cvs/5.png') }}" alt="Template IngÃ©nierie" class="template-thumbnail">
                        <div class="template-info">
                            <h4 class="template-name">Tech Engineering</h4>
                            <div class="template-category">
                                <span class="category-tag tag-modern">Moderne</span>
                                <span class="category-tag tag-engineering">IngÃ©nierie</span>
                            </div>
                        </div>
                    </li>

                    <!-- Template 6 - Business Moderne -->
                    <li class="template-item" data-template="template6" data-category="modern business">
                        <img src="{{ asset('images/cvs/6.png') }}" alt="Template Business" class="template-thumbnail">
                        <div class="template-info">
                            <h4 class="template-name">Business Pro</h4>
                            <div class="template-category">
                                <span class="category-tag tag-modern">Moderne</span>
                                <span class="category-tag tag-business">Business</span>
                                <span class="category-tag tag-professional">Professionnel</span>
                            </div>
                        </div>
                    </li>

                    <!-- Template 7 - Classique Ã‰lÃ©gant -->
                    <li class="template-item" data-template="template7" data-category="classic professional">
                        <img src="{{ asset('images/cvs/7.png') }}" alt="Template Classique Ã‰lÃ©gant" class="template-thumbnail">
                        <div class="template-info">
                            <h4 class="template-name">Classic Elite</h4>
                            <div class="template-category">
                                <span class="category-tag tag-classic">Classique</span>
                                <span class="category-tag tag-professional">Professionnel</span>
                            </div>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </div>

    <!-- Bouton Toggle Sidebar (visible uniquement sur mobile) -->
    <button class="sidebar-toggle" id="sidebarToggle">
        <i class="fas fa-th-large"></i>
    </button>

    <!-- Overlay pour fermer la sidebar sur mobile -->
    <div class="sidebar-overlay" id="sidebarOverlay"></div>

    <!-- Contenu principal adaptÃ© Ã  la sidebar -->
    <div class="main-content">
        <div class="container">
            <div class="main-title-container">
                <div class="logo-badge">
                    <img src="{{ asset('images/esprim.png') }}" alt="ESPRIT" class="title-logo">
                </div>
                <h1 class="main-title">
                    <span class="title-accent">ESPRIT</span> CV Generator
                    <i class="fas fa-file-alt title-icon"></i>
                </h1>
                <p class="main-subtitle">Create professional CVs in minutes</p>
            </div>

            <!-- Modern Stepper instead of Progress Tracking -->
            <div id="cv-stepper-container" class="mb-4"></div>

            <!-- CV Form -->
            <div class="card shadow">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h3 class="card-title mb-0"><i class="fas fa-file-alt me-2"></i>Build Your Professional CV</h3>
                    <button type="button" class="btn btn-sm btn-outline-light" id="autofillBtn" title="Autofill with sample data">
                        <i class="fas fa-magic me-1"></i> Autofill
                    </button>
                </div>
                <div class="card-body">
                    <form id="cvForm" method="post" action="/cv-generator/generate" enctype="multipart/form-data" target="pdfDownloadFrame" class="needs-validation" novalidate>
                        <div class="form-sections">
                            <!-- Personal Information Section -->
                            <div class="form-section-page active" id="section-1">
                                <h4 class="form-section-title">
                                    <i class="fas fa-user"></i>
                                    Personal Information
                                </h4>

                                <div class="alert alert-info fade-in">
                                    <i class="fas fa-info-circle me-2"></i>
                                    Start by providing your basic personal information.
                                </div>

                                <!-- Modern Profile Photo Upload -->
                                <div class="profile-photo-container">
                                    <div class="profile-photo-wrapper">
                                        <img src="{{ asset('images/default-avatar.png') }}" alt="Profile Photo" class="profile-photo" id="profilePhotoPreview">
                                        <input type="file" id="photoUpload" name="photo" accept="image/*" class="d-none">
                                    </div>
                                    <p class="text-center mt-2 small text-muted">Click on the photo to upload</p>
                                </div>

                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input type="text" class="form-control" id="firstName" name="firstName" placeholder="First Name" required>
                                            <label for="firstName"><i class="fas fa-user-circle me-2"></i>First Name</label>
                                            <div class="invalid-feedback">Please provide your first name.</div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input type="text" class="form-control" id="lastName" name="lastName" placeholder="Last Name" required>
                                            <label for="lastName"><i class="fas fa-user-circle me-2"></i>Last Name</label>
                                            <div class="invalid-feedback">Please provide your last name.</div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input type="email" class="form-control" id="email" name="email" placeholder="Email Address" required>
                                            <label for="email"><i class="fas fa-envelope me-2"></i>Email Address</label>
                                            <div class="invalid-feedback">Please provide a valid email address.</div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input type="tel" class="form-control" id="phone" name="phone" placeholder="Phone Number">
                                            <label for="phone"><i class="fas fa-phone me-2"></i>Phone Number</label>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <div class="form-floating">
                                            <input type="text" class="form-control" id="position" name="position" placeholder="Professional Title" required>
                                            <label for="position"><i class="fas fa-briefcase me-2"></i>Professional Title</label>
                                            <div class="invalid-feedback">Please provide your current or desired professional title.</div>
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-floating">
                                            <textarea class="form-control" id="address" name="address" placeholder="Full Address" style="height: 100px"></textarea>
                                            <label for="address"><i class="fas fa-map-marker-alt me-2"></i>Full Address</label>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input type="text" class="form-control" id="website" name="website" placeholder="Personal Website">
                                            <label for="website"><i class="fas fa-globe me-2"></i>Personal Website</label>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input type="text" class="form-control" id="linkedin" name="linkedin" placeholder="LinkedIn Profile">
                                            <label for="linkedin"><i class="fab fa-linkedin me-2"></i>LinkedIn Profile</label>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <div class="form-floating">
                                            <textarea class="form-control" id="summary" name="summary" placeholder="Professional Summary" style="height: 150px"></textarea>
                                            <label for="summary"><i class="fas fa-comment me-2"></i>Professional Summary</label>
                                            <div class="form-text text-end"><span id="summaryCharCount">0</span>/500</div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Section Navigation -->
                                <div class="form-navigation-buttons d-flex justify-content-between mt-4 mb-2">
                                    <button type="button" class="btn btn-outline-secondary prev-section" disabled>
                                        <i class="fas fa-arrow-left me-2"></i>Previous
                                    </button>
                                    <button type="button" class="btn btn-outline-primary next-section" data-next="2">
                                        Next<i class="fas fa-arrow-right ms-2"></i>
                                    </button>
                                </div>
                            </div>

                            <!-- Education Section -->
                            <div class="form-section-page" id="section-2">
                                <h4 class="form-section-title">
                                    <i class="fas fa-graduation-cap"></i>
                                    Education
                                </h4>

                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle me-2"></i>
                                    Add your educational background, starting with the most recent.
                                </div>

                                <div id="educationEntries">
                                    <!-- Empty state -->
                                    <div class="empty-state" id="educationEmptyState">
                                        <div class="empty-state-icon">
                                            <i class="fas fa-graduation-cap"></i>
                                        </div>
                                        <h5>No education entries yet</h5>
                                        <p>Add your academic qualifications to enhance your CV</p>
                                        <button type="button" class="btn btn-primary" id="addFirstEducation">
                                            <i class="fas fa-plus me-2"></i>Add Education
                                        </button>
                                    </div>
                                </div>

                                <div class="text-center mb-4" id="addMoreEducationBtnContainer" style="display: none;">
                                    <button type="button" class="btn btn-outline-primary" id="addEducation">
                                        <i class="fas fa-plus me-2"></i>Add Another Education
                                    </button>
                                </div>

                                <!-- Section Navigation -->
                                <div class="form-navigation-buttons d-flex justify-content-between mt-4 mb-2">
                                    <button type="button" class="btn btn-outline-secondary prev-section" data-prev="1">
                                        <i class="fas fa-arrow-left me-2"></i>Previous
                                    </button>
                                    <button type="button" class="btn btn-outline-primary next-section" data-next="3">
                                        Next<i class="fas fa-arrow-right ms-2"></i>
                                    </button>
                                </div>
                            </div>

                            <!-- Experience Section -->
                            <div class="form-section-page" id="section-3">
                                <h4 class="form-section-title">
                                    <i class="fas fa-briefcase"></i>
                                    Work Experience
                                </h4>

                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle me-2"></i>
                                    Add your work experience, starting with the most recent.
                                </div>

                                <div id="experienceEntries">
                                    <!-- Empty state -->
                                    <div class="empty-state" id="experienceEmptyState">
                                        <div class="empty-state-icon">
                                            <i class="fas fa-briefcase"></i>
                                        </div>
                                        <h5>No experience entries yet</h5>
                                        <p>Add your work experience to showcase your professional background</p>
                                        <button type="button" class="btn btn-primary" id="addFirstExperience">
                                            <i class="fas fa-plus me-2"></i>Add Experience
                                        </button>
                                    </div>
                                </div>

                                <div class="text-center mb-4" id="addMoreExperienceBtnContainer" style="display: none;">
                                    <button type="button" class="btn btn-outline-primary" id="addExperience">
                                        <i class="fas fa-plus me-2"></i>Add Another Experience
                                    </button>
                                </div>

                                <!-- Section Navigation -->
                                <div class="form-navigation-buttons d-flex justify-content-between mt-4 mb-2">
                                    <button type="button" class="btn btn-outline-secondary prev-section" data-prev="2">
                                        <i class="fas fa-arrow-left me-2"></i>Previous
                                    </button>
                                    <button type="button" class="btn btn-outline-primary next-section" data-next="4">
                                        Next<i class="fas fa-arrow-right ms-2"></i>
                                    </button>
                                </div>
                            </div>

                            <!-- Skills Section -->
                            <div class="form-section-page" id="section-4">
                                <h4 class="form-section-title">
                                    <i class="fas fa-tools"></i>
                                    Skills
                                </h4>

                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle me-2"></i>
                                    Add skills that are relevant to the job you're applying for.
                                </div>

                                <div class="card shadow-sm mb-4">
                                    <div class="card-body">
                                        <div class="mb-3">
                                            <label for="skillInput" class="form-label">
                                                <i class="fas fa-star me-2"></i>Add Skills
                                            </label>
                                            <div class="input-group">
                                                <input type="text" class="form-control" id="skillInput" placeholder="Type a skill and press Enter">
                                                <button class="btn btn-outline-primary" type="button" id="addSkillBtn">
                                                    <i class="fas fa-plus"></i> Add
                                                </button>
                                            </div>
                                            <div class="form-text">Press Enter after typing each skill or click Add button</div>
                                        </div>

                                        <div id="skillsContainer" class="d-flex flex-wrap gap-2 mb-3">
                                            <!-- Skills will be added here via JavaScript -->
                                        </div>

                                        <div id="skillsEmptyState" class="empty-state" style="padding: 1.5rem;">
                                            <div class="empty-state-icon">
                                                <i class="fas fa-star"></i>
                                            </div>
                                            <h5>No skills added yet</h5>
                                            <p>Add skills that showcase your professional capabilities</p>
                                        </div>

                                        <div class="mt-3">
                                            <h6><i class="fas fa-lightbulb me-2"></i>Popular Skills</h6>
                                            <div class="d-flex flex-wrap gap-2 mt-2">
                                                <button type="button" class="btn btn-sm btn-outline-secondary quick-skill">JavaScript</button>
                                                <button type="button" class="btn btn-sm btn-outline-secondary quick-skill">Python</button>
                                                <button type="button" class="btn btn-sm btn-outline-secondary quick-skill">Java</button>
                                                <button type="button" class="btn btn-sm btn-outline-secondary quick-skill">HTML/CSS</button>
                                                <button type="button" class="btn btn-sm btn-outline-secondary quick-skill">SQL</button>
                                                <button type="button" class="btn btn-sm btn-outline-secondary quick-skill">React</button>
                                                <button type="button" class="btn btn-sm btn-outline-secondary quick-skill">Project Management</button>
                                                <button type="button" class="btn btn-sm btn-outline-secondary quick-skill">Communication</button>
                                                <button type="button" class="btn btn-sm btn-outline-secondary quick-skill">Problem Solving</button>
                                                <button type="button" class="btn btn-sm btn-outline-secondary quick-skill">Leadership</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Section Navigation -->
                                <div class="form-navigation-buttons d-flex justify-content-between mt-4 mb-2">
                                    <button type="button" class="btn btn-outline-secondary prev-section" data-prev="3">
                                        <i class="fas fa-arrow-left me-2"></i>Previous
                                    </button>
                                    <button type="button" class="btn btn-outline-primary next-section" data-next="5">
                                        Next<i class="fas fa-arrow-right ms-2"></i>
                                    </button>
                                </div>
                            </div>

                            <!-- Languages Section -->
                            <div class="form-section-page" id="section-5">
                                <h4 class="form-section-title">
                                    <i class="fas fa-language"></i>
                                    Languages
                                </h4>

                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle me-2"></i>
                                    Add languages you speak and your proficiency level.
                                </div>

                                <div class="card shadow-sm mb-4">
                                    <div class="card-body">
                                        <div class="row g-3 mb-3">
                                            <div class="col-md-6">
                                                <div class="form-floating">
                                                    <input type="text" class="form-control" id="languageInput" placeholder="Language">
                                                    <label for="languageInput"><i class="fas fa-language me-2"></i>Language</label>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-floating">
                                                    <select class="form-select" id="proficiencySelect">
                                                        <option value="" selected disabled>Select proficiency</option>
                                                        <option value="Native">Native</option>
                                                        <option value="Fluent">Fluent</option>
                                                        <option value="Advanced">Advanced</option>
                                                        <option value="Intermediate">Intermediate</option>
                                                        <option value="Basic">Basic</option>
                                                    </select>
                                                    <label for="proficiencySelect"><i class="fas fa-chart-bar me-2"></i>Proficiency</label>
                                                </div>
                                            </div>
                                            <div class="col-12 text-center">
                                                <button type="button" class="btn btn-outline-primary" id="addLanguageBtn">
                                                    <i class="fas fa-plus me-2"></i>Add Language
                                                </button>
                                            </div>
                                        </div>

                                        <div id="languagesContainer" class="d-flex flex-wrap gap-2 mb-3">
                                            <!-- Languages will be added here via JavaScript -->
                                        </div>

                                        <div id="languagesEmptyState" class="empty-state" style="padding: 1.5rem;">
                                            <div class="empty-state-icon">
                                                <i class="fas fa-language"></i>
                                            </div>
                                            <h5>No languages added yet</h5>
                                            <p>Add languages to showcase your communication abilities</p>
                                        </div>

                                        <div class="mt-3">
                                            <h6><i class="fas fa-lightbulb me-2"></i>Common Languages</h6>
                                            <div class="d-flex flex-wrap gap-2 mt-2">
                                                <button type="button" class="btn btn-sm btn-outline-secondary quick-language" data-lang="English" data-level="Fluent">English (Fluent)</button>
                                                <button type="button" class="btn btn-sm btn-outline-secondary quick-language" data-lang="French" data-level="Intermediate">French (Intermediate)</button>
                                                <button type="button" class="btn btn-sm btn-outline-secondary quick-language" data-lang="Spanish" data-level="Basic">Spanish (Basic)</button>
                                                <button type="button" class="btn btn-sm btn-outline-secondary quick-language" data-lang="Arabic" data-level="Native">Arabic (Native)</button>
                                                <button type="button" class="btn btn-sm btn-outline-secondary quick-language" data-lang="German" data-level="Advanced">German (Advanced)</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Section Navigation -->
                                <div class="form-navigation-buttons d-flex justify-content-between mt-4 mb-2">
                                    <button type="button" class="btn btn-outline-secondary prev-section" data-prev="4">
                                        <i class="fas fa-arrow-left me-2"></i>Previous
                                    </button>
                                    <button type="button" class="btn btn-outline-primary next-section" data-next="6">
                                        Next<i class="fas fa-arrow-right ms-2"></i>
                                    </button>
                                </div>
                            </div>

                            <!-- Additional Information Section -->
                            <div class="form-section-page" id="section-6">
                                <h4 class="form-section-title">
                                    <i class="fas fa-plus-circle"></i>
                                    Additional Information
                                </h4>

                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle me-2"></i>
                                    Add any other information that might be relevant to your CV.
                                </div>

                                <div class="row g-3">
                                    <div class="col-12">
                                        <div class="card shadow-sm mb-4">
                                            <div class="card-header">
                                                <h5 class="mb-0"><i class="fas fa-certificate me-2"></i>Certifications</h5>
                                            </div>
                                            <div class="card-body">
                                                <div id="certificationsContainer">
                                                    <div class="mb-3">
                                                        <div class="input-group">
                                                            <input type="text" class="form-control" id="certificationInput" placeholder="e.g. AWS Certified Developer">
                                                            <button type="button" class="btn btn-outline-primary" id="addCertificationBtn">
                                                                <i class="fas fa-plus"></i> Add
                                                            </button>
                                                        </div>
                                                    </div>

                                                    <div id="certificationsList" class="list-group mb-3">
                                                        <!-- Certifications will be added here via JavaScript -->
                                                    </div>

                                                    <div id="certificationsEmptyState" class="empty-state" style="padding: 1rem;">
                                                        <div class="empty-state-icon">
                                                            <i class="fas fa-certificate"></i>
                                                        </div>
                                                        <h6>No certifications added</h6>
                                                        <p class="small">Add professional certifications to strengthen your CV</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="card shadow-sm h-100">
                                            <div class="card-header">
                                                <h5 class="mb-0"><i class="fas fa-award me-2"></i>Achievements</h5>
                                            </div>
                                            <div class="card-body">
                                                <div class="form-floating">
                                                    <textarea class="form-control" id="achievements" name="achievements" placeholder="Your Achievements" style="height: 150px"></textarea>
                                                    <label for="achievements">Noteworthy Achievements</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="card shadow-sm h-100">
                                            <div class="card-header">
                                                <h5 class="mb-0"><i class="fas fa-users me-2"></i>Interests</h5>
                                            </div>
                                            <div class="card-body">
                                                <div class="form-floating">
                                                    <textarea class="form-control" id="interests" name="interests" placeholder="Your Interests" style="height: 150px"></textarea>
                                                    <label for="interests">Personal Interests & Hobbies</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-12">
                                        <div class="card shadow-sm">
                                            <div class="card-header">
                                                <h5 class="mb-0"><i class="fas fa-link me-2"></i>References</h5>
                                            </div>
                                            <div class="card-body">
                                                <div class="mb-3">
                                                    <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" id="includeReferences" name="includeReferences">
                                                        <label class="form-check-label" for="includeReferences">
                                                            Include references in my CV
                                                        </label>
                                                    </div>
                                                </div>

                                                <div id="referencesSection" style="display: none;">
                                                    <div class="row g-3">
                                                        <div class="col-md-6">
                                                            <div class="form-floating">
                                                                <input type="text" class="form-control" id="referenceName" name="referenceName" placeholder="Reference Name">
                                                                <label for="referenceName"><i class="fas fa-user-tie me-2"></i>Name</label>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-floating">
                                                                <input type="text" class="form-control" id="referencePosition" name="referencePosition" placeholder="Reference Position">
                                                                <label for="referencePosition"><i class="fas fa-briefcase me-2"></i>Position</label>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-floating">
                                                                <input type="text" class="form-control" id="referenceCompany" name="referenceCompany" placeholder="Company">
                                                                <label for="referenceCompany"><i class="fas fa-building me-2"></i>Company</label>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-floating">
                                                                <input type="email" class="form-control" id="referenceEmail" name="referenceEmail" placeholder="Email">
                                                                <label for="referenceEmail"><i class="fas fa-envelope me-2"></i>Email</label>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-floating">
                                                                <input type="tel" class="form-control" id="referencePhone" name="referencePhone" placeholder="Phone">
                                                                <label for="referencePhone"><i class="fas fa-phone me-2"></i>Phone</label>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="mt-3">
                                                        <div class="form-check">
                                                            <input class="form-check-input" type="checkbox" id="referenceUponRequest" name="referenceUponRequest">
                                                            <label class="form-check-label" for="referenceUponRequest">
                                                                Or just write "References available upon request"
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Section Navigation -->
                                <div class="form-navigation-buttons d-flex justify-content-between mt-4 mb-2">
                                    <button type="button" class="btn btn-outline-secondary prev-section" data-prev="5">
                                        <i class="fas fa-arrow-left me-2"></i>Previous
                                    </button>
                                    <button type="button" class="btn btn-submit-review btn-primary">
                                        Review CV<i class="fas fa-check ms-2"></i>
                                    </button>
                                </div>
                            </div>

                            <!-- Review Section -->
                            <div class="form-section-page" id="section-7">
                                <h4 class="form-section-title">
                                    <i class="fas fa-check-circle"></i>
                                    Review Your CV
                                </h4>

                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle me-2"></i>
                                    Please review your CV information before generating the final document.
                                </div>

                                <div id="reviewContent" class="p-3 border rounded bg-light">
                                    <!-- Review content will be generated here -->
                                </div>

                                <!-- Template Selection -->
                                <div class="mt-5 mb-4">
                                    <h4 class="form-section-title">
                                        <i class="fas fa-palette"></i>
                                        Choose Template
                                    </h4>
                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <div class="card h-100 template-card" id="greenTemplateCard">
                                                <div class="card-header bg-success text-white">
                                                    <h5 class="mb-0">Green Professional Template</h5>
                                                </div>
                                                <div class="card-body text-center">
                                                    <img src="{{ asset('images/template_green.jpg') }}" class="img-fluid mb-3" style="max-height: 200px;" alt="Green Template Preview">
                                                    <div class="form-check">
                                                        <input class="form-check-input" type="radio" name="template" id="template-green" value="green" checked>
                                                        <label class="form-check-label" for="template-green">
                                                            Select Green Template
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <div class="card h-100 template-card" id="blueTemplateCard">
                                                <div class="card-header bg-primary text-white">
                                                    <h5 class="mb-0">Blue Modern Template</h5>
                                                </div>
                                                <div class="card-body text-center">
                                                    <img src="{{ asset('images/template_blue.jpg') }}" class="img-fluid mb-3" style="max-height: 200px;" alt="Blue Template Preview">
                                                    <div class="form-check">
                                                        <input class="form-check-input" type="radio" name="template" id="template-blue" value="blue">
                                                        <label class="form-check-label" for="template-blue">
                                                            Select Blue Template
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Hidden field for photo data -->
                                <input type="hidden" name="photoData" id="photoDataField" value="">

                                <!-- Section Navigation -->
                                <div class="form-navigation-buttons d-flex justify-content-between mt-4 mb-2">
                                    <button type="button" class="btn btn-outline-secondary prev-section" data-prev="6">
                                        <i class="fas fa-arrow-left me-2"></i>Previous
                                    </button>
                                    <button id="generateBtn" type="button" class="btn btn-primary pulse">
                                        <i class="fas fa-file-download me-2"></i>Generate CV
                                    </button>
                                </div>

                                <!-- Status message -->
                                <div id="statusMessage" class="alert alert-info mt-3" style="display: none;">
                                    <i class="fas fa-spinner fa-spin me-2"></i>
                                    Generating your CV... Please wait.
                                </div>

                                <!-- Alternative methods -->
                                <div class="mt-4 p-3 border rounded bg-light">
                                    <h5>Other Download Options</h5>
                                    <p class="small text-muted">If you're having trouble with the main download button, try these alternatives:</p>
                                    <div class="d-flex flex-wrap gap-2">
                                        <button type="button" class="btn btn-success" id="directDownloadBtn">
                                            <i class="fas fa-file-download me-1"></i> Direct Download
                                        </button>
                                        <button type="button" class="btn btn-info" id="simpleDownloadBtn">
                                            <i class="fas fa-file-alt me-1"></i> Simple CV
                                        </button>
                                        <a href="/cv-generator/test-pdf" class="btn btn-warning" target="_blank">
                                            <i class="fas fa-vial me-1"></i> Test PDF System
                                        </a>
                                    </div>
                                </div>

                                <!-- Debug information in development -->
                                <div class="mt-3 p-2 border rounded border-danger">
                                    <details>
                                        <summary class="text-danger"><i class="fas fa-bug me-1"></i> Debug Tools</summary>
                                        <div class="mt-2">
                                            <button type="button" class="btn btn-sm btn-outline-danger me-1" id="viewFormDataBtn">
                                                View Form Data
                                            </button>
                                            <a href="/cv-generator/generate?debug=1" class="btn btn-sm btn-outline-danger me-1" target="_blank">
                                                View HTML Template
                                            </a>
                                            <button type="button" class="btn btn-sm btn-outline-danger" id="clearCacheBtn">
                                                Clear Local Storage
                                            </button>
                                        </div>
                                    </details>
                                </div>
                            </div>
                        </div>

                        <!-- Preview Button (always visible) -->
                        <div class="text-center mt-4">
                            <button type="button" class="btn btn-outline-secondary btn-preview">
                                <i class="fas fa-file-invoice me-2"></i>Preview CV
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- CV Preview Panel -->
    <div class="cv-preview" id="cvPreview">
        <button type="button" class="preview-close" id="closePreview">&times;</button>
        <div class="text-center mb-4">
            <h4><i class="fas fa-file-invoice me-2"></i>CV Preview</h4>
            <div class="small text-muted">This is how your CV will appear when generated</div>
        </div>
        <div id="previewContent" class="preview-content">
            <!-- Preview content will be generated here -->
        </div>
    </div>

    <!-- Education Entry Template (hidden) -->
    <template id="educationEntryTemplate">
        <div class="education-entry card mb-4 shadow-sm slide-in">
            <div class="card-header bg-light d-flex align-items-center">
                <span class="drag-handle me-2">
                    <i class="fas fa-grip-vertical"></i>
                </span>
                <h5 class="mb-0 education-title">New Education Entry</h5>
                <button type="button" class="btn-close ms-auto remove-education" aria-label="Remove"></button>
            </div>

            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="text" class="form-control institution-input" name="education[institution][]" placeholder="University or School Name" data-required="true">
                            <label><i class="fas fa-university me-2"></i>Institution</label>
                            <div class="invalid-feedback">Please provide an institution name.</div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="text" class="form-control degree-input" name="education[degree][]" placeholder="Bachelor, Master, Ph.D, Certificate, etc." data-required="true">
                            <label><i class="fas fa-scroll me-2"></i>Degree/Certificate</label>
                            <div class="invalid-feedback">Please provide a degree or certificate.</div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="text" class="form-control field-input" name="education[field][]" placeholder="e.g. Computer Science">
                            <label><i class="fas fa-book me-2"></i>Field of Study</label>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="text" class="form-control location-input" name="education[location][]" placeholder="City, Country">
                            <label><i class="fas fa-map-marker-alt me-2"></i>Location</label>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="text" class="form-control date-input start-date-input" name="education[startDate][]" placeholder="Select start date" data-required="true">
                            <label><i class="fas fa-calendar-alt me-2"></i>Start Date</label>
                            <div class="invalid-feedback">Please provide a start date.</div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="input-group end-date-group">
                            <div class="form-floating flex-grow-1">
                                <input type="text" class="form-control date-input end-date-input" name="education[endDate][]" placeholder="Select end date">
                                <label><i class="fas fa-calendar-check me-2"></i>End Date</label>
                            </div>
                            <div class="input-group-text">
                                <div class="form-check form-switch m-0">
                                    <input class="form-check-input current-checkbox" type="checkbox" role="switch" name="education[current][]">
                                    <label class="form-check-label">Current</label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-12">
                        <div class="form-floating">
                            <textarea class="form-control description-input" name="education[description][]" rows="3" placeholder="Provide details about your studies, achievements, etc." style="height: 100px"></textarea>
                            <label><i class="fas fa-align-left me-2"></i>Description</label>
                            <div class="form-text text-end"><span class="char-count">0</span>/500</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </template>

    <!-- Experience Entry Template (hidden) -->
    <template id="experienceEntryTemplate">
        <div class="experience-entry card mb-4 shadow-sm slide-in">
            <div class="card-header bg-light d-flex align-items-center">
                <span class="drag-handle me-2">
                    <i class="fas fa-grip-vertical"></i>
                </span>
                <h5 class="mb-0 experience-title">New Experience Entry</h5>
                <button type="button" class="btn-close ms-auto remove-experience" aria-label="Remove"></button>
            </div>

            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="text" class="form-control company-input" name="experience[company][]" placeholder="Company Name" data-required="true">
                            <label><i class="fas fa-building me-2"></i>Company</label>
                            <div class="invalid-feedback">Please provide a company name.</div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="text" class="form-control position-input" name="experience[position][]" placeholder="Your job title" data-required="true">
                            <label><i class="fas fa-id-badge me-2"></i>Position</label>
                            <div class="invalid-feedback">Please provide your job title.</div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="text" class="form-control location-input" name="experience[location][]" placeholder="City, Country">
                            <label><i class="fas fa-map-marker-alt me-2"></i>Location</label>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="text" class="form-control date-input start-date-input" name="experience[startDate][]" placeholder="Select start date" data-required="true">
                            <label><i class="fas fa-calendar-alt me-2"></i>Start Date</label>
                            <div class="invalid-feedback">Please provide a start date.</div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="input-group end-date-group">
                            <div class="form-floating flex-grow-1">
                                <input type="text" class="form-control date-input end-date-input" name="experience[endDate][]" placeholder="Select end date">
                                <label><i class="fas fa-calendar-check me-2"></i>End Date</label>
                            </div>
                            <div class="input-group-text">
                                <div class="form-check form-switch m-0">
                                    <input class="form-check-input current-checkbox" type="checkbox" role="switch" name="experience[current][]">
                                    <label class="form-check-label">Current</label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-12">
                        <div class="form-floating">
                            <textarea class="form-control description-input" name="experience[description][]" rows="3" placeholder="Describe your responsibilities and achievements" style="height: 120px"></textarea>
                            <label><i class="fas fa-align-left me-2"></i>Description</label>
                            <div class="form-text text-end"><span class="char-count">0</span>/500</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </template>

    <!-- Sample data for autofill (hidden) -->
    <div id="sampleData" data-sample="{{ sampleData|json_encode }}" style="display:none;"></div>

    <!-- Hidden iframe for PDF downloads -->
    <iframe id="pdfDownloadFrame" name="pdfDownloadFrame" style="display:none;"></iframe>

    <style>
        :root {
            /* Utilisation des couleurs cohÃ©rentes avec votre template principal */
            --primary-color: #ee3124; /* Rouge primaire ESPRIT */
            --primary-light: rgba(238, 49, 36, 0.1);
            --primary-shadow: rgba(238, 49, 36, 0.25);
            --secondary-color: #2d3748; /* Charcoal */
            --accent-color: #718096; /* Slate Gray */
            --light-bg: #faf7f2; /* Light Beige */
            --white-bg: #ffffff; /* White */
            --text-dark: #1a202c; /* Dark Text */
            --text-medium: #2d3748; /* Charcoal pour texte moyen */
            --text-light: #718096; /* Slate Gray */
            --border-color: #e2e8f0;
            --card-shadow: rgba(45, 55, 72, 0.1);
            --font-family-sans-serif: 'Poppins', sans-serif;
        }

        .template-sidebar {
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            width: 280px;
            background-color: var(--white-bg);
            box-shadow: 2px 0 10px var(--card-shadow);
            z-index: 1000;
            overflow-y: auto;
            transition: transform 0.3s ease-in-out;
            font-family: var(--font-family-sans-serif);
        }

        .template-sidebar.collapsed {
            transform: translateX(-280px);
        }

        .sidebar-header {
            padding: 1.5rem 1rem;
            background-color: var(--secondary-color);
            color: white;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .sidebar-header h3 {
            font-size: 1.25rem;
            margin: 0;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .sidebar-header .close-sidebar {
            background: none;
            border: none;
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
            padding: 0;
            display: none;
        }

        .sidebar-content {
            padding: 1.5rem 1rem;
        }

        .sidebar-section {
            margin-bottom: 2rem;
        }

        .sidebar-section-title {
            font-size: 1rem;
            font-weight: 600;
            color: var(--text-dark);
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid var(--border-color);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .template-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .template-item {
            margin-bottom: 1rem;
            border-radius: 0.5rem;
            overflow: hidden;
            box-shadow: 0 2px 8px var(--card-shadow);
            transition: transform 0.2s ease, box-shadow 0.2s ease;
            cursor: pointer;
            position: relative;
            background-color: var(--light-bg);
        }

        .template-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 4px 12px var(--card-shadow);
        }

        .template-item.selected {
            border: 2px solid var(--primary-color);
        }

        .template-item.selected::after {
            content: '\f00c';
            font-family: 'Font Awesome 6 Free';
            font-weight: 900;
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: var(--primary-color);
            color: white;
            width: 24px;
            height: 24px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.8rem;
        }

        .template-thumbnail {
            width: 100%;
            height: 150px;
            object-fit: cover;
            border-radius: 0.5rem 0.5rem 0 0;
            display: block;
        }

        .template-info {
            padding: 0.75rem 1rem;
            background-color: white;
        }

        .template-name {
            font-weight: 600;
            font-size: 0.95rem;
            margin: 0 0 0.25rem;
            color: var(--text-dark);
        }

        .template-category {
            font-size: 0.8rem;
            color: var(--text-light);
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.4rem;
        }

        /* Style pour les tags des diffÃ©rentes catÃ©gories */
        .category-tag {
            display: inline-flex;
            align-items: center;
            padding: 0.15rem 0.5rem;
            font-size: 0.7rem;
            border-radius: 20px;
            margin-top: 0.5rem;
            font-weight: 500;
        }

        .tag-modern {
            background-color: rgba(79, 209, 197, 0.15);
            color: #0694a2;
        }

        .tag-classic {
            background-color: rgba(102, 126, 234, 0.15);
            color: #5145cd;
        }

        .tag-creative {
            background-color: rgba(245, 158, 11, 0.15);
            color: #c05621;
        }

        .tag-professional {
            background-color: rgba(16, 185, 129, 0.15);
            color: #057a55;
        }

        .tag-academic {
            background-color: rgba(236, 72, 153, 0.15);
            color: #9d174d;
        }

        .tag-engineering {
            background-color: rgba(37, 99, 235, 0.15);
            color: #1e429f;
        }

        .tag-business {
            background-color: rgba(220, 38, 38, 0.15);
            color: #9b1c1c;
        }

        .filters-section {
            margin-bottom: 1.5rem;
        }

        .filter-group {
            margin-bottom: 1rem;
        }

        .filter-label {
            display: block;
            font-size: 0.9rem;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: var(--text-medium);
        }

        .filter-options {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
        }

        .filter-option {
            padding: 0.35rem 0.75rem;
            font-size: 0.8rem;
            border-radius: 20px;
            background-color: var(--light-bg);
            color: var(--text-medium);
            border: 1px solid var(--border-color);
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .filter-option:hover {
            background-color: var(--primary-light);
            color: var(--primary-color);
        }

        .filter-option.active {
            background-color: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }

        /* Bouton Toggle Sidebar (visible uniquement sur mobile) */
        .sidebar-toggle {
            position: fixed;
            top: 1rem;
            left: 1rem;
            background-color: var(--primary-color);
            color: white;
            border: none;
            width: 45px;
            height: 45px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            cursor: pointer;
            z-index: 1001;
            box-shadow: 0 2px 8px var(--primary-shadow);
            display: none;
        }

        .sidebar-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 999;
            display: none;
        }

        /* Contenu principal - dÃ©calÃ© par la sidebar */
        .main-content {
            margin-left: 280px;
            transition: margin-left 0.3s ease;
        }

        .main-content.expanded {
            margin-left: 0;
        }

        /* Responsive */
        @media (max-width: 992px) {
            .template-sidebar {
                transform: translateX(-280px);
            }

            .template-sidebar.active {
                transform: translateX(0);
            }

            .sidebar-toggle {
                display: flex;
            }

            .sidebar-overlay.active {
                display: block;
            }

            .sidebar-header .close-sidebar {
                display: block;
            }

            .main-content {
                margin-left: 0;
            }
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // RÃ©cupÃ©ration des Ã©lÃ©ments DOM
            const sidebar = document.getElementById('templateSidebar');
            const mainContent = document.querySelector('.main-content');
            const sidebarToggle = document.getElementById('sidebarToggle');
            const closeSidebar = document.getElementById('closeSidebar');
            const sidebarOverlay = document.getElementById('sidebarOverlay');
            const templateItems = document.querySelectorAll('.template-item');
            const filterOptions = document.querySelectorAll('.filter-option');

            // Fonction pour afficher/masquer la sidebar sur mobile
            function toggleSidebar() {
                sidebar.classList.toggle('active');
                sidebarOverlay.classList.toggle('active');
                document.body.classList.toggle('sidebar-open');
            }

            // Ã‰couteurs d'Ã©vÃ©nements pour la sidebar
            if (sidebarToggle) {
                sidebarToggle.addEventListener('click', toggleSidebar);
            }

            if (closeSidebar) {
                closeSidebar.addEventListener('click', toggleSidebar);
            }

            if (sidebarOverlay) {
                sidebarOverlay.addEventListener('click', toggleSidebar);
            }

            // SÃ©lection d'un template
            templateItems.forEach(item => {
                item.addEventListener('click', function() {
                    // Supprimer la classe selected de tous les templates
                    templateItems.forEach(el => {
                        el.classList.remove('selected');
                    });

                    // Ajouter la classe selected au template cliquÃ©
                    this.classList.add('selected');

                    // RÃ©cupÃ©rer l'identifiant du template sÃ©lectionnÃ©
                    const templateId = this.getAttribute('data-template');

                    // Stocker la sÃ©lection (dans localStorage ou autre)
                    localStorage.setItem('selectedTemplate', templateId);

                    // DÃ©clencher un Ã©vÃ©nement personnalisÃ© pour informer d'autres scripts de la sÃ©lection
                    const event = new CustomEvent('templateSelected', { detail: { templateId: templateId } });
                    document.dispatchEvent(event);

                    // Sur mobile, fermer la sidebar aprÃ¨s la sÃ©lection
                    if (window.innerWidth < 992) {
                        toggleSidebar();
                    }
                });
            });

            // Filtrage des templates
            filterOptions.forEach(option => {
                option.addEventListener('click', function() {
                    const filterValue = this.getAttribute('data-filter');
                    const filterGroup = this.closest('.filter-group');

                    // Supprimer la classe active des autres options du mÃªme groupe
                    if (filterGroup) {
                        const groupOptions = filterGroup.querySelectorAll('.filter-option');
                        groupOptions.forEach(opt => {
                            opt.classList.remove('active');
                        });
                    }

                    // Ajouter la classe active Ã  l'option cliquÃ©e
                    this.classList.add('active');

                    // Filtrer les templates
                    filterTemplates();
                });
            });

            // Fonction pour filtrer les templates en fonction des options sÃ©lectionnÃ©es
            function filterTemplates() {
                const activeFilters = [];

                // RÃ©cupÃ©rer tous les filtres actifs
                document.querySelectorAll('.filter-option.active').forEach(option => {
                    const filter = option.getAttribute('data-filter');
                    if (filter !== 'all') {
                        activeFilters.push(filter);
                    }
                });

                // Si aucun filtre actif, ou seulement des "all", afficher tous les templates
                if (activeFilters.length === 0) {
                    templateItems.forEach(item => {
                        item.style.display = 'block';
                    });
                    return;
                }

                // Appliquer les filtres
                templateItems.forEach(item => {
                    const categories = item.getAttribute('data-category').split(' ');
                    let shouldShow = false;

                    // Si un template correspond Ã  au moins un des filtres actifs, l'afficher
                    for (let filter of activeFilters) {
                        if (categories.includes(filter)) {
                            shouldShow = true;
                            break;
                        }
                    }

                    item.style.display = shouldShow ? 'block' : 'none';
                });
            }

            // VÃ©rifier s'il y a un template sÃ©lectionnÃ© en localStorage
            const savedTemplate = localStorage.getItem('selectedTemplate');
            if (savedTemplate) {
                const template = document.querySelector(`.template-item[data-template="${savedTemplate}"]`);
                if (template) {
                    template.classList.add('selected');
                }
            }

            // Initialiser avec tous les templates visibles
            filterOptions[0].classList.add('active'); // Activer le filtre "Tous" par dÃ©faut

            // Ajouter un Ã©couteur d'Ã©vÃ©nement pour la sÃ©lection du template
            document.addEventListener('templateSelected', function(e) {
                // Si vous avez un formulaire avec un champ cachÃ© pour le template
                const cvForm = document.getElementById('cvForm');
                if (cvForm) {
                    // VÃ©rifier si le champ cachÃ© existe dÃ©jÃ 
                    let templateInput = document.getElementById('templateInput');
                    if (!templateInput) {
                        // CrÃ©er le champ s'il n'existe pas
                        templateInput = document.createElement('input');
                        templateInput.type = 'hidden';
                        templateInput.id = 'templateInput';
                        templateInput.name = 'template';
                        cvForm.appendChild(templateInput);
                    }
                    // Mettre Ã  jour la valeur
                    templateInput.value = e.detail.templateId;

                    // Si on est sur la page de revue, mettre Ã  jour la sÃ©lection visuelle
                    // Cette partie est synchronisÃ©e avec votre fonctionnalitÃ© existante de sÃ©lection de template
                    if (e.detail.templateId === 'template1' || e.detail.templateId === 'template5') {
                        document.getElementById('template-green').checked = true;
                    } else if (e.detail.templateId === 'template2' || e.detail.templateId === 'template6') {
                        document.getElementById('template-blue').checked = true;
                    }

                    // Afficher un message de confirmation pour l'utilisateur (optionnel)
                    console.log('Template sÃ©lectionnÃ©:', e.detail.templateId);
                }
            });
        });
    </script>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <!-- Modern Libraries -->
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.14.0/Sortable.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Modern Components Classes

            // Modern Stepper Component
            class CVStepper {
                constructor(element, steps, currentStep) {
                    this.element = element;
                    this.steps = steps;
                    this.currentStep = currentStep;
                    this.render();
                }

                render() {
                    const stepperWrapper = document.createElement('div');
                    stepperWrapper.className = 'cv-stepper';

                    this.steps.forEach((step, index) => {
                        const stepElement = document.createElement('div');
                        stepElement.className = `stepper-step ${index + 1 === this.currentStep ? 'active' : ''}
                            ${index + 1 < this.currentStep ? 'completed' : ''}`;

                        const stepNumber = document.createElement('div');
                        stepNumber.className = 'step-number';
                        stepNumber.innerHTML = index + 1 < this.currentStep ?
                            '<i class="fas fa-check"></i>' : (index + 1);

                        const stepLabel = document.createElement('div');
                        stepLabel.className = 'step-label';
                        stepLabel.textContent = step;

                        stepElement.appendChild(stepNumber);
                        stepElement.appendChild(stepLabel);

                        stepperWrapper.appendChild(stepElement);

                        if (index < this.steps.length - 1) {
                            const connector = document.createElement('div');
                            connector.className = `step-connector ${index + 1 < this.currentStep ? 'completed' : ''}`;
                            stepperWrapper.appendChild(connector);
                        }
                    });

                    this.element.innerHTML = '';
                    this.element.appendChild(stepperWrapper);
                }

                updateStep(stepNumber) {
                    this.currentStep = stepNumber;
                    this.render();
                }
            }

            // Skills Autocomplete Component
            class SkillAutocomplete {
                constructor(inputElement, skillsArray) {
                    this.input = inputElement;
                    this.skills = skillsArray;
                    this.suggestionsContainer = document.createElement('div');
                    this.suggestionsContainer.className = 'skill-suggestions';
                    this.input.parentNode.insertBefore(this.suggestionsContainer, this.input.nextSibling);

                    this.setupEventListeners();
                }

                setupEventListeners() {
                    // Input event to show suggestions
                    this.input.addEventListener('input', () => {
                        const value = this.input.value.toLowerCase();
                        if (value.length < 2) {
                            this.hideSuggestions();
                            return;
                        }

                        const filteredSkills = this.skills.filter(skill =>
                            skill.toLowerCase().includes(value)
                        ).slice(0, 5); // Limit to 5 suggestions

                        this.showSuggestions(filteredSkills);
                    });

                    // Blur event to hide suggestions when clicking elsewhere
                    document.addEventListener('click', (e) => {
                        if (e.target !== this.input && !this.suggestionsContainer.contains(e.target)) {
                            this.hideSuggestions();
                        }
                    });
                }

                showSuggestions(suggestions) {
                    if (suggestions.length === 0) {
                        this.hideSuggestions();
                        return;
                    }

                    this.suggestionsContainer.innerHTML = '';

                    suggestions.forEach(skill => {
                        const item = document.createElement('div');
                        item.className = 'suggestion-item';
                        item.textContent = skill;

                        item.addEventListener('click', () => {
                            this.input.value = skill;
                            this.hideSuggestions();
                            // Trigger add skill function if exists
                            if (typeof addSkill === 'function') {
                                addSkill(skill);
                                this.input.value = '';
                            }
                        });

                        this.suggestionsContainer.appendChild(item);
                    });

                    this.suggestionsContainer.style.display = 'block';

                    // Position the suggestions dropdown
                    const inputRect = this.input.getBoundingClientRect();
                    this.suggestionsContainer.style.width = `${inputRect.width}px`;
                    this.suggestionsContainer.style.top = `${inputRect.bottom}px`;
                    this.suggestionsContainer.style.left = `${inputRect.left}px`;
                }

                hideSuggestions() {
                    this.suggestionsContainer.style.display = 'none';
                }
            }

            // Photo Upload with Preview and Cropping
            class PhotoUpload {
                constructor(inputElement, previewElement, options = {}) {
                    this.input = inputElement;
                    this.preview = previewElement;
                    this.options = {
                        aspectRatio: 1,
                        cropable: true,
                        maxSize: 2, // MB
                        ...options
                    };

                    this.cropper = null;
                    this.setupEventListeners();
                }

                setupEventListeners() {
                    // Setup click handler for preview to trigger file input
                    const photoWrapper = this.preview.closest('.profile-photo-wrapper');
                    if (photoWrapper) {
                        photoWrapper.addEventListener('click', () => {
                            this.input.click();
                        });
                    }

                    this.input.addEventListener('change', this.handleFileSelect.bind(this));

                    // Setup drag and drop
                    const dropArea = this.preview.closest('.profile-photo-container') || this.preview.parentNode;

                    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                        dropArea.addEventListener(eventName, this.preventDefaults, false);
                    });

                    ['dragenter', 'dragover'].forEach(eventName => {
                        dropArea.addEventListener(eventName, () => {
                            dropArea.classList.add('highlight');
                        }, false);
                    });

                    ['dragleave', 'drop'].forEach(eventName => {
                        dropArea.addEventListener(eventName, () => {
                            dropArea.classList.remove('highlight');
                        }, false);
                    });

                    dropArea.addEventListener('drop', (e) => {
                        const dt = e.dataTransfer;
                        const files = dt.files;
                        if (files.length) {
                            this.handleFiles(files);
                        }
                    }, false);
                }

                preventDefaults(e) {
                    e.preventDefault();
                    e.stopPropagation();
                }

                handleFileSelect(e) {
                    if (e.target.files.length) {
                        this.handleFiles(e.target.files);
                    }
                }

                handleFiles(files) {
                    const file = files[0];

                    // Check file size
                    if (file.size > this.options.maxSize * 1024 * 1024) {
                        alert(`File is too big. Max size is ${this.options.maxSize}MB`);
                        return;
                    }

                    // Check file type
                    if (!file.type.match('image.*')) {
                        alert('Only image files are allowed');
                        return;
                    }

                    const reader = new FileReader();

                    reader.onload = (e) => {
                        if (this.options.cropable && typeof Cropper !== 'undefined') {
                            this.initCropper(e.target.result);
                        } else {
                            this.preview.src = e.target.result;
                            this.saveToLocalStorage(e.target.result);
                        }
                    };

                    reader.readAsDataURL(file);
                }

                initCropper(imageData) {
                    // Create modal for cropping
                    const modalHTML = `
                        <div class="photo-crop-modal">
                            <div class="photo-crop-content">
                                <div class="photo-crop-header">
                                    <h4>Crop Your Photo</h4>
                                    <button type="button" class="crop-close-btn">&times;</button>
                                </div>
                                <div class="photo-crop-body">
                                    <img src="${imageData}" id="crop-image">
                                </div>
                                <div class="photo-crop-footer">
                                    <button type="button" class="btn btn-secondary crop-cancel-btn">Cancel</button>
                                    <button type="button" class="btn btn-primary crop-save-btn">Save</button>
                                </div>
                            </div>
                        </div>
                    `;

                    // Add modal to body
                    const modalContainer = document.createElement('div');
                    modalContainer.innerHTML = modalHTML;
                    document.body.appendChild(modalContainer);

                    const modal = modalContainer.querySelector('.photo-crop-modal');
                    const cropImage = document.getElementById('crop-image');
                    const closeBtn = modal.querySelector('.crop-close-btn');
                    const cancelBtn = modal.querySelector('.crop-cancel-btn');
                    const saveBtn = modal.querySelector('.crop-save-btn');

                    // Show modal
                    modal.style.display = 'flex';

                    // Initialize cropper
                    this.cropper = new Cropper(cropImage, {
                        aspectRatio: this.options.aspectRatio,
                        viewMode: 1,
                        autoCropArea: 1
                    });

                    // Close handlers
                    const closeCropper = () => {
                        if (this.cropper) {
                            this.cropper.destroy();
                            this.cropper = null;
                        }
                        document.body.removeChild(modalContainer);
                    };

                    closeBtn.addEventListener('click', closeCropper);
                    cancelBtn.addEventListener('click', closeCropper);

                    // Save handler
                    saveBtn.addEventListener('click', () => {
                        const canvas = this.cropper.getCroppedCanvas({
                            width: 300,
                            height: 300
                        });

                        const croppedImageData = canvas.toDataURL('image/jpeg');
                        this.preview.src = croppedImageData;
                        this.saveToLocalStorage(croppedImageData);

                        closeCropper();
                    });
                }

                saveToLocalStorage(imageData) {
                    // Save to localStorage or hidden field
                    localStorage.setItem('cvProfilePhoto', imageData);

                    // Update hidden field if exists
                    const photoDataField = document.getElementById('photoDataField');
                    if (photoDataField) {
                        photoDataField.value = imageData;
                    }

                    // Trigger preview update if needed
                    const previewPhoto = document.querySelector('.preview-profile-photo');
                    if (previewPhoto) {
                        previewPhoto.src = imageData;
                    }
                }
            }

            // Section Sorter for Drag and Drop
            class SectionSorter {
                constructor(containerSelector, itemSelector, updateCallback) {
                    this.container = document.querySelector(containerSelector);
                    if (!this.container) return;

                    this.items = Array.from(this.container.querySelectorAll(itemSelector));
                    this.updateCallback = updateCallback;

                    this.initSortable();
                }

                initSortable() {
                    this.sortable = new Sortable(this.container, {
                        animation: 150,
                        ghostClass: 'sortable-ghost',
                        chosenClass: 'sortable-chosen',
                        dragClass: 'sortable-drag',
                        handle: '.drag-handle',
                        onEnd: (evt) => {
                            if (typeof this.updateCallback === 'function') {
                                this.updateCallback(evt);
                            }
                        }
                    });
                }

                updateItems() {
                    this.items = Array.from(this.container.querySelectorAll(itemSelector));
                }
            }

            // Interactive Template Preview
            class TemplatePreview {
                constructor() {
                    this.templateCards = document.querySelectorAll('.template-card');
                    this.previewContainer = document.getElementById('previewContent');
                    this.setupEventListeners();
                }

                setupEventListeners() {
                    this.templateCards.forEach(card => {
                        card.addEventListener('click', () => {
                            // Remove selected class from all cards
                            this.templateCards.forEach(c => {
                                c.classList.remove('selected-template');
                                c.classList.remove('selected-template-green');
                            });

                            // Add selected class to clicked card
                            const templateType = card.querySelector('input[type="radio"]').value;
                            if (templateType === 'green') {
                                card.classList.add('selected-template-green');
                            } else {
                                card.classList.add('selected-template');
                            }

                            // Check the radio button
                            card.querySelector('input[type="radio"]').checked = true;

                            // Update preview with selected template
                            this.updatePreview(templateType);
                        });
                    });
                }

                updatePreview(templateType) {
                    // Get form data for preview
                    const formData = new FormData(document.getElementById('cvForm'));
                    const previewData = {};

                    for (const [key, value] of formData.entries()) {
                        previewData[key] = value;
                    }

                    // Add template class to preview container
                    this.previewContainer.className = `preview-content template-${templateType}`;

                    // Update preview HTML based on template
                    if (templateType === 'green') {
                        this.renderGreenTemplate(previewData);
                    } else if (templateType === 'blue') {
                        this.renderBlueTemplate(previewData);
                    }
                }

                renderGreenTemplate(data) {
                    // Sample simplified green template preview
                    const photoSrc = localStorage.getItem('cvProfilePhoto') || '{{ asset('images/default-avatar.png') }}';

                    const html = `
                        <div class="green-template-preview">
                            <header class="preview-header">
                                <img src="${photoSrc}" class="preview-profile-photo" alt="Profile Photo">
                                <h2>${data.firstName || 'First'} ${data.lastName || 'Last'}</h2>
                                <p class="position">${data.position || 'Position'}</p>
                            </header>
                            <div class="preview-body">
                                <div class="preview-section">
                                    <h5><i class="fas fa-user"></i> Personal Information</h5>
                                    <p><i class="fas fa-envelope"></i> ${data.email || 'email@example.com'}</p>
                                    <p><i class="fas fa-phone"></i> ${data.phone || '+1234567890'}</p>
                                </div>

                                <div class="preview-section">
                                    <h5><i class="fas fa-graduation-cap"></i> Education</h5>
                                    <div class="preview-entry">
                                        <h6>Sample University</h6>
                                        <p>Degree in Field of Study</p>
                                    </div>
                                </div>

                                <div class="preview-section">
                                    <h5><i class="fas fa-briefcase"></i> Experience</h5>
                                    <div class="preview-entry">
                                        <h6>Sample Company</h6>
                                        <p>Job Title</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;

                    this.previewContainer.innerHTML = html;
                }

                renderBlueTemplate(data) {
                    // Sample simplified blue template preview
                    const photoSrc = localStorage.getItem('cvProfilePhoto') || '{{ asset('images/default-avatar.png') }}';

                    const html = `
                        <div class="blue-template-preview">
                            <div class="preview-sidebar">
                                <img src="${photoSrc}" class="preview-profile-photo" alt="Profile Photo">
                                <div class="sidebar-section">
                                    <h5>Contact</h5>
                                    <p><i class="fas fa-envelope"></i> ${data.email || 'email@example.com'}</p>
                                    <p><i class="fas fa-phone"></i> ${data.phone || '+1234567890'}</p>
                                </div>

                                <div class="sidebar-section">
                                    <h5>Skills</h5>
                                    <div class="preview-skills">
                                        <span class="skill-badge">Sample Skill</span>
                                        <span class="skill-badge">Another Skill</span>
                                    </div>
                                </div>
                            </div>

                            <div class="preview-main">
                                <header>
                                    <h2>${data.firstName || 'First'} ${data.lastName || 'Last'}</h2>
                                    <p class="position">${data.position || 'Position'}</p>
                                </header>

                                <div class="preview-section">
                                    <h5><i class="fas fa-graduation-cap"></i> Education</h5>
                                    <div class="preview-entry">
                                        <h6>Sample University</h6>
                                        <p>Degree in Field of Study</p>
                                    </div>
                                </div>

                                <div class="preview-section">
                                    <h5><i class="fas fa-briefcase"></i> Experience</h5>
                                    <div class="preview-entry">
                                        <h6>Sample Company</h6>
                                        <p>Job Title</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;

                    this.previewContainer.innerHTML = html;
                }
            }

            // Initialize Stepper
            const stepperContainer = document.getElementById('cv-stepper-container');
            if (stepperContainer) {
                const steps = ['Personal Info', 'Education', 'Experience', 'Skills', 'Languages', 'Additional', 'Review'];
                const currentStep = parseInt('{{ currentStep }}' || 1);
                const stepper = new CVStepper(stepperContainer, steps, currentStep);

                // Update stepper when changing sections
                document.querySelectorAll('.next-section, .prev-section, .btn-submit-review').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const nextStep = this.dataset.next || this.dataset.prev || 7;
                        stepper.updateStep(parseInt(nextStep));
                    });
                });
            }

            // Initialize Photo Upload
            const photoInput = document.getElementById('photoUpload');
            const photoPreview = document.getElementById('profilePhotoPreview');
            if (photoInput && photoPreview) {
                const photoUpload = new PhotoUpload(photoInput, photoPreview, {
                    aspectRatio: 1,
                    cropable: true,
                    maxSize: 5 // 5MB
                });

                // Check for existing photo data in localStorage
                const savedPhoto = localStorage.getItem('cvProfilePhoto');
                if (savedPhoto) {
                    photoPreview.src = savedPhoto;
                }
            }

            // Initialize Skills Autocomplete
            const skillInput = document.getElementById('skillInput');
            if (skillInput) {
                const commonSkills = [
                    'JavaScript', 'Python', 'Java', 'C++', 'C#', 'PHP', 'Swift', 'Kotlin',
                    'React', 'Angular', 'Vue.js', 'Node.js', 'Express', 'Django', 'Flask',
                    'SQL', 'MongoDB', 'Firebase', 'AWS', 'Azure', 'Docker', 'Kubernetes',
                    'Git', 'GitHub', 'GitLab', 'Jira', 'Agile', 'Scrum', 'Project Management',
                    'UI/UX Design', 'Adobe Photoshop', 'Illustrator', 'Figma', 'Sketch'
                ];
                new SkillAutocomplete(skillInput, commonSkills);

                // Handle adding skills
                const addSkillBtn = document.getElementById('addSkillBtn');
                const skillsContainer = document.getElementById('skillsContainer');
                const skillsEmptyState = document.getElementById('skillsEmptyState');

                function addSkill(skill) {
                    if (!skill) return;

                    const skillBadge = document.createElement('div');
                    skillBadge.className = 'badge bg-light text-dark p-2 mb-2 me-2';
                    skillBadge.style.fontSize = '1rem';

                    const skillText = document.createElement('span');
                    skillText.textContent = skill;

                    const removeBtn = document.createElement('button');
                    removeBtn.className = 'btn-close ms-2';
                    removeBtn.setAttribute('aria-label', 'Remove');
                    removeBtn.style.fontSize = '0.5rem';

                    removeBtn.addEventListener('click', function() {
                        skillBadge.remove();
                        updateHiddenSkills();

                        if (skillsContainer.children.length === 0) {
                            skillsEmptyState.style.display = 'block';
                        }
                    });

                    skillBadge.appendChild(skillText);
                    skillBadge.appendChild(removeBtn);
                    skillsContainer.appendChild(skillBadge);

                    // Hide empty state if visible
                    skillsEmptyState.style.display = 'none';

                    // Add to hidden input field
                    updateHiddenSkills();
                }

                function updateHiddenSkills() {
                    const skills = Array.from(skillsContainer.children).map(badge => {
                        return badge.querySelector('span').textContent;
                    });

                    // Create or update hidden field
                    let hiddenField = document.getElementById('skillsHidden');
                    if (!hiddenField) {
                        hiddenField = document.createElement('input');
                        hiddenField.type = 'hidden';
                        hiddenField.name = 'skills';
                        hiddenField.id = 'skillsHidden';
                        skillsContainer.parentNode.appendChild(hiddenField);
                    }

                    hiddenField.value = JSON.stringify(skills);
                }

                // Add skill event listeners
                addSkillBtn.addEventListener('click', function() {
                    addSkill(skillInput.value);
                    skillInput.value = '';
                });

                skillInput.addEventListener('keypress', function(event) {
                    if (event.key === 'Enter') {
                        event.preventDefault();
                        addSkill(skillInput.value);
                        skillInput.value = '';
                    }
                });

                // Quick skill buttons
                document.querySelectorAll('.quick-skill').forEach(btn => {
                    btn.addEventListener('click', function() {
                        addSkill(this.textContent);
                    });
                });
            }

            // Initialize Language functionality
            const languageInput = document.getElementById('languageInput');
            const proficiencySelect = document.getElementById('proficiencySelect');
            const addLanguageBtn = document.getElementById('addLanguageBtn');
            const languagesContainer = document.getElementById('languagesContainer');
            const languagesEmptyState = document.getElementById('languagesEmptyState');

            if (addLanguageBtn) {
                function addLanguage(language, proficiency) {
                    if (!language || !proficiency) return;

                    const langBadge = document.createElement('div');
                    langBadge.className = 'language-badge';

                    const langText = document.createElement('span');
                    langText.innerHTML = `<strong>${language}</strong> - ${proficiency}`;

                    const removeBtn = document.createElement('button');
                    removeBtn.innerHTML = '&times;';

                    removeBtn.addEventListener('click', function() {
                        langBadge.remove();
                        updateHiddenLanguages();

                        if (languagesContainer.children.length === 0) {
                            languagesEmptyState.style.display = 'block';
                        }
                    });

                    langBadge.appendChild(langText);
                    langBadge.appendChild(removeBtn);
                    languagesContainer.appendChild(langBadge);

                    // Hide empty state if visible
                    languagesEmptyState.style.display = 'none';

                    // Update hidden input
                    updateHiddenLanguages();
                }

                function updateHiddenLanguages() {
                    const languages = Array.from(languagesContainer.children).map(badge => {
                        const langText = badge.querySelector('span').textContent;
                        const parts = langText.split(' - ');
                        return {
                            language: parts[0],
                            proficiency: parts[1]
                        };
                    });

                    // Create or update hidden field
                    let hiddenField = document.getElementById('languagesHidden');
                    if (!hiddenField) {
                        hiddenField = document.createElement('input');
                        hiddenField.type = 'hidden';
                        hiddenField.name = 'languages';
                        hiddenField.id = 'languagesHidden';
                        languagesContainer.parentNode.appendChild(hiddenField);
                    }

                    hiddenField.value = JSON.stringify(languages);
                }

                addLanguageBtn.addEventListener('click', function() {
                    addLanguage(languageInput.value, proficiencySelect.value);
                    languageInput.value = '';
                    proficiencySelect.selectedIndex = 0;
                });

                // Quick language buttons
                document.querySelectorAll('.quick-language').forEach(btn => {
                    btn.addEventListener('click', function() {
                        addLanguage(this.dataset.lang, this.dataset.level);
                    });
                });
            }

            // Initialize Education functionality
            const educationEntries = document.getElementById('educationEntries');
            const addEducationBtn = document.getElementById('addEducation');
            const addFirstEducationBtn = document.getElementById('addFirstEducation');
            const educationEmptyState = document.getElementById('educationEmptyState');
            const addMoreEducationBtnContainer = document.getElementById('addMoreEducationBtnContainer');

            if (educationEntries && (addEducationBtn || addFirstEducationBtn)) {
                let educationCounter = 0;

                function addEducationEntry() {
                    const template = document.getElementById('educationEntryTemplate');
                    const clone = document.importNode(template.content, true);

                    // Update IDs to be unique
                    const entryId = `education-${educationCounter++}`;
                    clone.querySelector('.education-entry').id = entryId;

                    // Add to container
                    educationEntries.appendChild(clone);

                    // Initialize datepickers for this entry
                    initDatePickers(document.getElementById(entryId));

                    // Show "add more" button and hide empty state
                    educationEmptyState.style.display = 'none';
                    addMoreEducationBtnContainer.style.display = 'block';

                    // Add remove handler
                    document.getElementById(entryId).querySelector('.remove-education').addEventListener('click', function() {
                        document.getElementById(entryId).remove();

                        // Show empty state if no entries left
                        if (educationEntries.querySelectorAll('.education-entry').length === 0) {
                            educationEmptyState.style.display = 'block';
                            addMoreEducationBtnContainer.style.display = 'none';
                        }
                    });

                    // Character counter for description
                    const descriptionInput = document.getElementById(entryId).querySelector('.description-input');
                    const charCount = document.getElementById(entryId).querySelector('.char-count');
                    if (descriptionInput && charCount) {
                        descriptionInput.addEventListener('input', function() {
                            charCount.textContent = this.value.length;
                            if (this.value.length > 500) {
                                this.value = this.value.substring(0, 500);
                                charCount.textContent = 500;
                            }
                        });
                    }

                    // Current checkbox handler
                    const currentCheckbox = document.getElementById(entryId).querySelector('.current-checkbox');
                    const endDateInput = document.getElementById(entryId).querySelector('.end-date-input');
                    if (currentCheckbox && endDateInput) {
                        currentCheckbox.addEventListener('change', function() {
                            if (this.checked) {
                                endDateInput.value = 'Present';
                                endDateInput.disabled = true;
                            } else {
                                endDateInput.value = '';
                                endDateInput.disabled = false;
                            }
                        });
                    }
                }

                // Initialize drag and drop for education entries
                function initEducationSorter() {
                    new SectionSorter('#educationEntries', '.education-entry', function(evt) {
                        console.log('Education reordered:', evt.oldIndex, evt.newIndex);
                    });
                }

                // Add education button handlers
                if (addEducationBtn) {
                    addEducationBtn.addEventListener('click', function() {
                        addEducationEntry();
                        initEducationSorter();
                    });
                }

                if (addFirstEducationBtn) {
                    addFirstEducationBtn.addEventListener('click', function() {
                        addEducationEntry();
                        initEducationSorter();
                    });
                }
            }

            // Initialize Experience functionality
            const experienceEntries = document.getElementById('experienceEntries');
            const addExperienceBtn = document.getElementById('addExperience');
            const addFirstExperienceBtn = document.getElementById('addFirstExperience');
            const experienceEmptyState = document.getElementById('experienceEmptyState');
            const addMoreExperienceBtnContainer = document.getElementById('addMoreExperienceBtnContainer');

            if (experienceEntries && (addExperienceBtn || addFirstExperienceBtn)) {
                let experienceCounter = 0;

                function addExperienceEntry() {
                    const template = document.getElementById('experienceEntryTemplate');
                    const clone = document.importNode(template.content, true);

                    // Update IDs to be unique
                    const entryId = `experience-${experienceCounter++}`;
                    clone.querySelector('.experience-entry').id = entryId;

                    // Add to container
                    experienceEntries.appendChild(clone);

                    // Initialize datepickers for this entry
                    initDatePickers(document.getElementById(entryId));

                    // Show "add more" button and hide empty state
                    experienceEmptyState.style.display = 'none';
                    addMoreExperienceBtnContainer.style.display = 'block';

                    // Add remove handler
                    document.getElementById(entryId).querySelector('.remove-experience').addEventListener('click', function() {
                        document.getElementById(entryId).remove();

                        // Show empty state if no entries left
                        if (experienceEntries.querySelectorAll('.experience-entry').length === 0) {
                            experienceEmptyState.style.display = 'block';
                            addMoreExperienceBtnContainer.style.display = 'none';
                        }
                    });

                    // Character counter for description
                    const descriptionInput = document.getElementById(entryId).querySelector('.description-input');
                    const charCount = document.getElementById(entryId).querySelector('.char-count');
                    if (descriptionInput && charCount) {
                        descriptionInput.addEventListener('input', function() {
                            charCount.textContent = this.value.length;
                            if (this.value.length > 500) {
                                this.value = this.value.substring(0, 500);
                                charCount.textContent = 500;
                            }
                        });
                    }

                    // Current checkbox handler
                    const currentCheckbox = document.getElementById(entryId).querySelector('.current-checkbox');
                    const endDateInput = document.getElementById(entryId).querySelector('.end-date-input');
                    if (currentCheckbox && endDateInput) {
                        currentCheckbox.addEventListener('change', function() {
                            if (this.checked) {
                                endDateInput.value = 'Present';
                                endDateInput.disabled = true;
                            } else {
                                endDateInput.value = '';
                                endDateInput.disabled = false;
                            }
                        });
                    }
                }

                // Initialize drag and drop for experience entries
                function initExperienceSorter() {
                    new SectionSorter('#experienceEntries', '.experience-entry', function(evt) {
                        console.log('Experience reordered:', evt.oldIndex, evt.newIndex);
                    });
                }

                // Add experience button handlers
                if (addExperienceBtn) {
                    addExperienceBtn.addEventListener('click', function() {
                        addExperienceEntry();
                        initExperienceSorter();
                    });
                }

                if (addFirstExperienceBtn) {
                    addFirstExperienceBtn.addEventListener('click', function() {
                        addExperienceEntry();
                        initExperienceSorter();
                    });
                }
            }

            // Initialize Date Pickers
            function initDatePickers(container = document) {
                const dateInputs = container.querySelectorAll('.date-input');
                dateInputs.forEach(input => {
                    flatpickr(input, {
                        dateFormat: "Y-m-d",
                        allowInput: true,
                        disableMobile: false
                    });
                });
            }
            initDatePickers();

            // Initialize Template Preview
            new TemplatePreview();

            // CV Preview Panel functionality
            const previewBtn = document.querySelector('.btn-preview');
            const cvPreview = document.getElementById('cvPreview');
            const closePreviewBtn = document.getElementById('closePreview');

            if (previewBtn && cvPreview) {
                previewBtn.addEventListener('click', function() {
                    updatePreviewContent();
                    cvPreview.classList.add('show');
                });

                if (closePreviewBtn) {
                    closePreviewBtn.addEventListener('click', function() {
                        cvPreview.classList.remove('show');
                    });
                }

                function updatePreviewContent() {
                    const previewContent = document.getElementById('previewContent');
                    if (!previewContent) return;

                    const formData = new FormData(document.getElementById('cvForm'));
                    const data = {};

                    for (const [key, value] of formData.entries()) {
                        data[key] = value;
                    }

                    const photoSrc = localStorage.getItem('cvProfilePhoto') || '{{ asset('images/default-avatar.png') }}';

                    // Create preview HTML
                    let html = `
                        <div class="preview-section">
                            <img src="${photoSrc}" class="preview-profile-photo" alt="Profile Photo">
                            <h4 class="text-center">${data.firstName || ''} ${data.lastName || ''}</h4>
                            <p class="text-center text-muted">${data.position || ''}</p>
                        </div>

                        <div class="preview-section">
                            <h5><i class="fas fa-user"></i> Personal Information</h5>
                            <div class="row">
                                <div class="col-6">
                                    <strong>Email:</strong> ${data.email || ''}
                                </div>
                                <div class="col-6">
                                    <strong>Phone:</strong> ${data.phone || ''}
                                </div>
                            </div>
                        </div>
                    `;

                    // Add education section if entries exist
                    const educationEntries = document.querySelectorAll('.education-entry');
                    if (educationEntries.length > 0) {
                        html += `
                            <div class="preview-section">
                                <h5><i class="fas fa-graduation-cap"></i> Education</h5>
                        `;

                        educationEntries.forEach(entry => {
                            const institution = entry.querySelector('.institution-input')?.value || '';
                            const degree = entry.querySelector('.degree-input')?.value || '';

                            html += `
                                <div class="preview-item">
                                    <h6>${institution}</h6>
                                    <p>${degree}</p>
                                </div>
                            `;
                        });

                        html += `</div>`;
                    }

                    // Add experience section if entries exist
                    const experienceEntries = document.querySelectorAll('.experience-entry');
                    if (experienceEntries.length > 0) {
                        html += `
                            <div class="preview-section">
                                <h5><i class="fas fa-briefcase"></i> Experience</h5>
                        `;

                        experienceEntries.forEach(entry => {
                            const company = entry.querySelector('.company-input')?.value || '';
                            const position = entry.querySelector('.position-input')?.value || '';

                            html += `
                                <div class="preview-item">
                                    <h6>${company}</h6>
                                    <p>${position}</p>
                                </div>
                            `;
                        });

                        html += `</div>`;
                    }

                    // Add skills section if skills exist
                    const skillsContainer = document.getElementById('skillsContainer');
                    if (skillsContainer && skillsContainer.children.length > 0) {
                        html += `
                            <div class="preview-section">
                                <h5><i class="fas fa-tools"></i> Skills</h5>
                                <div class="d-flex flex-wrap gap-2">
                        `;

                        Array.from(skillsContainer.children).forEach(skill => {
                            const skillText = skill.querySelector('span').textContent;
                            html += `<span class="badge bg-light text-dark p-2">${skillText}</span>`;
                        });

                        html += `
                                </div>
                            </div>
                        `;
                    }

                    previewContent.innerHTML = html;
                }
            }

            // Navigation between sections
            document.querySelectorAll('.next-section, .prev-section').forEach(btn => {
                btn.addEventListener('click', function() {
                    const currentSection = document.querySelector('.form-section-page.active');
                    let targetSectionId;

                    if (this.classList.contains('next-section')) {
                        targetSectionId = `section-${this.dataset.next}`;
                    } else {
                        targetSectionId = `section-${this.dataset.prev}`;
                    }

                    const targetSection = document.getElementById(targetSectionId);

                    if (currentSection && targetSection) {
                        currentSection.classList.remove('active');
                        targetSection.classList.add('active');
                    }
                });
            });

            // Review button handler
            document.querySelector('.btn-submit-review')?.addEventListener('click', function() {
                const currentSection = document.querySelector('.form-section-page.active');
                const reviewSection = document.getElementById('section-7');

                if (currentSection && reviewSection) {
                    generateReviewContent();
                    currentSection.classList.remove('active');
                    reviewSection.classList.add('active');
                }
            });

            // Generate review content
            function generateReviewContent() {
                const reviewContent = document.getElementById('reviewContent');
                if (!reviewContent) return;

                const formData = new FormData(document.getElementById('cvForm'));
                const data = {};

                for (const [key, value] of formData.entries()) {
                    data[key] = value;
                }

                const photoSrc = localStorage.getItem('cvProfilePhoto') || '{{ asset('images/default-avatar.png') }}';

                let html = `
                    <div class="row mb-4">
                        <div class="col-md-3 text-center">
                            <img src="${photoSrc}" class="img-thumbnail rounded-circle mb-2" style="width: 120px; height: 120px; object-fit: cover;" alt="Profile Photo">
                        </div>
                        <div class="col-md-9">
                            <h3>${data.firstName || ''} ${data.lastName || ''}</h3>
                            <h5 class="text-muted">${data.position || ''}</h5>
                            <div class="row mt-3">
                                <div class="col-md-6">
                                    <p><i class="fas fa-envelope me-2"></i>${data.email || ''}</p>
                                </div>
                                <div class="col-md-6">
                                    <p><i class="fas fa-phone me-2"></i>${data.phone || ''}</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="accordion" id="reviewAccordion">
                `;

                // Personal Information section
                html += `
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#personalInfoCollapse" aria-expanded="true" aria-controls="personalInfoCollapse">
                                <i class="fas fa-user me-2"></i>Personal Information
                            </button>
                        </h2>
                        <div id="personalInfoCollapse" class="accordion-collapse collapse show" data-bs-parent="#reviewAccordion">
                            <div class="accordion-body">
                                <div class="row">
                                    <div class="col-md-6 mb-2">
                                        <strong>Email:</strong> ${data.email || ''}
                                    </div>
                                    <div class="col-md-6 mb-2">
                                        <strong>Phone:</strong> ${data.phone || ''}
                                    </div>
                                    <div class="col-md-6 mb-2">
                                        <strong>Address:</strong> ${data.address || ''}
                                    </div>
                                    <div class="col-md-6 mb-2">
                                        <strong>Website:</strong> ${data.website || ''}
                                    </div>
                                    <div class="col-md-6 mb-2">
                                        <strong>LinkedIn:</strong> ${data.linkedin || ''}
                                    </div>
                                </div>
                                <div class="mt-2">
                                    <strong>Professional Summary:</strong>
                                    <p>${data.summary || ''}</p>
                                </div>
                            </div>
                        </div>
                    </div>
                `;

                // Education section
                const educationEntries = document.querySelectorAll('.education-entry');
                html += `
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#educationCollapse" aria-expanded="false" aria-controls="educationCollapse">
                                <i class="fas fa-graduation-cap me-2"></i>Education
                            </button>
                        </h2>
                        <div id="educationCollapse" class="accordion-collapse collapse" data-bs-parent="#reviewAccordion">
                            <div class="accordion-body">
                `;

                if (educationEntries.length > 0) {
                    educationEntries.forEach(entry => {
                        const institution = entry.querySelector('.institution-input')?.value || '';
                        const degree = entry.querySelector('.degree-input')?.value || '';
                        const field = entry.querySelector('.field-input')?.value || '';
                        const startDate = entry.querySelector('.start-date-input')?.value || '';
                        const endDate = entry.querySelector('.end-date-input')?.value || '';

                        html += `
                            <div class="card mb-3">
                                <div class="card-body">
                                    <h5 class="card-title">${institution}</h5>
                                    <h6 class="card-subtitle mb-2 text-muted">${degree} ${field ? 'in ' + field : ''}</h6>
                                    <p class="card-text">
                                        <small>${startDate} - ${endDate}</small>
                                    </p>
                                </div>
                            </div>
                        `;
                    });
                } else {
                    html += `<p class="text-muted">No education entries added.</p>`;
                }

                html += `
                            </div>
                        </div>
                    </div>
                `;

                // Experience section
                const experienceEntries = document.querySelectorAll('.experience-entry');
                html += `
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#experienceCollapse" aria-expanded="false" aria-controls="experienceCollapse">
                                <i class="fas fa-briefcase me-2"></i>Experience
                            </button>
                        </h2>
                        <div id="experienceCollapse" class="accordion-collapse collapse" data-bs-parent="#reviewAccordion">
                            <div class="accordion-body">
                `;

                if (experienceEntries.length > 0) {
                    experienceEntries.forEach(entry => {
                        const company = entry.querySelector('.company-input')?.value || '';
                        const position = entry.querySelector('.position-input')?.value || '';
                        const location = entry.querySelector('.location-input')?.value || '';
                        const startDate = entry.querySelector('.start-date-input')?.value || '';
                        const endDate = entry.querySelector('.end-date-input')?.value || '';
                        const description = entry.querySelector('.description-input')?.value || '';

                        html += `
                            <div class="card mb-3">
                                <div class="card-body">
                                    <h5 class="card-title">${position}</h5>
                                    <h6 class="card-subtitle mb-2 text-muted">${company} ${location ? '- ' + location : ''}</h6>
                                    <p class="card-text">
                                        <small>${startDate} - ${endDate}</small>
                                    </p>
                                    <p class="card-text">${description}</p>
                                </div>
                            </div>
                        `;
                    });
                } else {
                    html += `<p class="text-muted">No experience entries added.</p>`;
                }

                html += `
                            </div>
                        </div>
                    </div>
                `;

                // Complete the accordion
                html += `</div>`;

                reviewContent.innerHTML = html;
            }

            // PDF Generation functionality
            const generateBtn = document.getElementById('generateBtn');
            const directDownloadBtn = document.getElementById('directDownloadBtn');
            const simpleDownloadBtn = document.getElementById('simpleDownloadBtn');
            const statusMessage = document.getElementById('statusMessage');

            if (generateBtn) {
                generateBtn.addEventListener('click', function() {
                    // Show status message
                    if (statusMessage) {
                        statusMessage.style.display = 'block';
                        statusMessage.className = 'alert alert-info mt-3';
                        statusMessage.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Generating your CV... Please wait.';
                    }

                    // Ensure photo data is included
                    const photoDataField = document.getElementById('photoDataField');
                    if (photoDataField) {
                        const photoData = localStorage.getItem('cvProfilePhoto');
                        if (photoData) {
                            photoDataField.value = photoData;
                        }
                    }

                    // Submit the form
                    const cvForm = document.getElementById('cvForm');
                    if (cvForm) {
                        // Create a duplicate form for submission
                        const submitForm = cvForm.cloneNode(true);
                        submitForm.target = '_blank';
                        document.body.appendChild(submitForm);
                        submitForm.submit();
                        document.body.removeChild(submitForm);

                        // Show success message after a delay
                        setTimeout(() => {
                            if (statusMessage) {
                                statusMessage.className = 'alert alert-success mt-3';
                                statusMessage.innerHTML = '<i class="fas fa-check-circle me-2"></i>Your CV has been generated! Check your downloads.';
                            }
                        }, 2000);
                    }
                });
            }

            // Direct download button
            if (directDownloadBtn) {
                directDownloadBtn.addEventListener('click', function() {
                    if (statusMessage) {
                        statusMessage.style.display = 'block';
                        statusMessage.className = 'alert alert-info mt-3';
                        statusMessage.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Downloading your CV... Please wait.';
                    }

                    // Create direct download form
                    const directForm = document.createElement('form');
                    directForm.method = 'post';
                    directForm.action = '/cv-generator/generate';
                    directForm.target = '_blank';

                    // Add minimal required fields
                    const fields = [
                        { name: 'firstName', value: document.querySelector('input[name="firstName"]')?.value || 'Direct' },
                        { name: 'lastName', value: document.querySelector('input[name="lastName"]')?.value || 'Download' },
                        { name: 'email', value: document.querySelector('input[name="email"]')?.value || 'direct@example.com' },
                        { name: 'position', value: document.querySelector('input[name="position"]')?.value || 'Test Position' },
                        { name: 'template', value: document.querySelector('input[name="template"]:checked')?.value || 'green' },
                        { name: 'photoData', value: localStorage.getItem('cvProfilePhoto') || '' },
                        { name: 'directDownload', value: 'true' }
                    ];

                    fields.forEach(field => {
                        const input = document.createElement('input');
                        input.type = 'hidden';
                        input.name = field.name;
                        input.value = field.value;
                        directForm.appendChild(input);
                    });

                    // Add to document and submit
                    document.body.appendChild(directForm);
                    directForm.submit();
                    document.body.removeChild(directForm);

                    // Show success message
                    setTimeout(() => {
                        if (statusMessage) {
                            statusMessage.className = 'alert alert-success mt-3';
                            statusMessage.innerHTML = '<i class="fas fa-check-circle me-2"></i>Your CV has been generated! Check your downloads.';
                        }
                    }, 2000);
                });
            }

            // Simple CV button
            if (simpleDownloadBtn) {
                simpleDownloadBtn.addEventListener('click', function() {
                    if (statusMessage) {
                        statusMessage.style.display = 'block';
                        statusMessage.className = 'alert alert-info mt-3';
                        statusMessage.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Generating simple CV... Please wait.';
                    }

                    // Create simple form
                    const simpleForm = document.createElement('form');
                    simpleForm.method = 'post';
                    simpleForm.action = '/cv-generator/generate';
                    simpleForm.target = '_blank';

                    // Add minimal fields
                    const fields = [
                        { name: 'firstName', value: 'Test' },
                        { name: 'lastName', value: 'User' },
                        { name: 'email', value: 'test@example.com' },
                        { name: 'position', value: 'Test Position' },
                        { name: 'template', value: 'green' },
                        { name: 'simpleTest', value: 'true' }
                    ];

                    fields.forEach(field => {
                        const input = document.createElement('input');
                        input.type = 'hidden';
                        input.name = field.name;
                        input.value = field.value;
                        simpleForm.appendChild(input);
                    });

                    // Add to document and submit
                    document.body.appendChild(simpleForm);
                    simpleForm.submit();
                    document.body.removeChild(simpleForm);

                    // Show success message
                    setTimeout(() => {
                        if (statusMessage) {
                            statusMessage.className = 'alert alert-success mt-3';
                            statusMessage.innerHTML = '<i class="fas fa-check-circle me-2"></i>Simple CV generated! Check your downloads.';
                        }
                    }, 2000);
                });
            }

            // Character counter for summary
            const summaryInput = document.getElementById('summary');
            const summaryCharCount = document.getElementById('summaryCharCount');
            if (summaryInput && summaryCharCount) {
                summaryInput.addEventListener('input', function() {
                    summaryCharCount.textContent = this.value.length;
                    if (this.value.length > 500) {
                        this.value = this.value.substring(0, 500);
                        summaryCharCount.textContent = 500;
                    }
                });
            }

            // References toggle
            const includeReferencesCheckbox = document.getElementById('includeReferences');
            const referencesSection = document.getElementById('referencesSection');
            if (includeReferencesCheckbox && referencesSection) {
                includeReferencesCheckbox.addEventListener('change', function() {
                    referencesSection.style.display = this.checked ? 'block' : 'none';
                });
            }

            // Reference upon request toggle
            const referenceUponRequestCheckbox = document.getElementById('referenceUponRequest');
            const referenceFields = document.querySelectorAll('#referencesSection .form-floating');
            if (referenceUponRequestCheckbox && referenceFields.length) {
                referenceUponRequestCheckbox.addEventListener('change', function() {
                    referenceFields.forEach(field => {
                        field.style.display = this.checked ? 'none' : 'block';
                    });
                });
            }

            // Debug tools
            const viewFormDataBtn = document.getElementById('viewFormDataBtn');
            const clearCacheBtn = document.getElementById('clearCacheBtn');

            if (viewFormDataBtn) {
                viewFormDataBtn.addEventListener('click', function() {
                    // Get form data
                    const formData = new FormData(document.getElementById('cvForm'));
                    const dataObj = {};
                    for (const [key, value] of formData.entries()) {
                        dataObj[key] = value;
                    }

                    // Create modal to display data
                    const modalHTML = `
                        <div class="modal fade" id="formDataModal" tabindex="-1" aria-labelledby="formDataModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-lg">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="formDataModalLabel">Form Data</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <pre>${JSON.stringify(dataObj, null, 2)}</pre>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;

                    // Add to document
                    const modalContainer = document.createElement('div');
                    modalContainer.innerHTML = modalHTML;
                    document.body.appendChild(modalContainer);

                    // Show modal using Bootstrap
                    const modal = new bootstrap.Modal(document.getElementById('formDataModal'));
                    modal.show();

                    // Remove from document when hidden
                    document.getElementById('formDataModal').addEventListener('hidden.bs.modal', function() {
                        document.body.removeChild(modalContainer);
                    });
                });
            }

            if (clearCacheBtn) {
                clearCacheBtn.addEventListener('click', function() {
                    localStorage.clear();
                    alert('Local storage cleared! The page will now reload.');
                    location.reload();
                });
            }

            // Initialize template selection
            const greenTemplateCard = document.getElementById('greenTemplateCard');
            const blueTemplateCard = document.getElementById('blueTemplateCard');

            if (greenTemplateCard && blueTemplateCard) {
                // Initially mark the green template as selected
                greenTemplateCard.classList.add('selected-template-green');

                greenTemplateCard.addEventListener('click', function() {
                    document.getElementById('template-green').checked = true;
                    this.classList.add('selected-template-green');
                    blueTemplateCard.classList.remove('selected-template');
                });

                blueTemplateCard.addEventListener('click', function() {
                    document.getElementById('template-blue').checked = true;
                    this.classList.add('selected-template');
                    greenTemplateCard.classList.remove('selected-template-green');
                });
            }

            // Enhanced form validation
            const forms = document.querySelectorAll('.needs-validation');
            forms.forEach(form => {
                form.addEventListener('submit', function(event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });

            // Certifications functionality
            const addCertificationBtn = document.getElementById('addCertificationBtn');
            const certificationInput = document.getElementById('certificationInput');
            const certificationsList = document.getElementById('certificationsList');
            const certificationsEmptyState = document.getElementById('certificationsEmptyState');

            if (addCertificationBtn && certificationInput && certificationsList) {
                function addCertification(certText) {
                    if (!certText) return;

                    const listItem = document.createElement('div');
                    listItem.className = 'list-group-item d-flex justify-content-between align-items-center fade-in';

                    const certContent = document.createElement('span');
                    certContent.textContent = certText;

                    const removeBtn = document.createElement('button');
                    removeBtn.className = 'btn btn-sm btn-outline-danger';
                    removeBtn.innerHTML = '<i class="fas fa-times"></i>';
                    removeBtn.addEventListener('click', function() {
                        listItem.remove();
                        updateHiddenCertifications();

                        if (certificationsList.children.length === 0) {
                            certificationsEmptyState.style.display = 'block';
                        }
                    });

                    listItem.appendChild(certContent);
                    listItem.appendChild(removeBtn);
                    certificationsList.appendChild(listItem);

                    // Hide empty state
                    if (certificationsEmptyState) {
                        certificationsEmptyState.style.display = 'none';
                    }

                    // Update hidden field
                    updateHiddenCertifications();
                }

                function updateHiddenCertifications() {
                    const certifications = Array.from(certificationsList.children).map(item => {
                        return item.querySelector('span').textContent;
                    });

                    // Create or update hidden field
                    let hiddenField = document.getElementById('certificationsHidden');
                    if (!hiddenField) {
                        hiddenField = document.createElement('input');
                        hiddenField.type = 'hidden';
                        hiddenField.name = 'certifications';
                        hiddenField.id = 'certificationsHidden';
                        certificationsList.parentNode.appendChild(hiddenField);
                    }

                    hiddenField.value = JSON.stringify(certifications);
                }

                addCertificationBtn.addEventListener('click', function() {
                    addCertification(certificationInput.value);
                    certificationInput.value = '';
                });

                certificationInput.addEventListener('keypress', function(event) {
                    if (event.key === 'Enter') {
                        event.preventDefault();
                        addCertification(this.value);
                        this.value = '';
                    }
                });
            }

            // Autofill button functionality
            const autofillBtn = document.getElementById('autofillBtn');
            if (autofillBtn) {
                autofillBtn.addEventListener('click', function() {
                    // Get sample data
                    let sampleData = {};
                    const sampleDataElement = document.getElementById('sampleData');
                    if (sampleDataElement && sampleDataElement.dataset.sample) {
                        try {
                            sampleData = JSON.parse(sampleDataElement.dataset.sample);
                        } catch (e) {
                            console.error('Error parsing sample data:', e);
                        }
                    } else {
                        // Default sample data if none provided
                        sampleData = {
                            firstName: 'Mohamed',
                            lastName: 'Abidi',
                            email: 'mohamed.abidi@esprit.tn',
                            phone: '+216 55 123 456',
                            position: 'Fullstack Developer',
                            address: '123 Main Street, Tunis, Tunisia',
                            website: 'www.mohamedabidi.com',
                            linkedin: 'linkedin.com/in/mohamedabidi',
                            summary: 'Experienced full-stack developer with expertise in modern web technologies. Strong problem-solving skills and passion for creating efficient, scalable applications.'
                        };
                    }

                    // Fill personal info
                    document.getElementById('firstName').value = sampleData.firstName || '';
                    document.getElementById('lastName').value = sampleData.lastName || '';
                    document.getElementById('email').value = sampleData.email || '';
                    document.getElementById('phone').value = sampleData.phone || '';
                    document.getElementById('position').value = sampleData.position || '';
                    document.getElementById('address').value = sampleData.address || '';
                    document.getElementById('website').value = sampleData.website || '';
                    document.getElementById('linkedin').value = sampleData.linkedin || '';
                    document.getElementById('summary').value = sampleData.summary || '';

                    if (document.getElementById('summaryCharCount')) {
                        document.getElementById('summaryCharCount').textContent = document.getElementById('summary').value.length;
                    }

                    // Add sample education
                    if (addFirstEducationBtn) {
                        addFirstEducationBtn.click();

                        // Wait for entry to be created
                        setTimeout(() => {
                            const educationEntry = document.querySelector('.education-entry');
                            if (educationEntry) {
                                educationEntry.querySelector('.institution-input').value = 'ESPRIT School of Engineering';
                                educationEntry.querySelector('.degree-input').value = 'Bachelor of Science';
                                educationEntry.querySelector('.field-input').value = 'Computer Science';
                                educationEntry.querySelector('.location-input').value = 'Tunis, Tunisia';
                                educationEntry.querySelector('.start-date-input').value = '2019-09-01';
                                educationEntry.querySelector('.end-date-input').value = '2023-06-30';

                                // Add another education entry
                                if (addEducationBtn) {
                                    addEducationBtn.click();

                                    setTimeout(() => {
                                        const secondEducation = document.querySelectorAll('.education-entry')[1];
                                        if (secondEducation) {
                                            secondEducation.querySelector('.institution-input').value = 'University of Technology';
                                            secondEducation.querySelector('.degree-input').value = 'Master of Science';
                                            secondEducation.querySelector('.field-input').value = 'Software Engineering';
                                            secondEducation.querySelector('.location-input').value = 'Tunis, Tunisia';
                                            secondEducation.querySelector('.start-date-input').value = '2023-09-01';
                                            secondEducation.querySelector('.end-date-input').value = 'Present';
                                            secondEducation.querySelector('.current-checkbox').checked = true;

                                            const descInput = secondEducation.querySelector('.description-input');
                                            if (descInput) {
                                                descInput.value = 'Focusing on advanced software architecture, cloud computing, and AI applications. Working on research project related to distributed systems.';
                                                const charCount = secondEducation.querySelector('.char-count');
                                                if (charCount) {
                                                    charCount.textContent = descInput.value.length;
                                                }
                                            }
                                        }
                                    }, 100);
                                }
                            }
                        }, 100);
                    }

                    // Add sample experience
                    if (addFirstExperienceBtn) {
                        addFirstExperienceBtn.click();

                        // Wait for entry to be created
                        setTimeout(() => {
                            const experienceEntry = document.querySelector('.experience-entry');
                            if (experienceEntry) {
                                experienceEntry.querySelector('.company-input').value = 'Tech Innovations Inc.';
                                experienceEntry.querySelector('.position-input').value = 'Junior Developer';
                                experienceEntry.querySelector('.location-input').value = 'Tunis, Tunisia';
                                experienceEntry.querySelector('.start-date-input').value = '2022-01-01';
                                experienceEntry.querySelector('.end-date-input').value = '2023-12-31';

                                const descInput = experienceEntry.querySelector('.description-input');
                                if (descInput) {
                                    descInput.value = 'Developed and maintained web applications using React.js and Node.js. Collaborated with design team to implement UI/UX improvements. Participated in agile development processes.';
                                    const charCount = experienceEntry.querySelector('.char-count');
                                    if (charCount) {
                                        charCount.textContent = descInput.value.length;
                                    }
                                }

                                // Add another experience entry
                                if (addExperienceBtn) {
                                    addExperienceBtn.click();

                                    setTimeout(() => {
                                        const secondExperience = document.querySelectorAll('.experience-entry')[1];
                                        if (secondExperience) {
                                            secondExperience.querySelector('.company-input').value = 'Global Solutions Ltd';
                                            secondExperience.querySelector('.position-input').value = 'Senior Full-Stack Developer';
                                            secondExperience.querySelector('.location-input').value = 'Tunis, Tunisia';
                                            secondExperience.querySelector('.start-date-input').value = '2024-01-15';
                                            secondExperience.querySelector('.end-date-input').value = 'Present';
                                            secondExperience.querySelector('.current-checkbox').checked = true;

                                            const descInput = secondExperience.querySelector('.description-input');
                                            if (descInput) {
                                                descInput.value = 'Leading development team for enterprise SaaS application. Designing system architecture and implementing key features. Mentoring junior developers and managing project timelines.';
                                                const charCount = secondExperience.querySelector('.char-count');
                                                if (charCount) {
                                                    charCount.textContent = descInput.value.length;
                                                }
                                            }
                                        }
                                    }, 100);
                                }
                            }
                        }, 100);
                    }

                    // Add sample skills
                    if (typeof addSkill === 'function') {
                        const sampleSkills = ['JavaScript', 'React.js', 'Node.js', 'MongoDB', 'Python', 'Git', 'Docker', 'AWS', 'RESTful API', 'TypeScript'];
                        sampleSkills.forEach(skill => {
                            addSkill(skill);
                        });
                    }

                    // Add sample languages
                    if (typeof addLanguage === 'function') {
                        addLanguage('Arabic', 'Native');
                        addLanguage('English', 'Fluent');
                        addLanguage('French', 'Advanced');
                    }

                    // Add sample certifications
                    if (typeof addCertification === 'function') {
                        addCertification('AWS Certified Developer â€“ Associate');
                        addCertification('MongoDB Certified Developer Associate');
                        addCertification('Microsoft Certified: Azure Developer Associate');
                    }

                    // Fill additional information
                    if (document.getElementById('achievements')) {
                        document.getElementById('achievements').value = 'Winner of National Coding Challenge 2022\nRecognized for "Best Team Collaboration" award\nCompleted 10+ client projects with 100% satisfaction';
                    }

                    if (document.getElementById('interests')) {
                        document.getElementById('interests').value = 'Open-source contribution, AI research, Web3 development, Hiking, Photography, Chess';
                    }

                    // Display completion message
                    alert('Form has been filled with sample data! You can now review and modify as needed.');
                });
            }

            // Get current date and time for footer display
            const currentDate = new Date();
            const formattedDate = `${currentDate.getFullYear()}-${String(currentDate.getMonth() + 1).padStart(2, '0')}-${String(currentDate.getDate()).padStart(2, '0')} ${String(currentDate.getHours()).padStart(2, '0')}:${String(currentDate.getMinutes()).padStart(2, '0')}:${String(currentDate.getSeconds()).padStart(2, '0')}`;

            // Display current user info
            const currentUser = '{{ app.user ? app.user.username : "Mohamed-abidi-95" }}';
            console.log(`CV Generator accessed by ${currentUser} at ${formattedDate}`);

            // Function definitions needed by other components

            // Define addSkill for skills functionality
            function addSkill(skill) {
                if (!skill) return;

                const skillsContainer = document.getElementById('skillsContainer');
                const skillsEmptyState = document.getElementById('skillsEmptyState');

                if (!skillsContainer) return;

                const skillBadge = document.createElement('div');
                skillBadge.className = 'badge bg-light text-dark p-2 mb-2 me-2';
                skillBadge.style.fontSize = '1rem';

                const skillText = document.createElement('span');
                skillText.textContent = skill;

                const removeBtn = document.createElement('button');
                removeBtn.className = 'btn-close ms-2';
                removeBtn.setAttribute('aria-label', 'Remove');
                removeBtn.style.fontSize = '0.5rem';

                removeBtn.addEventListener('click', function() {
                    skillBadge.remove();
                    updateHiddenSkills();

                    if (skillsContainer.children.length === 0 && skillsEmptyState) {
                        skillsEmptyState.style.display = 'block';
                    }
                });

                skillBadge.appendChild(skillText);
                skillBadge.appendChild(removeBtn);
                skillsContainer.appendChild(skillBadge);

                // Hide empty state if visible
                if (skillsEmptyState) {
                    skillsEmptyState.style.display = 'none';
                }

                // Add to hidden input field
                updateHiddenSkills();
            }

            function updateHiddenSkills() {
                const skillsContainer = document.getElementById('skillsContainer');
                if (!skillsContainer) return;

                const skills = Array.from(skillsContainer.children).map(badge => {
                    return badge.querySelector('span').textContent;
                });

                // Create or update hidden field
                let hiddenField = document.getElementById('skillsHidden');
                if (!hiddenField) {
                    hiddenField = document.createElement('input');
                    hiddenField.type = 'hidden';
                    hiddenField.name = 'skills';
                    hiddenField.id = 'skillsHidden';
                    skillsContainer.parentNode.appendChild(hiddenField);
                }

                hiddenField.value = JSON.stringify(skills);
            }

            // Define addLanguage for languages functionality
            function addLanguage(language, proficiency) {
                if (!language || !proficiency) return;

                const languagesContainer = document.getElementById('languagesContainer');
                const languagesEmptyState = document.getElementById('languagesEmptyState');

                if (!languagesContainer) return;

                const langBadge = document.createElement('div');
                langBadge.className = 'language-badge';

                const langText = document.createElement('span');
                langText.innerHTML = `<strong>${language}</strong> - ${proficiency}`;

                const removeBtn = document.createElement('button');
                removeBtn.innerHTML = '&times;';

                removeBtn.addEventListener('click', function() {
                    langBadge.remove();
                    updateHiddenLanguages();

                    if (languagesContainer.children.length === 0 && languagesEmptyState) {
                        languagesEmptyState.style.display = 'block';
                    }
                });

                langBadge.appendChild(langText);
                langBadge.appendChild(removeBtn);
                languagesContainer.appendChild(langBadge);

                // Hide empty state if visible
                if (languagesEmptyState) {
                    languagesEmptyState.style.display = 'none';
                }

                // Update hidden input
                updateHiddenLanguages();
            }

            function updateHiddenLanguages() {
                const languagesContainer = document.getElementById('languagesContainer');
                if (!languagesContainer) return;

                const languages = Array.from(languagesContainer.children).map(badge => {
                    const langText = badge.querySelector('span').textContent;
                    const parts = langText.split(' - ');
                    return {
                        language: parts[0],
                        proficiency: parts[1]
                    };
                });

                // Create or update hidden field
                let hiddenField = document.getElementById('languagesHidden');
                if (!hiddenField) {
                    hiddenField = document.createElement('input');
                    hiddenField.type = 'hidden';
                    hiddenField.name = 'languages';
                    hiddenField.id = 'languagesHidden';
                    languagesContainer.parentNode.appendChild(hiddenField);
                }

                hiddenField.value = JSON.stringify(languages);
            }

            // Check if this is a mobile device
            const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
            if (isMobile) {
                document.body.classList.add('mobile-device');

                // Adjust UI for better mobile experience
                document.querySelectorAll('.card-header').forEach(header => {
                    header.style.padding = '10px';
                });

                document.querySelectorAll('.form-section-title').forEach(title => {
                    title.style.fontSize = '1.25rem';
                });
            }

            // Current date: {{ "now"|date("Y-m-d H:i:s") }}
            // User: {{ app.user ? app.user.username : "Mohamed-abidi-95" }}

            // Timestamp display in footer
            const timestampElement = document.createElement('div');
            timestampElement.className = 'text-center text-muted mt-4 small';
            timestampElement.innerHTML = `<i class="fas fa-clock me-1"></i> Last updated: ${formattedDate} by ${currentUser}`;
            document.querySelector('.container').appendChild(timestampElement);
        });
    </script>
{% endblock %}



===================================================
FICHIER: Templates\cv_generator\welcome.html.twig
===================================================
{% extends 'base.html.twig' %}

{% block title %}ESPRIT CV Generator | Accueil{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Poppins:wght@500;600;700;800&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    {# Base & Core Styles #}
    <link rel="stylesheet" href="{{ asset('css/variables.css') }}">
    <link rel="stylesheet" href="{{ asset('css/base.css') }}">
    <link rel="stylesheet" href="{{ asset('css/typography.css') }}">
    <link rel="stylesheet" href="{{ asset('css/animations.css') }}">
    <link rel="stylesheet" href="{{ asset('css/responsive.css') }}">

    {# Section-specific Styles #}
    <link rel="stylesheet" href="{{ asset('css/hero.css') }}">
    <link rel="stylesheet" href="{{ asset('css/features.css') }}">
    <link rel="stylesheet" href="{{ asset('css/process.css') }}">
    <link rel="stylesheet" href="{{ asset('css/testimonials.css') }}">
    <link rel="stylesheet" href="{{ asset('css/faq.css') }}">
    <link rel="stylesheet" href="{{ asset('css/statistics.css') }}">
    <link rel="stylesheet" href="{{ asset('css/logo-marquee.css') }}">
    <link rel="stylesheet" href="{{ asset('css/cta.css') }}">
    <link rel="stylesheet" href="{{ asset('css/section_editor.css') }}">
    <link rel="stylesheet" href="{{ asset('css/cv-examples-enhancements.css') }}">

    {# Legacy/Additional Styles #}
    <!-- <link rel="stylesheet" href="{{ asset('css/template_carousel.css') }}"> -->

    <link rel="stylesheet" href="{{ asset('css/template-selection.css') }}">
    <!-- <link rel="stylesheet" href="{{ asset('css/welcome.css') }}"> -->
    <link rel="stylesheet" href="{{ asset('css/template_carousel.css') }}">
    <link rel="stylesheet" href="{{ asset('css/cv-examples-carousel.css') }}">

{% endblock %}

{% block body %}
<div class="welcome-container">
    <!-- Hero Section -->
    <!-- Hero Section OptimisÃ©e -->
    <!-- Hero Section avec composant d'exemples de CV -->
    <section class="custom-hero-section">
        <!-- Formes gÃ©omÃ©triques animÃ©es -->
        <div class="hero-shape hero-shape-1"></div>
        <div class="hero-shape hero-shape-2"></div>
        <div class="hero-shape hero-shape-3"></div>

        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-6 hero-content">
                    <!-- Badge animÃ© -->
                    <div class="hero-badge">
                        <span class="badge-pulse"></span>
                        <span class="badge-text">CV optimisÃ©s pour les recruteurs</span>
                    </div>

                    <h1 class="hero-title">CrÃ©ez un CV professionnel avec <span class="hero-accent">ESPRIT</span> CV Generator</h1>
                    <p class="hero-subtitle">GÃ©nÃ©rez un CV personnalisÃ© en quelques minutes. Choisissez parmi nos templates professionnels et boostez vos chances de dÃ©crocher le job de vos rÃªves!</p>

                    <!-- Statistiques rapides -->
                    <div class="hero-stats">
                        <div class="hero-stat-item">
                            <div class="hero-stat-number">12K+</div>
                            <div class="hero-stat-label">CV gÃ©nÃ©rÃ©s</div>
                        </div>
                        <div class="hero-stat-item">
                            <div class="hero-stat-number">85%</div>
                            <div class="hero-stat-label">Taux d'entretiens</div>
                        </div>
                        <div class="hero-stat-item">
                            <div class="hero-stat-number">4.9</div>
                            <div class="hero-stat-label">Note moyenne</div>
                        </div>
                    </div>

                    <div class="hero-buttons">
                        <a href="{{ path('app_cv_generator') }}" class="btn btn-hero-primary">
                            <i class="fas fa-file-alt me-2"></i>CrÃ©er mon CV
                        </a>
                        <a href="#templates" class="btn btn-hero-secondary">
                            <i class="fas fa-palette me-2"></i>Voir les templates
                        </a>
                    </div>
                </div>

                <!-- Composant de prÃ©visualisation de CV compact -->
                <div class="col-lg-6">
                    <div class="cv-example-showcase">
                        <div class="cv-example-container">
                            <!-- Les images de CV qui dÃ©filent -->
                            <div class="cv-examples-slider">
                                <div class="cv-example-slide active">
                                    <img src="{{ asset('images/cvs/ismail.png') }}" alt="CV Template Tech" class="cv-example-image">
                                    <div class="cv-example-label">Template Tech</div>
                                </div>
                                <div class="cv-example-slide">
                                    <img src="{{ asset('images/cvs/executive.jpg') }}" alt="CV Template Executive" class="cv-example-image">
                                    <div class="cv-example-label">ESPRIT Original</div>
                                </div>
                                <div class="cv-example-slide">
                                    <img src="{{ asset('images/cvs/6.png') }}" alt="CV Template Creative" class="cv-example-image">
                                    <div class="cv-example-label">Template Creative</div>
                                </div>
                            </div>

                            <!-- Points de navigation -->
                            <div class="cv-examples-navigation">
                                <span class="cv-nav-dot active" data-slide="0"></span>
                                <span class="cv-nav-dot" data-slide="1"></span>
                                <span class="cv-nav-dot" data-slide="2"></span>
                            </div>
                        </div>

                        <!-- Ã‰lÃ©ments dÃ©coratifs -->
                        <div class="decoration-element decoration-1">
                            <i class="fas fa-check-circle"></i>
                        </div>
                        <div class="decoration-element decoration-2">
                            <i class="fas fa-star"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Current Date and Time -->

    </section>
    <section id="templates" class="template-selection-section">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Choisissez Votre Template</h2>
                <p class="section-subtitle">SÃ©lectionnez parmi nos designs professionnels adaptÃ©s Ã  diffÃ©rents domaines</p>
            </div>

            <!-- Nouveau carousel moderne -->
            <div class="modern-carousel-container animate-on-scroll">
                <!-- ContrÃ´les principaux -->
                <div class="modern-carousel-controls">
                    <button class="modern-carousel-arrow prev" id="carousel-prev" aria-label="Template prÃ©cÃ©dent">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <div class="carousel-counter">
                        <span id="current-template">1</span><span>/</span><span id="total-templates">7</span>
                    </div>
                    <button class="modern-carousel-arrow next" id="carousel-next" aria-label="Template suivant">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>

                <!-- Carousel principal -->
                <div class="modern-carousel-wrapper" id="template-carousel">
                    <!-- Template 1 - Moderne/Professionnel -->
                    <div class="modern-carousel-item active" data-carousel-item="0" data-template="template1">
                        <div class="modern-template-card">
                            <div class="template-preview-container">
                                <img src="{{ asset('images/cvs/1.png') }}" alt="Template Tech Expert" class="template-preview" onerror="this.src='https://placeholder.pics/svg/400x600/DEDEDE/555555/Template%201'">
                                <div class="template-overlay">
                                    <span class="preview-badge"><i class="fas fa-eye"></i> AperÃ§u</span>
                                </div>
                            </div>
                            <div class="modern-template-details">
                                <div class="template-header">
                                    <h3 class="template-title">Tech Expert</h3>
                                    <div class="template-rating">
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star-half-alt"></i>
                                        <span class="rating-count">(124)</span>
                                    </div>
                                </div>
                                <p class="template-description">Un design moderne parfait pour les profils d'ingÃ©nierie et tech</p>
                                <div class="template-categories">
                                    <span class="category-tag"><i class="fas fa-code"></i> Tech</span>
                                    <span class="category-tag"><i class="fas fa-cog"></i> IngÃ©nierie</span>
                                    <span class="category-tag"><i class="fas fa-laptop-code"></i> IT</span>
                                </div>
                                <div class="template-actions">
                                    <button class="btn-template-preview" data-template="template1" data-preview="true">
                                        <i class="fas fa-search-plus"></i> Voir en dÃ©tail
                                    </button>
                                    <button class="btn-template-select select-template-btn" data-template="template1">
                                        <i class="fas fa-check-circle"></i> SÃ©lectionner
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Template 2 - Classique/Professionnel -->
                    <div class="modern-carousel-item" data-carousel-item="1" data-template="template2">
                        <div class="modern-template-card">
                            <div class="template-preview-container">
                                <img src="{{ asset('images/cvs/2.png') }}" alt="Template Executive" class="template-preview" onerror="this.src='https://placeholder.pics/svg/400x600/DEDEDE/555555/Template%202'">
                                <div class="template-overlay">
                                    <span class="preview-badge"><i class="fas fa-eye"></i> AperÃ§u</span>
                                </div>
                            </div>
                            <div class="modern-template-details">
                                <div class="template-header">
                                    <h3 class="template-title">Executive</h3>
                                    <div class="template-rating">
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <span class="rating-count">(98)</span>
                                    </div>
                                </div>
                                <p class="template-description">Design classique et Ã©lÃ©gant parfait pour les profils business et management</p>
                                <div class="template-categories">
                                    <span class="category-tag"><i class="fas fa-briefcase"></i> Business</span>
                                    <span class="category-tag"><i class="fas fa-chart-line"></i> Management</span>
                                    <span class="category-tag"><i class="fas fa-user-tie"></i> ExÃ©cutif</span>
                                </div>
                                <div class="template-actions">
                                    <button class="btn-template-preview" data-template="template2" data-preview="true">
                                        <i class="fas fa-search-plus"></i> Voir en dÃ©tail
                                    </button>
                                    <button class="btn-template-select select-template-btn" data-template="template2">
                                        <i class="fas fa-check-circle"></i> SÃ©lectionner
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Template 3-7 - Similaires aux modÃ¨les prÃ©cÃ©dents ... -->
                    <!-- Templates 3 Ã  7 conservÃ©s tels quels -->

                </div>

                <!-- Thumbnails navigation -->
                <div class="template-thumbnails" role="tablist">
                    <button class="template-thumbnail active" data-carousel-goto="0" aria-label="Template 1" aria-controls="template-carousel" role="tab" aria-selected="true">
                        <img src="{{ asset('images/cvs/1.png') }}" alt="Tech Expert" class="thumbnail-img" onerror="this.src='https://placeholder.pics/svg/100x150/DEDEDE/555555/1'">
                    </button>
                    <button class="template-thumbnail" data-carousel-goto="1" aria-label="Template 2" aria-controls="template-carousel" role="tab" aria-selected="false">
                        <img src="{{ asset('images/cvs/2.png') }}" alt="Executive" class="thumbnail-img" onerror="this.src='https://placeholder.pics/svg/100x150/DEDEDE/555555/2'">
                    </button>
                    <!-- Autres miniatures... -->
                </div>
            </div>

            <!-- Filtres de template -->
            <div class="template-filters animate-on-scroll">
                <div class="filter-section">
                    <h4 class="filter-title">Filtrer par catÃ©gorie</h4>
                    <div class="filter-options">
                        <button class="filter-button active" data-filter="all">Tous</button>
                        <button class="filter-button" data-filter="modern">Moderne</button>
                        <button class="filter-button" data-filter="classic">Classique</button>
                        <button class="filter-button" data-filter="creative">CrÃ©atif</button>
                        <button class="filter-button" data-filter="professional">Professionnel</button>
                        <button class="filter-button" data-filter="academic">AcadÃ©mique</button>
                    </div>
                </div>

                <div class="filter-section">
                    <h4 class="filter-title">Filtrer par domaine</h4>
                    <div class="filter-options">
                        <button class="filter-button" data-filter="tech">Tech & IT</button>
                        <button class="filter-button" data-filter="business">Business</button>
                        <button class="filter-button" data-filter="engineering">IngÃ©nierie</button>
                        <button class="filter-button" data-filter="academic">AcadÃ©mique</button>
                        <button class="filter-button" data-filter="creative">Design & CrÃ©ation</button>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Features Section -->
    <section class="features-outer-section py-5 my-5">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">CaractÃ©ristiques Principales</h2>
                <p class="section-subtitle">Notre gÃ©nÃ©rateur de CV offre tout ce dont vous avez besoin pour crÃ©er un CV professionnel qui vous distingue des autres candidats</p>
            </div>

            <div class="row">
                <div class="col-lg-4 col-md-6 animate-on-scroll">
                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-paint-brush"></i>
                        </div>
                        <h3 class="feature-title">Templates Professionnels</h3>
                        <p class="feature-text">Choisissez parmi une variÃ©tÃ© de templates modernes et professionnels adaptÃ©s Ã  diffÃ©rents secteurs d'activitÃ©.</p>
                        <a href="#templates" class="feature-link">
                            Explorer les templates <i class="fas fa-arrow-right"></i>
                        </a>
                    </div>
                </div>

                <div class="col-lg-4 col-md-6 animate-on-scroll">
                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-magic"></i>
                        </div>
                        <h3 class="feature-title">Interface Intuitive</h3>
                        <p class="feature-text">Notre interface conviviale vous guide pas Ã  pas dans la crÃ©ation de votre CV, sans aucune compÃ©tence technique requise.</p>
                        <a href="{{ path('app_cv_generator') }}" class="feature-link">
                            Essayer maintenant <i class="fas fa-arrow-right"></i>
                        </a>
                    </div>
                </div>

                <div class="col-lg-4 col-md-6 animate-on-scroll">
                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-download"></i>
                        </div>
                        <h3 class="feature-title">Export PDF</h3>
                        <p class="feature-text">TÃ©lÃ©chargez instantanÃ©ment votre CV en format PDF de haute qualitÃ©, prÃªt Ã  Ãªtre envoyÃ© aux recruteurs.</p>
                        <a href="{{ path('app_cv_generator') }}" class="feature-link">
                            CrÃ©er mon CV <i class="fas fa-arrow-right"></i>
                        </a>
                    </div>
                </div>

                <!-- Autres cartes de fonctionnalitÃ©s... -->
            </div>
        </div>
    </section>

    <!-- Process Section -->
    <section class="process-section py-5 my-5 bg-light">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Comment Ã§a fonctionne</h2>
                <p class="section-subtitle">CrÃ©ez votre CV professionnel en 3 Ã©tapes simples</p>
            </div>

            <div class="row process-steps">
                <!-- Step 1 -->
                <div class="col-lg-4 animate-on-scroll">
                    <div class="process-step">
                        <div class="process-number">1</div>
                        <div class="process-icon">
                            <i class="fas fa-palette"></i>
                        </div>
                        <h3 class="process-title">Choisissez un template</h3>
                        <p class="process-description">Parcourez notre collection de templates professionnels et sÃ©lectionnez celui qui correspond le mieux Ã  votre profil et au secteur visÃ©.</p>
                    </div>
                </div>

                <!-- Step 2 -->
                <div class="col-lg-4 animate-on-scroll">
                    <div class="process-step">
                        <div class="process-number">2</div>
                        <div class="process-icon">
                            <i class="fas fa-edit"></i>
                        </div>
                        <h3 class="process-title">Ajoutez votre contenu</h3>
                        <p class="process-description">ComplÃ©tez chaque section avec vos informations personnelles, expÃ©riences professionnelles, formations et compÃ©tences.</p>
                    </div>
                </div>

                <!-- Step 3 -->
                <div class="col-lg-4 animate-on-scroll">
                    <div class="process-step">
                        <div class="process-number">3</div>
                        <div class="process-icon">
                            <i class="fas fa-download"></i>
                        </div>
                        <h3 class="process-title">TÃ©lÃ©chargez votre CV</h3>
                        <p class="process-description">PrÃ©visualisez votre CV, apportez les derniÃ¨res modifications si nÃ©cessaire, puis tÃ©lÃ©chargez-le en format PDF haute qualitÃ©.</p>
                    </div>
                </div>
            </div>

            <div class="text-center mt-5 animate-on-scroll">
                <a href="{{ path('app_cv_generator') }}" class="btn btn-primary btn-lg">
                    <i class="fas fa-rocket me-2"></i>Commencer maintenant
                </a>
            </div>
        </div>
    </section>

    <section id="cv-examples" class="cv-examples-section py-5">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Exemples de CV</h2>
                <p class="section-subtitle">DÃ©couvrez quelques exemples de CV crÃ©Ã©s avec notre gÃ©nÃ©rateur</p>
            </div>

            <div class="row justify-content-center">
                <div class="col-12">
                    <!-- Carrousel des exemples de CV -->
                    <div class="cv-examples-carousel" tabindex="0" aria-label="Exemples de CV">
                        <!-- Annonce pour lecteurs d'Ã©cran -->
                        <div class="sr-only-announcement" aria-live="polite" role="status" style="position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0, 0, 0, 0); white-space: nowrap; border: 0;"></div>

                        <!-- Navigation du carrousel -->
                        <div class="carousel-navigation">
                            <button class="carousel-btn prev-btn" aria-label="Template prÃ©cÃ©dent">
                                <i class="fas fa-chevron-left"></i>
                            </button>
                            <div class="carousel-indicators" role="tablist">
                                <span class="indicator active" data-index="0" role="tab" aria-selected="true" aria-label="Template Ã‰lÃ©gant" tabindex="0"></span>
                                <span class="indicator" data-index="1" role="tab" aria-selected="false" aria-label="Template Moderne" tabindex="0"></span>
                            </div>
                            <button class="carousel-btn next-btn" aria-label="Template suivant">
                                <i class="fas fa-chevron-right"></i>
                            </button>
                        </div>

                        <!-- Conteneur des CV -->
                        <div class="cv-carousel-container">
                            <!-- Slide 1 - Template Ã‰lÃ©gant -->
                            <div class="cv-slide active" aria-hidden="false">
                                <div class="template-label">Template Ã‰lÃ©gant</div>
                                <div class="cv-container">
                                    <div class="header">
                                        <img src="{{ asset('images/cvs/profile-example.jpg') }}" alt="Photo de profil" class="profile-img" onerror="this.src='{{ asset('images/placeholder-profile.jpg') }}'">
                                        <h1>Mohamed ABIDI</h1>
                                        <h2>Business Information Systems</h2>
                                        <p class="about-me">BAC + 3 en informatique de gestion, Ã©tudiant Ã  ESPRIT SCHOOL OF BUSINESS. SpÃ©cialisÃ© en dÃ©veloppement web avec le stack MERN et en gestion des donnÃ©es. ExpÃ©rience en gestion de sponsoring et administration de club.</p>
                                    </div>

                                    <div class="main-content">
                                        <div class="left-column">
                                            <div class="info">
                                                <h3 class="section-title">Contact</h3>
                                                <div class="info-item">
                                                    <p>TÃ©lÃ©phone : +216 23 199 953</p>
                                                    <p>Email : mohamed.abidi@esprit.tn</p>
                                                    <p>Adresse : Sousse, Hammamet Sud / Tozeur, Nefta</p>
                                                </div>
                                            </div>

                                            <div class="languages">
                                                <h3 class="section-title">Langues</h3>
                                                <div class="language-item">
                                                    <p>FranÃ§ais (B2 selon Rosetta Stone)</p>
                                                    <p>Anglais (B2 selon Rosetta Stone)</p>
                                                    <p>Arabe (Natif)</p>
                                                </div>
                                            </div>

                                            <div class="interests">
                                                <h3 class="section-title">IntÃ©rÃªts</h3>
                                                <div class="interest-item">
                                                    <p>DÃ©veloppement web</p>
                                                    <p>Programmation JavaScript</p>
                                                    <p>Big Data</p>
                                                </div>
                                            </div>

                                            <div class="competences">
                                                <h3 class="section-title">CompÃ©tences</h3>

                                                <div class="skills">
                                                    <div class="skill-category">
                                                        <h4>Techniques</h4>
                                                        <ul class="skill-list">
                                                            <li>MERN Stack</li>
                                                            <li>JavaScript</li>
                                                            <li>Gestion des donnÃ©es</li>
                                                        </ul>
                                                    </div>

                                                    <div class="skill-category">
                                                        <h4>Professionnelles</h4>
                                                        <ul class="skill-list">
                                                            <li>Gestion</li>
                                                            <li>Ã‰conomie</li>
                                                            <li>Administration</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="right-column">
                                            <div class="experiences">
                                                <h3 class="section-title">ExpÃ©riences Professionnelles</h3>

                                                <div class="experience">
                                                    <div class="experience-title">Responsable Sponsoring <span class="experience-company">- TUNIVISIONS ESPRIT</span></div>
                                                    <div class="experience-date">2022 - PrÃ©sent</div>
                                                    <div class="experience-description">
                                                        <ul>
                                                            <li>Gestion du secteur du club Tunivisions Esprit, avec responsabilitÃ© de la recherche et nÃ©gociation des partenariats</li>
                                                            <li>Membre du conseil d'administration du club Tunivisions Esprit, participant aux dÃ©cisions stratÃ©giques et Ã  la gouvernance</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="education">
                                                <h3 class="section-title">Formations</h3>

                                                <div class="education-item">
                                                    <div class="education-title">Licence en Business Computing <span class="education-institution">- ESPRIT SCHOOL OF BUSINESS</span></div>
                                                    <div class="education-date">2021 - PrÃ©sent</div>
                                                    <div class="education-description">
                                                        <p>Parcours en Business Information Systems (BIS), spÃ©cialisation en dÃ©veloppement web et gestion des donnÃ©es.</p>
                                                    </div>
                                                </div>

                                                <div class="education-item">
                                                    <div class="education-title">BaccalaurÃ©at Sciences <span class="education-institution">- LycÃ©e BECHIR KHRAYEF NEFTA</span></div>
                                                    <div class="education-date">2020</div>
                                                    <div class="education-description">
                                                        <p>Formation scientifique gÃ©nÃ©rale ayant permis l'admission Ã  ESPRIT SCHOOL OF BUSINESS.</p>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="skills-section">
                                                <h3 class="section-title">CompÃ©tences spÃ©cifiques</h3>
                                                <p>MaÃ®trise des techniques actualisÃ©es en dÃ©veloppement web avec le stack MERN (MongoDB, Express, React, Node.js). DÃ©veloppeur amateur en JavaScript avec connaissances approfondies dans le domaine de la gestion des donnÃ©es et du Big Data. CompÃ©tences en gestion de projet et en Ã©conomie.</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Slide 2 - Template Moderne -->
                            <div class="cv-slide" aria-hidden="true">
                                <div class="template-label">Template Moderne</div>
                                <div class="cv-container">
                                    <div class="header">
                                        <img src="{{ asset('images/cvs/profile-example.jpg') }}" alt="Photo de profil" class="profile-img" onerror="this.src='{{ asset('images/placeholder-profile.jpg') }}'">
                                        <div class="name-title">
                                            <h1>Mohamed ABIDI</h1>
                                            <h2>3Ã¨me annÃ©e BIS (Business Information Systems)</h2>
                                            <p>BAC + 3 en informatique de gestion, actuellement Ã©tudiant Ã  ESPRIT SCHOOL OF BUSINESS, spÃ©cialisÃ© en dÃ©veloppement web et gestion des donnÃ©es. PassionnÃ© par l'innovation technologique et les solutions numÃ©riques pour les entreprises.</p>
                                        </div>
                                    </div>

                                    <div class="main-content">
                                        <div class="left-column">
                                            <div class="info">
                                                <h3 class="section-title">Informations</h3>
                                                <div class="info-item">
                                                    <p><strong>TÃ©lÃ©phone :</strong> +216 23 199 953</p>
                                                    <p><strong>Email :</strong> mohamed.abidi@esprit.tn</p>
                                                    <p><strong>Adresse :</strong> Sousse, Hammamet Sud / Tozeur, Nefta</p>
                                                    <p><strong>LinkedIn :</strong> linkedin.com/in/mohamedabidi</p>
                                                    <p><strong>GitHub :</strong> github.com/mohamed-abidi</p>
                                                </div>
                                            </div>

                                            <div class="languages">
                                                <h3 class="section-title">Langues</h3>
                                                <div class="language-item">
                                                    <p>FranÃ§ais (B2 selon Rosetta Stone)</p>
                                                    <p>Anglais (B2 selon Rosetta Stone)</p>
                                                    <p>Arabe (Natif)</p>
                                                </div>
                                            </div>

                                            <div class="interests">
                                                <h3 class="section-title">IntÃ©rÃªts</h3>
                                                <div class="interest-item">
                                                    <p>DÃ©veloppement web</p>
                                                    <p>Gestion des donnÃ©es</p>
                                                    <p>Programmation JavaScript</p>
                                                    <p>Intelligence artificielle</p>
                                                    <p>Big Data & Analytics</p>
                                                </div>
                                            </div>

                                            <div class="certifications">
                                                <h3 class="section-title">Certifications</h3>
                                                <div class="certification-item">
                                                    <div class="certification-title">Rosetta Stone - Anglais B2</div>
                                                    <div class="certification-date">2023</div>
                                                </div>
                                                <div class="certification-item">
                                                    <div class="certification-title">Rosetta Stone - FranÃ§ais B2</div>
                                                    <div class="certification-date">2023</div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="right-column">
                                            <div class="objective">
                                                <h3 class="section-title">Objectif Professionnel</h3>
                                                <p>Ã‰tudiant motivÃ© en informatique de gestion cherchant Ã  mettre en pratique mes compÃ©tences en dÃ©veloppement web et gestion des donnÃ©es dans un environnement professionnel innovant. Je souhaite contribuer Ã  des projets qui combinent technologie et solutions d'affaires pour rÃ©pondre aux dÃ©fis des entreprises modernes.</p>
                                            </div>

                                            <div class="experiences">
                                                <h3 class="section-title">ExpÃ©riences Professionnelles</h3>

                                                <div class="experience">
                                                    <div class="experience-title">Responsable Sponsoring - TUNIVISIONS ESPRIT</div>
                                                    <div class="experience-date">2022 - PrÃ©sent</div>
                                                    <div class="experience-description">
                                                        <ul>
                                                            <li>Gestion du secteur du club Tunivisions Esprit, coordination de l'Ã©quipe sponsoring</li>
                                                            <li>Membre du conseil d'administration du club Tunivisions Esprit</li>
                                                            <li>Ã‰laboration et mise en Å“uvre de stratÃ©gies pour attirer des sponsors</li>
                                                            <li>NÃ©gociation de partenariats et suivi des relations avec les sponsors</li>
                                                        </ul>
                                                    </div>
                                                </div>

                                                <div class="experience">
                                                    <div class="experience-title">DÃ©veloppeur Web Junior - Projet acadÃ©mique</div>
                                                    <div class="experience-date">2023</div>
                                                    <div class="experience-description">
                                                        <ul>
                                                            <li>DÃ©veloppement d'applications web avec la stack MERN</li>
                                                            <li>Conception et implÃ©mentation de bases de donnÃ©es</li>
                                                            <li>Collaboration en Ã©quipe sur des projets de dÃ©veloppement</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="education">
                                                <h3 class="section-title">Formations</h3>

                                                <div class="education-item">
                                                    <div class="education-title">LICENCE EN BUSINESS COMPUTING - ESPRIT SCHOOL OF BUSINESS</div>
                                                    <div class="education-date">2021 - PrÃ©sent</div>
                                                    <div class="education-description">
                                                        <p>Parcours en Business Information Systems (BIS). Formation couvrant les aspects techniques et managÃ©riaux des systÃ¨mes d'information dans l'entreprise.</p>
                                                    </div>
                                                </div>

                                                <div class="education-item">
                                                    <div class="education-title">BAC SCIENCES - LycÃ©e BECHIR KHRAYEF NEFTA</div>
                                                    <div class="education-date">2020</div>
                                                    <div class="education-description">
                                                        <p>Formation scientifique gÃ©nÃ©rale ayant permis l'admission Ã  ESPRIT SCHOOL OF BUSINESS.</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="text-center mt-4">
                        <a href="{{ path('app_cv_generator') }}" class="btn btn-primary btn-lg">
                            <i class="fas fa-file-alt me-2"></i>CrÃ©er mon CV avec ce style
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Testimonials Section AmÃ©liorÃ©e -->
    <section class="testimonials-section py-5 bg-light">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">TÃ©moignages</h2>
                <p class="section-subtitle">DÃ©couvrez ce que nos utilisateurs disent de notre gÃ©nÃ©rateur de CV</p>
            </div>

            <div class="testimonials-grid">
                <!-- TÃ©moignage 1 -->
                <div class="testimonial-card animate-on-scroll">
                    <div class="testimonial-quote">"</div>
                    <p class="testimonial-content">J'ai obtenu trois entretiens en une semaine aprÃ¨s avoir refait mon CV avec cet outil. L'interface est intuitive et les templates sont vraiment professionnels. Je le recommande vivement!</p>
                    <div class="testimonial-user">
                        <img src="{{ asset('images/avatar-1.jpg') }}" alt="Sophia Laroui" class="testimonial-avatar" onerror="this.src='https://ui-avatars.com/api/?name=Sofia+L&background=random'">
                        <div class="testimonial-info">
                            <h4 class="testimonial-name">Sophia Laroui</h4>
                            <p class="testimonial-position">IngÃ©nieure Logiciel</p>
                            <div class="testimonial-rating">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- TÃ©moignage 2 (Arabe tunisien) -->
                <div class="testimonial-card animate-on-scroll">
                    <div class="testimonial-quote">"</div>
                    <p class="testimonial-content" dir="rtl" lang="ar-TN">Ø¨Ø±Ø´Ø§ ÙØ±Ø­Ø§Ù† Ø¨Ø§Ù„Ø®Ø¯Ù…Ø© Ù…ØªØ§Ø¹ Ø§Ù„Ù…ÙˆÙ‚Ø¹ Ù‡Ø°Ø§. Ø¹Ù…Ù„ØªÙ„ÙŠ Ø³ÙŠÙÙŠ Ù…Ø­ØªØ±Ù… ÙˆÙ…Ù‡Ù†ÙŠ ÙˆÙÙŠ Ø¸Ø±Ù Ù†Ù‡Ø§Ø± ÙˆØ§Ø­Ø¯ Ù„Ù‚ÙŠØª Ø´ÙƒÙˆÙ† ÙŠØªØµÙ„ Ø¨ÙŠØ§ Ù„Ù„Ø§Ù†ØªØ±ÙÙŠÙˆ. Ø§Ù„Ù…ÙˆÙ‚Ø¹ Ø³Ù‡Ù„ ÙˆØªØ¹Ø§ÙˆÙ†ÙˆÙ†ÙŠ Ø¹Ù„Ù‰ Ø¨Ø§Ù‡ÙŠ.</p>
                    <div class="testimonial-user">
                        <img src="{{ asset('images/avatar-2.jpg') }}" alt="Yassine Marzougui" class="testimonial-avatar" onerror="this.src='https://ui-avatars.com/api/?name=Yassine+M&background=random'">
                        <div class="testimonial-info">
                            <h4 class="testimonial-name">ÙŠØ§Ø³ÙŠÙ† Ø§Ù„Ù…Ø±Ø²ÙˆÙ‚ÙŠ</h4>
                            <p class="testimonial-position">Ù…Ø·ÙˆØ± Ø¨Ø±Ù…Ø¬ÙŠØ§Øª</p>
                            <div class="testimonial-rating">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star-half-alt"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- TÃ©moignage 3 -->
                <div class="testimonial-card animate-on-scroll">
                    <div class="testimonial-quote">"</div>
                    <p class="testimonial-content">En tant que recruteur, je trouve que les CV gÃ©nÃ©rÃ©s par cet outil se dÃ©marquent vraiment. Ils sont clairs, bien structurÃ©s et mettent en valeur les compÃ©tences essentielles.</p>
                    <div class="testimonial-user">
                        <img src="{{ asset('images/avatar-3.jpg') }}" alt="Ahmed Ben Salem" class="testimonial-avatar" onerror="this.src='https://ui-avatars.com/api/?name=Ahmed+B&background=random'">
                        <div class="testimonial-info">
                            <h4 class="testimonial-name">Ahmed Ben Salem</h4>
                            <p class="testimonial-position">Responsable Recrutement</p>
                            <div class="testimonial-rating">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star-half-alt"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- TÃ©moignage 4 (Arabe tunisien) -->
                <div class="testimonial-card animate-on-scroll">
                    <div class="testimonial-quote">"</div>
                    <p class="testimonial-content" dir="rtl" lang="ar-TN">ÙƒÙ†Øª Ù†Ø­ÙˆØ³ Ø¹Ù„Ù‰ Ø®Ø¯Ù…Ø© Ù…Ù† Ø¹Ø§Ù… Ùˆ Ø¨Ø¹Ø¯ Ù…Ø§ Ø¹Ù…Ù„Øª Ø³ÙŠÙÙŠ ÙÙŠ Ø§Ù„Ù…ÙˆÙ‚Ø¹ Ù‡Ø°Ø§ Ù„Ù‚ÙŠØª Ø®Ø¯Ù…Ø© ÙÙŠ Ø´Ù‡Ø±. Ø§Ù„ØªÙ…Ø¨Ù„Ø§ÙŠØªØ³ Ø¹Ù†Ø¯Ù‡Ù… Ø´ÙƒÙ„Ù‡Ù… Ø­Ù„Ùˆ Ùˆ Ù…Ø­ØªØ±Ù… Ùˆ Ø§Ù„Ø³ÙŠØ³ØªØ§Ù… Ø³Ù‡Ù„.</p>
                    <div class="testimonial-user">
                        <img src="{{ asset('images/avatar-4.jpg') }}" alt="Sarra Tounsi" class="testimonial-avatar" onerror="this.src='https://ui-avatars.com/api/?name=Sarra+T&background=random'">
                        <div class="testimonial-info">
                            <h4 class="testimonial-name">Ø³Ø§Ø±Ø© Ø§Ù„ØªÙˆÙ†Ø³ÙŠ</h4>
                            <p class="testimonial-position">Ù…Ø­Ù„Ù„Ø© Ø¨ÙŠØ§Ù†Ø§Øª</p>
                            <div class="testimonial-rating">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- TÃ©moignage 5 -->
                <div class="testimonial-card animate-on-scroll">
                    <div class="testimonial-quote">"</div>
                    <p class="testimonial-content">Pour ma premiÃ¨re recherche d'emploi, j'Ã©tais perdu concernant la crÃ©ation d'un CV. Ce gÃ©nÃ©rateur m'a guidÃ© pas Ã  pas et m'a permis d'obtenir un stage dans une entreprise internationale.</p>
                    <div class="testimonial-user">
                        <img src="{{ asset('images/avatar-5.jpg') }}" alt="Yassine Trabelsi" class="testimonial-avatar" onerror="this.src='https://ui-avatars.com/api/?name=Yassine+T&background=random'">
                        <div class="testimonial-info">
                            <h4 class="testimonial-name">Yassine Trabelsi</h4>
                            <p class="testimonial-position">Ã‰tudiant en Master</p>
                            <div class="testimonial-rating">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- TÃ©moignage 7 -->
                <div class="testimonial-card animate-on-scroll">
                    <div class="testimonial-quote">"</div>
                    <p class="testimonial-content">AprÃ¨s 10 ans dans la mÃªme entreprise, j'avais besoin de rafraÃ®chir mon CV. Cet outil m'a aidÃ© Ã  rÃ©organiser mon expÃ©rience et Ã  mettre en valeur mes compÃ©tences. J'ai dÃ©crochÃ© un nouveau poste en un mois!</p>
                    <div class="testimonial-user">
                        <img src="{{ asset('images/avatar-7.jpg') }}" alt="Lina Mansouri" class="testimonial-avatar" onerror="this.src='https://ui-avatars.com/api/?name=Lina+M&background=random'">
                        <div class="testimonial-info">
                            <h4 class="testimonial-name">Lina Mansouri</h4>
                            <p class="testimonial-position">Chef de Projet Marketing</p>
                            <div class="testimonial-rating">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- FAQ Section -->
    <section class="faq-section py-5 my-5">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Questions frÃ©quentes</h2>
                <p class="section-subtitle">Tout ce que vous devez savoir sur notre gÃ©nÃ©rateur de CV</p>
            </div>

            <div class="row justify-content-center">
                <div class="col-lg-8">
                    <div class="accordion faq-accordion" id="faqAccordion">
                        <!-- Question 1 -->
                        <div class="accordion-item animate-on-scroll">
                            <h3 class="accordion-header" id="faqHeading1">
                                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#faqCollapse1" aria-expanded="true" aria-controls="faqCollapse1">
                                    Est-ce que le service est gratuit?
                                </button>
                            </h3>
                            <div id="faqCollapse1" class="accordion-collapse collapse show" aria-labelledby="faqHeading1" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    <p>Oui, notre gÃ©nÃ©rateur de CV de base est entiÃ¨rement gratuit pour les Ã©tudiants d'ESPRIT. Vous pouvez crÃ©er, modifier et exporter votre CV en PDF sans frais. Nous proposons Ã©galement des fonctionnalitÃ©s premium avec des templates exclusifs et des options avancÃ©es pour ceux qui souhaitent aller plus loin.</p>
                                </div>
                            </div>
                        </div>

                        <!-- Question 2 -->
                        <div class="accordion-item animate-on-scroll">
                            <h3 class="accordion-header" id="faqHeading2">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faqCollapse2" aria-expanded="false" aria-controls="faqCollapse2">
                                    Combien de templates de CV sont disponibles?
                                </button>
                            </h3>
                            <div id="faqCollapse2" class="accordion-collapse collapse" aria-labelledby="faqHeading2" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    <p>Nous proposons actuellement 15 templates professionnels diffÃ©rents, adaptÃ©s Ã  divers secteurs d'activitÃ© et niveaux d'expÃ©rience. Chaque template est entiÃ¨rement personnalisable en termes de couleurs, polices et mise en page. Nous ajoutons rÃ©guliÃ¨rement de nouveaux designs pour vous offrir toujours plus d'options.</p>
                                </div>
                            </div>
                        </div>

                        <!-- Question 3 -->
                        <div class="accordion-item animate-on-scroll">
                            <h3 class="accordion-header" id="faqHeading3">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faqCollapse3" aria-expanded="false" aria-controls="faqCollapse3">
                                    Puis-je modifier mon CV aprÃ¨s l'avoir crÃ©Ã©?
                                </button>
                            </h3>
                            <div id="faqCollapse3" class="accordion-collapse collapse" aria-labelledby="faqHeading3" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    <p>Absolument! Vous pouvez modifier votre CV autant de fois que vous le souhaitez. Toutes vos informations sont sauvegardÃ©es dans votre compte, ce qui vous permet de revenir facilement pour effectuer des mises Ã  jour ou mÃªme changer complÃ¨tement de template sans avoir Ã  ressaisir toutes vos donnÃ©es.</p>
                                </div>
                            </div>
                        </div>

                        <!-- Question 4 -->
                        <div class="accordion-item animate-on-scroll">
                            <h3 class="accordion-header" id="faqHeading4">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faqCollapse4" aria-expanded="false" aria-controls="faqCollapse4">
                                    Les CV crÃ©Ã©s sont-ils optimisÃ©s pour les ATS?
                                </button>
                            </h3>
                            <div id="faqCollapse4" class="accordion-collapse collapse" aria-labelledby="faqHeading4" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    <p>Oui, tous nos templates sont conÃ§us pour Ãªtre compatibles avec les systÃ¨mes de suivi des candidatures (ATS) utilisÃ©s par les recruteurs. Cela signifie que votre CV sera correctement analysÃ© par ces systÃ¨mes, augmentant vos chances d'Ãªtre sÃ©lectionnÃ© pour un entretien. Notre systÃ¨me intÃ¨gre Ã©galement des recommandations pour optimiser le contenu de votre CV en fonction des critÃ¨res ATS.</p>
                                </div>
                            </div>
                        </div>

                        <!-- Question 5 -->
                        <div class="accordion-item animate-on-scroll">
                            <h3 class="accordion-header" id="faqHeading5">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faqCollapse5" aria-expanded="false" aria-controls="faqCollapse5">
                                    Comment puis-je obtenir de l'aide si j'en ai besoin?
                                </button>
                            </h3>
                            <div id="faqCollapse5" class="accordion-collapse collapse" aria-labelledby="faqHeading5" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    <p>Nous offrons plusieurs options d'assistance: vous trouverez des guides dÃ©taillÃ©s dans notre centre d'aide, des conseils intÃ©grÃ©s Ã  chaque Ã©tape de la crÃ©ation de votre CV, et notre Ã©quipe de support est disponible par email ou chat en direct du lundi au vendredi, de 9h Ã  18h. Pour les Ã©tudiants d'ESPRIT, des sessions d'aide personnalisÃ©e sont Ã©galement organisÃ©es rÃ©guliÃ¨rement sur le campus.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="text-center mt-5 animate-on-scroll">
                <a href="#" class="btn btn-outline-primary">Voir toutes les questions <i class="fas fa-arrow-right ms-2"></i></a>
            </div>
        </div>
    </section>

    <!-- Statistics Section -->
    <section class="statistics-section py-5 my-5">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Notre Impact</h2>
                <p class="section-subtitle">Des rÃ©sultats concrets qui dÃ©montrent l'efficacitÃ© de notre gÃ©nÃ©rateur de CV</p>
            </div>

            <div class="statistics-container">
                <div class="row text-center">
                    <div class="col-md-3 col-6 mb-4 mb-md-0 animate-on-scroll">
                        <div class="statistic-card">
                            <div class="statistic-icon">
                                <i class="fas fa-users"></i>
                            </div>
                            <div class="statistic-number" data-count="25000">0</div>
                            <div class="statistic-label">Utilisateurs actifs</div>
                        </div>
                    </div>

                    <div class="col-md-3 col-6 mb-4 mb-md-0 animate-on-scroll">
                        <div class="statistic-card">
                            <div class="statistic-icon">
                                <i class="fas fa-file-alt"></i>
                            </div>
                            <div class="statistic-number" data-count="120000">0</div>
                            <div class="statistic-label">CV gÃ©nÃ©rÃ©s</div>
                        </div>
                    </div>

                    <div class="col-md-3 col-6 animate-on-scroll">
                        <div class="statistic-card">
                            <div class="statistic-icon">
                                <i class="fas fa-building"></i>
                            </div>
                            <div class="statistic-number" data-count="500">0</div>
                            <div class="statistic-label">Entreprises partenaires</div>
                        </div>
                    </div>

                    <div class="col-md-3 col-6 animate-on-scroll">
                        <div class="statistic-card">
                            <div class="statistic-icon">
                                <i class="fas fa-trophy"></i>
                            </div>
                            <div class="statistic-number" data-count="85">0</div>
                            <div class="statistic-label">Taux de rÃ©ussite (%)</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Infinite Logo Carousel Section -->
    <section class="logo-marquee-section py-4">
        <div class="container">
            <div class="logo-marquee-title text-center mb-3 animate-on-scroll">
                <p>ESPRIT CV Generator est utilisÃ© par les Ã©tudiants de</p>
            </div>
        </div>

        <div class="logo-marquee-container">
            <div class="logo-track">
                <!-- Premier groupe de logos -->
                <div class="logo-item">
                    <img src="{{ asset('images/tunisie-removebg-preview.png') }}" alt="Tunisie" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/logo.png') }}" alt="ESPRIT Logo" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/espritprepa-removebg-preview.png') }}" alt="ESPRIT Prepa" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/espritesb.png') }}" alt="ESPRIT ESB" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/esprit-removebg-preview.png') }}" alt="ESPRIT" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/esprim.png') }}" alt="ESPRIM" class="logo-item-img">
                </div>

                <!-- DeuxiÃ¨me groupe de logos (dupliquÃ©s pour effet continu) -->
                <div class="logo-item">
                    <img src="{{ asset('images/tunisie-removebg-preview.png') }}" alt="Tunisie" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/logo.png') }}" alt="ESPRIT Logo" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/espritprepa-removebg-preview.png') }}" alt="ESPRIT Prepa" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/espritesb.png') }}" alt="ESPRIT ESB" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/esprit-removebg-preview.png') }}" alt="ESPRIT" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/esprim.png') }}" alt="ESPRIM" class="logo-item-img">
                </div>

                <!-- TroisiÃ¨me groupe de logos (dupliquÃ©s pour effet continu) -->
                <div class="logo-item">
                    <img src="{{ asset('images/tunisie-removebg-preview.png') }}" alt="Tunisie" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/logo.png') }}" alt="ESPRIT Logo" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/espritprepa-removebg-preview.png') }}" alt="ESPRIT Prepa" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/espritesb.png') }}" alt="ESPRIT ESB" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/esprit-removebg-preview.png') }}" alt="ESPRIT" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/esprim.png') }}" alt="ESPRIM" class="logo-item-img">
                </div>
            </div>
        </div>
    </section>

    <!-- CTA Section -->
    <section class="cta-section">
        <div class="cta-shape-1"></div>
        <div class="cta-shape-2"></div>

        <div class="container">
            <div class="cta-content">
                <h2 class="cta-title">PrÃªt Ã  crÃ©er un CV qui impressionne?</h2>
                <p class="cta-text">Rejoignez des milliers d'utilisateurs satisfaits et commencez Ã  gÃ©nÃ©rer votre CV professionnel dÃ¨s aujourd'hui. Notre outil simple et intuitif vous guide Ã  chaque Ã©tape.</p>
                <a href="{{ path('app_cv_generator') }}" class="cta-button">
                </a>

                <!-- Social Media Icons -->
            </div>
        </div>
    </section>

    <!-- Current Date and User Info -->


    <div class="social-icons-container">
        <p class="social-title">Suivez-nous sur les rÃ©seaux sociaux</p>
        <div class="social-icons">
            <a href="https://youtu.be/5FKwnZ7OFVg?si=lvX-6Wh8DjyRfuGM" target="_blank" rel="noopener noreferrer" class="social-icon" aria-label="YouTube ESPRIT">
                <i class="fab fa-youtube"></i>
            </a>
            <a href="https://www.instagram.com/esprit_ingenieur?utm_source=ig_web_button_share_sheet&igsh=ZDNlZDc0MzIxNw==" target="_blank" rel="noopener noreferrer" class="social-icon" aria-label="Instagram ESPRIT">
                <i class="fab fa-instagram"></i>
            </a>
            <a href="https://www.facebook.com/esprit.tn" target="_blank" rel="noopener noreferrer" class="social-icon" aria-label="Facebook ESPRIT">
                <i class="fab fa-facebook-f"></i>
            </a>
            <a href="https://www.linkedin.com/school/esprit_2/posts/?feedView=all" target="_blank" rel="noopener noreferrer" class="social-icon" aria-label="LinkedIn ESPRIT">
                <i class="fab fa-linkedin-in"></i>
            </a>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('js/template_carousel.js') }}"></script>
    <script src="{{ asset('js/welcome_animations.js') }}"></script>
    <script src="{{ asset('js/cv-examples-carousel.js') }}"></script>
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.14.0/Sortable.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Animation du slider d'exemples de CV
            const slides = document.querySelectorAll('.cv-example-slide');
            const dots = document.querySelectorAll('.cv-nav-dot');
            let currentSlide = 0;
            const totalSlides = slides.length;

            function showSlide(index) {
                // Masquer tous les slides
                slides.forEach(slide => {
                    slide.classList.remove('active');
                });

                // DÃ©sactiver tous les points
                dots.forEach(dot => {
                    dot.classList.remove('active');
                });

                // Activer le slide et le point correspondant
                slides[index].classList.add('active');
                dots[index].classList.add('active');

                currentSlide = index;
            }

            // Changement automatique des slides
            function nextSlide() {
                const nextIndex = (currentSlide + 1) % totalSlides;
                showSlide(nextIndex);
            }

            // Ã‰vÃ©nements pour les points de navigation
            dots.forEach((dot, index) => {
                dot.addEventListener('click', function() {
                    showSlide(index);

                    // RÃ©initialiser le timer
                    clearInterval(slideInterval);
                    slideInterval = setInterval(nextSlide, 4000);
                });
            });

            // DÃ©marrer le carrousel automatique
            let slideInterval = setInterval(nextSlide, 4000);

            // Pause de l'autoplay au survol
            const container = document.querySelector('.cv-example-container');
            container.addEventListener('mouseenter', function() {
                clearInterval(slideInterval);
            });

            container.addEventListener('mouseleave', function() {
                slideInterval = setInterval(nextSlide, 4000);
            });

            // Animation initiale
            showSlide(0);
        });


        document.addEventListener('DOMContentLoaded', function() {
            // Animation des Ã©lÃ©ments du hÃ©ros
            setTimeout(() => {
                document.querySelector('.hero-badge').classList.add('show');
                document.querySelector('.hero-title').classList.add('show');
                document.querySelector('.hero-subtitle').classList.add('show');
                document.querySelector('.hero-stats').classList.add('show');
                document.querySelector('.hero-buttons').classList.add('show');
                document.querySelector('.hero-trust')?.classList.add('show');
                document.querySelector('.hero-image-container')?.classList.add('show');
            }, 100);
        });

        document.addEventListener('DOMContentLoaded', function() {
            // Fix pour les icÃ´nes Font Awesome
            if (typeof FontAwesome === 'undefined') {
                console.warn('Font Awesome non chargÃ© correctement. Tentative de chargement...');
                const fontAwesomeLink = document.createElement('link');
                fontAwesomeLink.rel = 'stylesheet';
                fontAwesomeLink.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css';
                document.head.appendChild(fontAwesomeLink);
            }

            // Animation au dÃ©filement
            const animateElements = document.querySelectorAll('.animate-on-scroll');

            function checkScroll() {
                animateElements.forEach(element => {
                    const elementTop = element.getBoundingClientRect().top;
                    const windowHeight = window.innerHeight;

                    if (elementTop < windowHeight - 100) {
                        element.classList.add('show');
                    }
                });
            }

            // ExÃ©cuter une premiÃ¨re fois pour afficher les Ã©lÃ©ments visibles immÃ©diatement
            checkScroll();

            // Puis Ã  chaque dÃ©filement
            window.addEventListener('scroll', checkScroll);

            // Mise Ã  jour du compteur de carousel
            function updateCounter(index) {
                const currentElement = document.getElementById('current-template');
                if (currentElement) {
                    currentElement.textContent = (parseInt(index) + 1);
                }
            }

            // Navigation du carrousel
            const prevButton = document.getElementById('carousel-prev');
            const nextButton = document.getElementById('carousel-next');
            const carouselItems = document.querySelectorAll('.modern-carousel-item');
            const totalItems = carouselItems.length;

            let currentIndex = 0;

            if (prevButton && nextButton) {
                prevButton.addEventListener('click', function() {
                    currentIndex = (currentIndex - 1 + totalItems) % totalItems;
                    showSlide(currentIndex);
                });

                nextButton.addEventListener('click', function() {
                    currentIndex = (currentIndex + 1) % totalItems;
                    showSlide(currentIndex);
                });
            }

            function showSlide(index) {
                carouselItems.forEach((item, i) => {
                    if (i === index) {
                        item.classList.add('active');
                    } else {
                        item.classList.remove('active');
                    }
                });

                // Mettre Ã  jour les miniatures
                const thumbnails = document.querySelectorAll('.template-thumbnail');
                thumbnails.forEach((thumb, i) => {
                    if (i === index) {
                        thumb.classList.add('active');
                        thumb.setAttribute('aria-selected', 'true');
                    } else {
                        thumb.classList.remove('active');
                        thumb.setAttribute('aria-selected', 'false');
                    }
                });

                updateCounter(index);
            }

            // Gestion des miniatures du carousel
            const thumbnails = document.querySelectorAll('.template-thumbnail');
            thumbnails.forEach((thumbnail, index) => {
                thumbnail.addEventListener('click', function() {
                    showSlide(index);
                    currentIndex = index;
                });
            });

            // Ajouter une fonction pour le preview en taille rÃ©elle
            const previewButtons = document.querySelectorAll('.btn-template-preview');
            previewButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const templateId = this.getAttribute('data-template');
                    const templateImg = document.querySelector(`.modern-carousel-item[data-template="${templateId}"] .template-preview`).src;

                    // CrÃ©er un modal pour l'aperÃ§u
                    const modal = document.createElement('div');
                    modal.className = 'template-preview-modal';
                    modal.innerHTML = `
                        <div class="template-preview-modal-content">
                            <span class="close-preview-modal">&times;</span>
                            <h3>AperÃ§u en plein Ã©cran</h3>
                            <img src="${templateImg}" alt="AperÃ§u template" class="fullscreen-preview">
                            <div class="preview-actions">
                                <button class="btn btn-primary select-template-btn" data-template="${templateId}">
                                    <i class="fas fa-check-circle"></i> SÃ©lectionner ce template
                                </button>
                            </div>
                        </div>
                    `;

                    document.body.appendChild(modal);

                    // Ajouter le style pour le modal
                    if (!document.getElementById('modal-style')) {
                        const style = document.createElement('style');
                        style.id = 'modal-style';
                        style.textContent = `
                            .template-preview-modal {
                                position: fixed;
                                top: 0;
                                left: 0;
                                width: 100%;
                                height: 100%;
                                background: rgba(0,0,0,0.8);
                                z-index: 1000;
                                display: flex;
                                align-items: center;
                                justify-content: center;
                                opacity: 0;
                                transition: opacity 0.3s ease;
                            }
                            .template-preview-modal.active {
                                opacity: 1;
                            }
                            .template-preview-modal-content {
                                background: white;
                                padding: 30px;
                                border-radius: 12px;
                                max-width: 90%;
                                max-height: 90%;
                                overflow: auto;
                                position: relative;
                                transform: translateY(20px);
                                transition: transform 0.3s ease;
                            }
                            .template-preview-modal.active .template-preview-modal-content {
                                transform: translateY(0);
                            }
                            .close-preview-modal {
                                position: absolute;
                                top: 15px;
                                right: 20px;
                                font-size: 24px;
                                cursor: pointer;
                                color: #555;
                            }
                            .fullscreen-preview {
                                max-width: 100%;
                                height: auto;
                                display: block;
                                margin: 20px 0;
                            }
                            .preview-actions {
                                margin-top: 20px;
                                text-align: center;
                            }
                        `;

                        document.head.appendChild(style);
                    }

                    // Animation d'ouverture
                    setTimeout(() => modal.classList.add('active'), 10);

                    // Bouton de fermeture du modal
                    modal.querySelector('.close-preview-modal').addEventListener('click', function() {
                        modal.classList.remove('active');
                        setTimeout(() => modal.remove(), 300);
                    });

                    // Event listener pour le bouton select dans le modal
                    modal.querySelector('.select-template-btn').addEventListener('click', function() {
                        const templateId = this.getAttribute('data-template');
                        selectTemplate(templateId);
                        modal.classList.remove('active');
                        setTimeout(() => modal.remove(), 300);
                    });
                });
            });

            // Fonction pour sÃ©lectionner un template
            const selectTemplateButtons = document.querySelectorAll('.select-template-btn');
            selectTemplateButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const templateId = this.getAttribute('data-template');
                    selectTemplate(templateId);
                });
            });

            function selectTemplate(templateId) {
                // Simuler la sÃ©lection (rediriger vers la page de gÃ©nÃ©ration de CV avec le template)
                console.log(`Template ${templateId} sÃ©lectionnÃ©`);
                showFeedback(`Template ${templateId} sÃ©lectionnÃ©. Redirection en cours...`, 'success');

                // Dans un cas rÃ©el, rediriger vers la page avec le template sÃ©lectionnÃ©
                setTimeout(() => {
                    window.location.href = `{{ path('app_cv_generator') }}?template=${templateId}`;
                }, 1000);
            }

            // Ajouter la fonctionnalitÃ© de filtre
            const filterButtons = document.querySelectorAll('.filter-button');
            filterButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const filter = this.getAttribute('data-filter');

                    // Mettre Ã  jour l'affichage du bouton actif dans ce groupe
                    const parent = this.parentElement;
                    parent.querySelectorAll('.filter-button').forEach(btn => {
                        btn.classList.remove('active');
                    });
                    this.classList.add('active');

                    // Simuler un filtrage (dans une version rÃ©elle, filtrer les templates)
                    console.log(`Filtrage par ${filter}`);
                    showFeedback(`Filtrage par ${filter} - Actualisation des templates...`, 'info');
                });
            });

            // Fonction pour afficher les feedbacks/notifications
            function showFeedback(message, type = 'info') {
                const feedbackContainer = document.createElement('div');
                feedbackContainer.className = `feedback-toast feedback-${type}`;
                feedbackContainer.innerHTML = `
                    <div class="feedback-icon">
                        <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'}"></i>
                    </div>
                    <div class="feedback-content">
                        ${message}
                    </div>
                `;

                document.body.appendChild(feedbackContainer);

                // Style pour les toasts
                if (!document.getElementById('feedback-style')) {
                    const style = document.createElement('style');
                    style.id = 'feedback-style';
                    style.textContent = `
                        .feedback-toast {
                            position: fixed;
                            bottom: 30px;
                            right: 30px;
                            padding: 15px 20px;
                            border-radius: 8px;
                            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
                            display: flex;
                            align-items: center;
                            z-index: 1000;
                            opacity: 0;
                            transform: translateY(20px);
                            animation: feedback-fade-in 0.3s ease forwards, feedback-fade-out 0.3s ease forwards 3s;
                        }

                        .feedback-icon {
                            margin-right: 15px;
                            font-size: 20px;
                        }

                        .feedback-content {
                            font-size: 14px;
                        }

                        .feedback-success {
                            background-color: #d4edda;
                            color: #155724;
                            border-left: 4px solid #28a745;
                        }

                        .feedback-info {
                            background-color: #d1ecf1;
                            color: #0c5460;
                            border-left: 4px solid #17a2b8;
                        }

                        .feedback-error {
                            background-color: #f8d7da;
                            color: #721c24;
                            border-left: 4px solid #dc3545;
                        }

                        @keyframes feedback-fade-in {
                            to {
                                opacity: 1;
                                transform: translateY(0);
                            }
                        }

                        @keyframes feedback-fade-out {
                            from {
                                opacity: 1;
                                transform: translateY(0);
                            }
                            to {
                                opacity: 0;
                                transform: translateY(-20px);
                            }
                        }
                    `;

                    document.head.appendChild(style);
                }

                // Supprimer le toast aprÃ¨s animation
                setTimeout(() => {
                    feedbackContainer.remove();
                }, 3300);
            }

            // Animation des statistiques
            function animateStatistics() {
                const statNumbers = document.querySelectorAll('.statistic-number');

                statNumbers.forEach(stat => {
                    const targetValue = parseInt(stat.getAttribute('data-count'));
                    const duration = 2000; // 2 secondes
                    const stepTime = 50; // 50ms par Ã©tape
                    const steps = duration / stepTime;
                    const increment = targetValue / steps;
                    let currentValue = 0;

                    const counter = setInterval(() => {
                        currentValue += increment;
                        if (currentValue >= targetValue) {
                            stat.textContent = targetValue.toLocaleString();
                            clearInterval(counter);
                        } else {
                            stat.textContent = Math.floor(currentValue).toLocaleString();
                        }
                    }, stepTime);
                });
            }

            // Observer pour dÃ©clencher l'animation des statistiques lorsqu'elles sont visibles
            const statisticsSection = document.querySelector('.statistics-section');
            if (statisticsSection) {
                const observer = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            animateStatistics();
                            observer.unobserve(entry.target);
                        }
                    });
                }, { threshold: 0.2 });

                observer.observe(statisticsSection);
            }

            // Mise Ã  jour de la date et de l'heure actuelles
            const currentDate = document.querySelector('.text-center.mt-4.mb-4 div:first-child');
            if (currentDate) {
                currentDate.textContent = 'Date et heure actuelles (UTC): 2025-04-29 13:05:09';
            }

            // Mise Ã  jour du nom d'utilisateur connectÃ©
            const currentUser = document.querySelector('.text-center.mt-4.mb-4 div:last-child');
            if (currentUser) {
                currentUser.textContent = 'Utilisateur connectÃ©: Mohamed-abidi-95';
            }
        });
    </script>
{% endblock %}


===================================================
FICHIER: Templates\cv_generator\_additional.html.twig
===================================================
<div class="form-section" id="additionalSection">
    <h4 class="form-section-title">
        <i class="fas fa-plus-circle"></i>
        Additional Information
    </h4>
    <div class="row g-4">
        <div class="col-md-6">
            <label class="form-label">Languages</label>
            <textarea class="form-control" name="languages" rows="2" placeholder="e.g. English (Fluent), French (Intermediate), Arabic (Native)"></textarea>
        </div>
        <div class="col-md-6">
            <label class="form-label">Interests & Hobbies</label>
            <textarea class="form-control" name="interests" rows="2" placeholder="e.g. Reading, Photography, Traveling"></textarea>
        </div>
        <div class="col-md-12">
            <label class="form-label">Publications/Projects/Certifications</label>
            <textarea class="form-control" name="certifications" rows="4" placeholder="List any relevant certifications, publications, or notable projects"></textarea>
        </div>
    </div>
</div>


===================================================
FICHIER: Templates\cv_generator\_education.html.twig
===================================================
<div class="form-section" id="educationSection">
    <h4 class="form-section-title">
        <i class="fas fa-graduation-cap"></i>
        Education
    </h4>
    <div id="educationContainer">
        <div class="entry-container">
            <div class="row g-3">
                <div class="col-md-6">
                    <label class="form-label">Degree / Certificate</label>
                    <input type="text" class="form-control" name="education[0][degree]" placeholder="e.g. Bachelor of Science in Computer Science" data-required="true">
                </div>
                <div class="col-md-6">
                    <label class="form-label">Institution</label>
                    <input type="text" class="form-control" name="education[0][institution]" placeholder="e.g. ESPRIT School of Engineering" required>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Start Date</label>
                    <input type="date" class="form-control" name="education[0][startDate]" required>
                </div>
                <div class="col-md-6">
                    <label class="form-label">End Date</label>
                    <div class="input-group">
                        <input type="date" class="form-control" name="education[0][endDate]">
                        <div class="input-group-text">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="currentEducation0">
                                <label class="form-check-label" for="currentEducation0">Present</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <label class="form-label">Description</label>
                    <textarea class="form-control" name="education[0][description]" rows="2" placeholder="Include relevant coursework, honors, achievements, etc."></textarea>
                </div>
            </div>
        </div>
    </div>
    <button type="button" class="btn btn-add" id="addEducation">
        <i class="fas fa-plus"></i> Add Another Education
    </button>
</div>


===================================================
FICHIER: Templates\cv_generator\_experience.html.twig
===================================================
<div class="form-section" id="experienceSection">
    <h4 class="form-section-title">
        <i class="fas fa-briefcase"></i>
        Work Experience
    </h4>
    <div id="experienceContainer">
        <div class="entry-container">
            <div class="row g-3">
                <div class="col-md-6">
                    <label class="form-label">Position / Job Title</label>
                    <input type="text" class="form-control" name="experience[0][position]" placeholder="e.g. Senior Developer" required>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Company / Organization</label>
                    <input type="text" class="form-control" name="experience[0][company]" placeholder="e.g. Tech Solutions Inc." required>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Start Date</label>
                    <input type="date" class="form-control" name="experience[0][startDate]" required>
                </div>
                <div class="col-md-6">
                    <label class="form-label">End Date</label>
                    <div class="input-group">
                        <input type="date" class="form-control" name="experience[0][endDate]">
                        <div class="input-group-text">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="currentPosition0">
                                <label class="form-check-label" for="currentPosition0">Present</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <label class="form-label">Description</label>
                    <textarea class="form-control" name="experience[0][description]" rows="4" placeholder="Describe your responsibilities, achievements, projects, etc."></textarea>
                </div>
            </div>
        </div>
    </div>
    <button type="button" class="btn btn-add" id="addExperience">
        <i class="fas fa-plus"></i> Add Another Experience
    </button>
</div>


===================================================
FICHIER: Templates\cv_generator\_form_scripts.html.twig
===================================================
document.addEventListener('DOMContentLoaded', function() {
// Form Section Navigation
function initFormNavigation() {
const sections = document.querySelectorAll('.form-section-page');
const nextButtons = document.querySelectorAll('.next-section');
const prevButtons = document.querySelectorAll('.prev-section');
const reviewButton = document.querySelector('.btn-submit-review');
const progressBar = document.querySelector('.progress-bar');
const stepItems = document.querySelectorAll('.step-item');

// Show section
function showSection(sectionId) {
// Hide all sections
sections.forEach(section => {
section.classList.remove('active');
});

// Show the target section
const targetSection = document.getElementById('section-' + sectionId);
if (targetSection) {
targetSection.classList.add('active');

// Update progress bar
if (progressBar) {
progressBar.style.width = ((sectionId - 1) * 20) + '%';
}

// Update step items
stepItems.forEach((step, index) => {
if (index + 1 < sectionId) {
step.classList.add('completed');
step.classList.remove('active');
} else if (index + 1 === parseInt(sectionId)) {
step.classList.add('active');
step.classList.remove('completed');
} else {
step.classList.remove('active', 'completed');
}
});

// Scroll to top of form
const formCard = document.querySelector('.card');
if (formCard) {
formCard.scrollIntoView({ behavior: 'smooth', block: 'start' });
}
}
}

// Next button click
nextButtons.forEach(button => {
button.addEventListener('click', function() {
const nextSection = this.getAttribute('data-next');
if (nextSection) {
// Validate current section here if needed
showSection(nextSection);
}
});
});

// Previous button click
prevButtons.forEach(button => {
button.addEventListener('click', function() {
const prevSection = this.getAttribute('data-prev');
if (prevSection) {
showSection(prevSection);
}
});
});

// Review button click
if (reviewButton) {
reviewButton.addEventListener('click', function() {
// Generate review content
generateReview();
showSection('6');
});
}

// Generate review content
function generateReview() {
const reviewContent = document.getElementById('reviewContent');
if (!reviewContent) return;

const firstName = document.getElementById('firstName')?.value || 'First Name';
const lastName = document.getElementById('lastName')?.value || 'Last Name';

// Generate comprehensive review HTML with all form data
let reviewHTML = `
<div class="row">
    <div class="col-md-12 mb-4">
        <h5>Personal Information</h5>
        <table class="table table-bordered table-sm">
            <tbody>
            <tr>
                <th>Name</th>
                <td>${firstName} ${lastName}</td>
            </tr>
            <tr>
                <th>Job Title</th>
                <td>${document.getElementById('jobTitle')?.value || '-'}</td>
            </tr>
            <tr>
                <th>Email</th>
                <td>${document.getElementById('email')?.value || '-'}</td>
            </tr>
            <tr>
                <th>Phone</th>
                <td>${document.getElementById('phone')?.value || '-'}</td>
            </tr>
            </tbody>
        </table>
    </div>
    <div class="col-md-12 mb-4">
        <h5>Education</h5>
        <ul class="list-group">
            `;

            // Add education entries
            const educationEntries = document.querySelectorAll('#educationContainer .entry-container');
            if (educationEntries.length > 0) {
            educationEntries.forEach((entry, index) => {
            const degree = entry.querySelector('input[name$="[degree]"]')?.value || '-';
            const institution = entry.querySelector('input[name$="[institution]"]')?.value || '-';

            reviewHTML += `
            <li class="list-group-item">
                <strong>${degree}</strong> at ${institution}
            </li>
            `;
            });
            } else {
            reviewHTML += `
            <li class="list-group-item text-muted">No education entries added</li>
            `;
            }

            reviewHTML += `
        </ul>
    </div>
    <div class="col-md-12 mb-4">
        <h5>Experience</h5>
        <ul class="list-group">
            `;

            // Add experience entries
            const experienceEntries = document.querySelectorAll('#experienceContainer .entry-container');
            if (experienceEntries.length > 0) {
            experienceEntries.forEach((entry, index) => {
            const position = entry.querySelector('input[name$="[position]"]')?.value || '-';
            const company = entry.querySelector('input[name$="[company]"]')?.value || '-';

            reviewHTML += `
            <li class="list-group-item">
                <strong>${position}</strong> at ${company}
            </li>
            `;
            });
            } else {
            reviewHTML += `
            <li class="list-group-item text-muted">No experience entries added</li>
            `;
            }

            reviewHTML += `
        </ul>
    </div>
    <div class="col-md-12">
        <h5>Skills</h5>
        <div>
            `;

            // Add skills
            const skills = document.querySelectorAll('.skill-badge');
            if (skills.length > 0) {
            skills.forEach(skill => {
            const skillText = skill.textContent.replace('Ã—', '').trim();
            reviewHTML += `<span class="badge bg-secondary m-1">${skillText}</span>`;
            });
            } else {
            reviewHTML += `<p class="text-muted">No skills added</p>`;
            }

            reviewHTML += `
        </div>
    </div>
</div>
`;

reviewContent.innerHTML = reviewHTML;
}
}

// Autofill functionality
function setupAutofill() {
const autofillBtn = document.getElementById('autofillBtn');
if (!autofillBtn) return;

autofillBtn.addEventListener('click', function() {
// Get sample data
const sampleDataElement = document.getElementById('sampleData');
if (!sampleDataElement) return;

try {
const sampleData = JSON.parse(sampleDataElement.dataset.sample);

// Fill Personal Information
if (sampleData.firstName) document.getElementById('firstName').value = sampleData.firstName;
if (sampleData.lastName) document.getElementById('lastName').value = sampleData.lastName;
if (sampleData.jobTitle) document.getElementById('jobTitle').value = sampleData.jobTitle;
if (sampleData.email) document.getElementById('email').value = sampleData.email;
if (sampleData.phone) document.getElementById('phone').value = sampleData.phone;
if (sampleData.address) document.getElementById('address').value = sampleData.address;
if (sampleData.summary) document.getElementById('summary').value = sampleData.summary;

// Fill Education (remove existing and add new ones from sample data)
const educationContainer = document.getElementById('educationContainer');
if (educationContainer && sampleData.education && Array.isArray(sampleData.education)) {
// Clear existing entries except the first one
while (educationContainer.children.length > 1) {
educationContainer.removeChild(educationContainer.lastChild);
}

// Fill the first education entry
if (sampleData.education.length > 0) {
const firstEntry = educationContainer.children[0];
fillEducationEntry(firstEntry, sampleData.education[0]);

// Add additional education entries
for (let i = 1; i < sampleData.education.length; i++) {
// Trigger click on "Add Another Education" button
document.getElementById('addEducation').click();
// Fill the newly added entry
const newEntry = educationContainer.lastChild;
fillEducationEntry(newEntry, sampleData.education[i]);
}
}
}

// Fill Experience (remove existing and add new ones from sample data)
const experienceContainer = document.getElementById('experienceContainer');
if (experienceContainer && sampleData.experience && Array.isArray(sampleData.experience)) {
// Clear existing entries
experienceContainer.innerHTML = '';

// Add experience entries
sampleData.experience.forEach((exp, index) => {
// Create template for the experience entry
const template = `
<div class="entry-container">
    <div class="row g-3">
        <div class="col-md-6">
            <label class="form-label">Position / Job Title</label>
            <input type="text" class="form-control" name="experience[${index}][position]" placeholder="e.g. Senior Developer" required>
        </div>
        <div class="col-md-6">
            <label class="form-label">Company / Organization</label>
            <input type="text" class="form-control" name="experience[${index}][company]" placeholder="e.g. Tech Solutions Inc." required>
        </div>
        <div class="col-md-6">
            <label class="form-label">Start Date</label>
            <input type="date" class="form-control" name="experience[${index}][startDate]" required>
        </div>
        <div class="col-md-6">
            <label class="form-label">End Date</label>
            <div class="input-group">
                <input type="date" class="form-control" name="experience[${index}][endDate]">
                <div class="input-group-text">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="currentPosition${index}">
                        <label class="form-check-label" for="currentPosition${index}">Present</label>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <label class="form-label">Description</label>
            <textarea class="form-control" name="experience[${index}][description]" rows="4" placeholder="Describe your responsibilities, achievements, projects, etc."></textarea>
        </div>
    </div>
</div>
`;

experienceContainer.insertAdjacentHTML('beforeend', template);
const newEntry = experienceContainer.lastChild;

// Fill the experience entry
if (exp.position) newEntry.querySelector('input[name$="[position]"]').value = exp.position;
if (exp.company) newEntry.querySelector('input[name$="[company]"]').value = exp.company;
if (exp.startDate) newEntry.querySelector('input[name$="[startDate]"]').value = exp.startDate;

if (exp.endDate) {
newEntry.querySelector('input[name$="[endDate]"]').value = exp.endDate;
} else {
// Check the "Present" checkbox if endDate is empty
const checkbox = newEntry.querySelector(`#currentPosition${index}`);
if (checkbox) checkbox.checked = true;
}

if (exp.description) newEntry.querySelector('textarea[name$="[description]"]').value = exp.description;
});
}

// Fill Skills
if (sampleData.skills && Array.isArray(sampleData.skills)) {
// Clear existing skills
const skillsDisplay = document.getElementById('skillsDisplay');
if (skillsDisplay) {
skillsDisplay.innerHTML = '';
}

// Add skills
sampleData.skills.forEach(skill => {
addSkill(skill);
});
}

// Fill Additional Information
if (sampleData.languages) document.querySelector('textarea[name="languages"]').value = sampleData.languages;
if (sampleData.interests) document.querySelector('textarea[name="interests"]').value = sampleData.interests;
if (sampleData.certifications) document.querySelector('textarea[name="certifications"]').value = sampleData.certifications;

// Show success message
alert('Form autofilled with sample data!');

} catch (error) {
console.error('Error autofilling form:', error);
alert('Could not autofill the form. Please try again.');
}
});

// Helper function to fill education entry
function fillEducationEntry(entry, educationData) {
if (educationData.degree) entry.querySelector('input[name$="[degree]"]').value = educationData.degree;
if (educationData.institution) entry.querySelector('input[name$="[institution]"]').value = educationData.institution;
if (educationData.startDate) entry.querySelector('input[name$="[startDate]"]').value = educationData.startDate;

if (educationData.endDate) {
entry.querySelector('input[name$="[endDate]"]').value = educationData.endDate;
} else {
// Check the "Present" checkbox if endDate is empty
const checkboxId = entry.querySelector('.form-check-input').id;
document.getElementById(checkboxId).checked = true;
}

if (educationData.description) entry.querySelector('textarea[name$="[description]"]').value = educationData.description;
}
}

// Initialize form navigation
initFormNavigation();

// Initialize autofill functionality
setupAutofill();

// Add Education Entry
document.getElementById('addEducation').addEventListener('click', function() {
const container = document.getElementById('educationContainer');
const index = container.children.length;
const template = `
<div class="entry-container position-relative">
    <button type="button" class="btn-remove" onclick="this.parentElement.remove()">Ã—</button>
    <div class="row g-3">
        <div class="col-md-6">
            <label class="form-label">Degree / Certificate</label>
            <input type="text" class="form-control" name="education[${index}][degree]" placeholder="e.g. Bachelor of Science in Computer Science" required>
        </div>
        <div class="col-md-6">
            <label class="form-label">Institution</label>
            <input type="text" class="form-control" name="education[${index}][institution]" placeholder="e.g. ESPRIT School of Engineering" required>
        </div>
        <div class="col-md-6">
            <label class="form-label">Start Date</label>
            <input type="date" class="form-control" name="education[${index}][startDate]" required>
        </div>
        <div class="col-md-6">
            <label class="form-label">End Date</label>
            <div class="input-group">
                <input type="date" class="form-control" name="education[${index}][endDate]">
                <div class="input-group-text">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="currentEducation${index}">
                        <label class="form-check-label" for="currentEducation${index}">Present</label>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <label class="form-label">Description</label>
            <textarea class="form-control" name="education[${index}][description]" rows="2" placeholder="Include relevant coursework, honors, achievements, etc."></textarea>
        </div>
    </div>
</div>
`;
container.insertAdjacentHTML('beforeend', template);
});

// Add Experience Entry
document.getElementById('addExperience').addEventListener('click', function() {
const container = document.getElementById('experienceContainer');
const index = container.children.length;
const template = `
<div class="entry-container position-relative">
    <button type="button" class="btn-remove" onclick="this.parentElement.remove()">Ã—</button>
    <div class="row g-3">
        <div class="col-md-6">
            <label class="form-label">Position / Job Title</label>
            <input type="text" class="form-control" name="experience[${index}][position]" placeholder="e.g. Senior Developer" required>
        </div>
        <div class="col-md-6">
            <label class="form-label">Company / Organization</label>
            <input type="text" class="form-control" name="experience[${index}][company]" placeholder="e.g. Tech Solutions Inc." required>
        </div>
        <div class="col-md-6">
            <label class="form-label">Start Date</label>
            <input type="date" class="form-control" name="experience[${index}][startDate]" required>
        </div>
        <div class="col-md-6">
            <label class="form-label">End Date</label>
            <div class="input-group">
                <input type="date" class="form-control" name="experience[${index}][endDate]">
                <div class="input-group-text">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="currentPosition${index}">
                        <label class="form-check-label" for="currentPosition${index}">Present</label>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <label class="form-label">Description</label>
            <textarea class="form-control" name="experience[${index}][description]" rows="4" placeholder="Describe your responsibilities, achievements, projects, etc."></textarea>
        </div>
    </div>
</div>
`;
container.insertAdjacentHTML('beforeend', template);
});

// Skills Management
const skillInput = document.getElementById('skillInput');
const addSkillBtn = document.getElementById('addSkillBtn');
const skillsDisplay = document.getElementById('skillsDisplay');
const skillsContainer = document.getElementById('skillsContainer');

function addSkill(skillText) {
if(!skillText) return;

// Create badge
const badge = document.createElement('span');
badge.className = 'skill-badge';
badge.textContent = skillText;

// Remove button
const removeBtn = document.createElement('button');
removeBtn.textContent = 'Ã—';
removeBtn.onclick = function() {
badge.remove();
updateHiddenInputs();
};

badge.appendChild(removeBtn);
skillsDisplay.appendChild(badge);

// Update hidden inputs
updateHiddenInputs();

// Clear input
if (skillInput) skillInput.value = '';
}

function updateHiddenInputs() {
// Clear container
skillsContainer.innerHTML = '';

// Get all skills
const badges = skillsDisplay.querySelectorAll('.skill-badge');

// Create hidden inputs
badges.forEach((badge, index) => {
const input = document.createElement('input');
input.type = 'hidden';
input.name = `skills[]`;
input.value = badge.textContent.replace('Ã—', '').trim();

skillsContainer.appendChild(input);
});
}

// Add skill button click
if (addSkillBtn) {
addSkillBtn.addEventListener('click', function() {
addSkill(skillInput.value.trim());
});
}

// Enter key press
if (skillInput) {
skillInput.addEventListener('keypress', function(e) {
if(e.key === 'Enter') {
e.preventDefault();
addSkill(this.value.trim());
}
});
}

// Preview functionality
const previewBtn = document.querySelector('.btn-preview');
const cvPreview = document.getElementById('cvPreview');
const closePreview = document.getElementById('closePreview');
const previewContent = document.getElementById('previewContent');

if(previewBtn && cvPreview && closePreview) {
previewBtn.addEventListener('click', function() {
// Generate preview content
generatePreview();

// Show preview panel
cvPreview.classList.add('show');
});

closePreview.addEventListener('click', function() {
cvPreview.classList.remove('show');
});
}

function generatePreview() {
if (!previewContent) return;

const firstName = document.getElementById('firstName')?.value || 'First Name';
const lastName = document.getElementById('lastName')?.value || 'Last Name';
const jobTitle = document.getElementById('jobTitle')?.value || 'Job Title';
const email = document.getElementById('email')?.value || 'email@example.com';
const phone = document.getElementById('phone')?.value || 'Phone Number';
const address = document.getElementById('address')?.value || 'Address';
const summary = document.getElementById('summary')?.value || 'Professional Summary';

let previewHTML = `
<div class="preview-section">
    <h5>${firstName} ${lastName}</h5>
    <p class="text-muted">${jobTitle}</p>
    <div class="small mb-3">
        <div><i class="fas fa-envelope me-2"></i>${email}</div>
        <div><i class="fas fa-phone me-2"></i>${phone}</div>
        <div><i class="fas fa-map-marker-alt me-2"></i>${address}</div>
    </div>
    <p>${summary}</p>
</div>
`;

// Add education
previewHTML += `
<div class="preview-section mt-3">
    <h6 class="border-bottom pb-2 mb-2"><i class="fas fa-graduation-cap me-2"></i>Education</h6>
    `;

    const educationContainers = document.querySelectorAll('#educationContainer .entry-container');
    educationContainers.forEach(container => {
    const degree = container.querySelector('input[name$="[degree]"]')?.value || 'Degree';
    const institution = container.querySelector('input[name$="[institution]"]')?.value || 'Institution';
    const startDate = container.querySelector('input[name$="[startDate]"]')?.value || '';
    const endDate = container.querySelector('input[name$="[endDate]"]')?.value || 'Present';

    // Check if "Present" checkbox is checked
    const checkboxId = container.querySelector('.form-check-input')?.id;
    const isPresent = checkboxId ? document.getElementById(checkboxId).checked : false;

    const endDateDisplay = isPresent ? 'Present' : (endDate !== 'Present' ? new Date(endDate).getFullYear() : '');

    previewHTML += `
    <div class="mb-2">
        <div class="fw-bold">${degree}</div>
        <div>${institution} (${startDate ? new Date(startDate).getFullYear() : ''} - ${endDateDisplay})</div>
    </div>
    `;
    });

    previewHTML += `</div>`;

// Add experience
previewHTML += `
<div class="preview-section mt-3">
    <h6 class="border-bottom pb-2 mb-2"><i class="fas fa-briefcase me-2"></i>Experience</h6>
    `;

    const experienceContainers = document.querySelectorAll('#experienceContainer .entry-container');
    experienceContainers.forEach(container => {
    const position = container.querySelector('input[name$="[position]"]')?.value || 'Position';
    const company = container.querySelector('input[name$="[company]"]')?.value || 'Company';
    const description = container.querySelector('textarea[name$="[description]"]')?.value || '';
    const startDate = container.querySelector('input[name$="[startDate]"]')?.value || '';
    const endDate = container.querySelector('input[name$="[endDate]"]')?.value || '';

    // Check if "Present" checkbox is checked
    const checkboxId = container.querySelector('.form-check-input')?.id;
    const isPresent = checkboxId ? document.getElementById(checkboxId).checked : false;

    const startDateFormatted = startDate ? new Date(startDate).toLocaleDateString() : '';
    const endDateFormatted = isPresent ? 'Present' : (endDate ? new Date(endDate).toLocaleDateString() : '');
    const dateRange = startDateFormatted || endDateFormatted ? `${startDateFormatted} - ${endDateFormatted}` : '';

    previewHTML += `
    <div class="mb-3">
        <div class="fw-bold">${position}</div>
        <div class="d-flex justify-content-between">
            <span>${company}</span>
            <small class="text-muted">${dateRange}</small>
        </div>
        <div class="small mt-1">${description}</div>
    </div>
    `;
    });

    previewHTML += `</div>`;

// Add skills
previewHTML += `
<div class="preview-section mt-3">
    <h6 class="border-bottom pb-2 mb-2"><i class="fas fa-tools me-2"></i>Skills</h6>
    <div class="d-flex flex-wrap">
        `;

        const skills = document.querySelectorAll('.skill-badge');
        skills.forEach(skill => {
        const skillText = skill.textContent.replace('Ã—', '').trim();
        previewHTML += `<span class="badge bg-light text-dark m-1">${skillText}</span>`;
        });

        previewHTML += `
    </div>
</div>
`;

// Add additional information if available
const languages = document.querySelector('textarea[name="languages"]')?.value;
const interests = document.querySelector('textarea[name="interests"]')?.value;
const certifications = document.querySelector('textarea[name="certifications"]')?.value;

if (languages || interests || certifications) {
previewHTML += `
<div class="preview-section mt-3">
    <h6 class="border-bottom pb-2 mb-2"><i class="fas fa-plus-circle me-2"></i>Additional Information</h6>
    `;

    if (languages) {
    previewHTML += `
    <div class="mb-2">
        <div class="fw-bold">Languages</div>
        <div>${languages}</div>
    </div>
    `;
    }

    if (interests) {
    previewHTML += `
    <div class="mb-2">
        <div class="fw-bold">Interests & Hobbies</div>
        <div>${interests}</div>
    </div>
    `;
    }

    if (certifications) {
    previewHTML += `
    <div class="mb-2">
        <div class="fw-bold">Publications/Projects/Certifications</div>
        <div>${certifications.replace(/\n/g, '<br>')}</div>
    </div>
    `;
    }

    previewHTML += `</div>`;
}

previewContent.innerHTML = previewHTML;
}
});


===================================================
FICHIER: Templates\cv_generator\_languages.html.twig
===================================================
<div class="section-title">
    <i class="fas fa-language"></i>
    <h3>Languages</h3>
</div>

<div class="alert alert-info">
    <i class="fas fa-info-circle me-2"></i>
    Add languages you speak and indicate your proficiency level (e.g., "English (Fluent)", "French (Intermediate)").
</div>

<div id="languagesContainer" class="mb-4">
    <!-- Languages will be added here dynamically -->
</div>

<div class="input-group mb-3">
    <input type="text" class="form-control" id="languageInput" placeholder="Enter a language and proficiency (e.g., English (Native))">
    <button class="btn btn-primary" type="button" id="addLanguageBtn">
        <i class="fas fa-plus me-2"></i>Add
    </button>
</div>


===================================================
FICHIER: Templates\cv_generator\_personal_info.html.twig
===================================================
<div class="section-title">
    <i class="fas fa-user-circle"></i>
    <h3>Personal Information</h3>
</div>

<div class="upload-container mb-4 text-center">
    <div class="profile-photo-wrapper d-inline-block">
        <img id="photoPreview" src="{{ asset('images/default-profile.png') }}" alt="Profile Photo Preview" class="profile-photo">
    </div>
    <div class="mt-3">
        <label for="photoInput" class="btn btn-outline-secondary">
            <i class="fas fa-camera me-2"></i>Upload Photo
        </label>
        <input type="file" id="photoInput" name="photo" accept="image/*" style="display: none;">
    </div>
</div>

<div class="row mb-3">
    <div class="col-md-6">
        <label for="firstName" class="form-label">First Name</label>
        <input type="text" class="form-control" id="firstName" name="firstName" placeholder="Enter your first name" required>
    </div>
    <div class="col-md-6">
        <label for="lastName" class="form-label">Last Name</label>
        <input type="text" class="form-control" id="lastName" name="lastName" placeholder="Enter your last name" required>
    </div>
</div>

<div class="row mb-3">
    <div class="col-md-12">
        <label for="position" class="form-label">Professional Title</label>
        <input type="text" class="form-control" id="position" name="position" placeholder="e.g. Software Developer, Project Manager, etc.">
    </div>
</div>

<div class="row mb-3">
    <div class="col-md-6">
        <label for="email" class="form-label">Email</label>
        <input type="email" class="form-control" id="email" name="email" placeholder="name@example.com" required>
    </div>
    <div class="col-md-6">
        <label for="phone" class="form-label">Phone</label>
        <input type="tel" class="form-control" id="phone" name="phone" placeholder="e.g. +216 12 345 678">
    </div>
</div>

<div class="row mb-3">
    <div class="col-md-12">
        <label for="address" class="form-label">Address</label>
        <input type="text" class="form-control" id="address" name="address" placeholder="Street Address">
    </div>
</div>

<div class="row mb-3">
    <div class="col-md-6">
        <label for="city" class="form-label">City</label>
        <input type="text" class="form-control" id="city" name="city" placeholder="City">
    </div>
    <div class="col-md-6">
        <label for="country" class="form-label">Country</label>
        <input type="text" class="form-control" id="country" name="country" placeholder="Country">
    </div>
</div>

<div class="row mb-3">
    <div class="col-md-6">
        <label for="github" class="form-label">GitHub</label>
        <div class="input-group">
            <span class="input-group-text"><i class="fab fa-github"></i></span>
            <input type="text" class="form-control" id="github" name="github" placeholder="github.com/username">
        </div>
    </div>
    <div class="col-md-6">
        <label for="linkedin" class="form-label">LinkedIn</label>
        <div class="input-group">
            <span class="input-group-text"><i class="fab fa-linkedin"></i></span>
            <input type="text" class="form-control" id="linkedin" name="linkedin" placeholder="linkedin.com/in/username">
        </div>
    </div>
</div>


===================================================
FICHIER: Templates\cv_generator\_preview.html.twig
===================================================
<div class="form-section" id="skillsSection">
    <h4 class="form-section-title">
        <i class="fas fa-tools"></i>
        Skills
        <small class="float-end fs-6 text-muted">
            Last updated: 2025-04-18 21:05:57 by Mohamed-abidi-95
        </small>
    </h4>
    <div class="row mb-4">
        <div class="col-md-6">
            <label class="form-label">Add Skills</label>
            <div class="skills-input-group">
                <input type="text" id="skillInput" class="form-control" placeholder="e.g. Programming, Leadership, Project Management">
                <button type="button" id="addSkillBtn" class="btn btn-primary">Add</button>
            </div>
            <small class="text-muted">Press Enter or click Add button to add skills</small>
        </div>
        <div class="col-md-6">
            <label class="form-label">Your Skills</label>
            <div id="skillsDisplay" class="pt-2">
                <!-- Skills badges will appear here -->
            </div>
        </div>
    </div>
    <div id="skillsContainer" class="d-none">
        <!-- Hidden input fields for skills -->
    </div>
</div>


===================================================
FICHIER: Templates\cv_generator\_progress.html.twig
===================================================
<div class="steps-container mb-4">
    <div class="step-item {% if currentStep >= 1 %}active{% endif %}">
        <div class="step-number">1</div>
        <div class="step-title">Personal</div>
    </div>
    <div class="step-item {% if currentStep >= 2 %}active{% endif %}">
        <div class="step-number">2</div>
        <div class="step-title">Education</div>
    </div>
    <div class="step-item {% if currentStep >= 3 %}active{% endif %}">
        <div class="step-number">3</div>
        <div class="step-title">Experience</div>
    </div>
    <div class="step-item {% if currentStep >= 4 %}active{% endif %}">
        <div class="step-number">4</div>
        <div class="step-title">Skills</div>
    </div>
    <div class="step-item {% if currentStep >= 5 %}active{% endif %}">
        <div class="step-number">5</div>
        <div class="step-title">Languages</div>
    </div>
    <div class="step-item {% if currentStep >= 6 %}active{% endif %}">
        <div class="step-number">6</div>
        <div class="step-title">Additional</div>
    </div>
    <div class="step-item {% if currentStep >= 7 %}active{% endif %}">
        <div class="step-number">7</div>
        <div class="step-title">Review</div>
    </div>
</div>

<div class="progress-container">
    <div class="progress-bar" style="width: {{ (currentStep / 7) * 100 }}%"></div>
</div>


===================================================
FICHIER: Templates\cv_generator\_review.html.twig
===================================================
<div class="section-title">
    <i class="fas fa-check-circle"></i>
    <h3>Review Your CV</h3>
</div>

<div class="alert alert-info">
    <i class="fas fa-info-circle"></i>
    Please review your CV information before generating the final document.
</div>

<div id="reviewContent" class="p-3 border rounded bg-light">
    <!-- Review content will be generated here -->
</div>

<div class="mt-4">
    <h4>Choose Template</h4>
    <div class="row">
        <div class="col-md-6 mb-3">
            <div class="card h-100">
                <div class="card-header bg-success text-white">Green Professional Template</div>
                <div class="card-body text-center">
                    <img src="{{ asset('images/template_green.jpg') }}" class="img-fluid mb-3" style="max-height: 200px;" alt="Green Template Preview">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="template" id="template-green" value="green" checked>
                        <label class="form-check-label" for="template-green">
                            Select Green Template
                        </label>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6 mb-3">
            <div class="card h-100">
                <div class="card-header bg-primary text-white">Blue Modern Template</div>
                <div class="card-body text-center">
                    <img src="{{ asset('images/template_blue.jpg') }}" class="img-fluid mb-3" style="max-height: 200px;" alt="Blue Template Preview">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="template" id="template-blue" value="blue">
                        <label class="form-check-label" for="template-blue">
                            Select Blue Template
                        </label>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<input type="hidden" name="photoData" id="photoDataField" value="">

<!-- Section Navigation -->
<div class="form-navigation-buttons">
    <button type="button" class="btn btn-secondary prev-section" data-prev="5">
        <i class="fas fa-arrow-left"></i> Previous
    </button>
    <button type="submit" class="btn btn-primary btn-submit">
        <i class="fas fa-file-download"></i> Generate CV
    </button>
</div>

<script>
    // When the form is submitted, include the photo data if available
    document.addEventListener('DOMContentLoaded', function() {
        const photoDataField = document.getElementById('photoDataField');
        const savedPhotoData = localStorage.getItem('cvProfilePhoto');

        if (photoDataField && savedPhotoData) {
            photoDataField.value = savedPhotoData;
        }
    });
</script>


===================================================
FICHIER: Templates\cv_generator\_skills.html.twig
===================================================
<div class="form-section" id="skillsSection">
    <h4 class="form-section-title">
        <i class="fas fa-tools"></i>
        Skills
    </h4>
    <div class="row mb-4">
        <div class="col-md-6">
            <label class="form-label">Add Skills</label>
            <div class="skills-input-group">
                <input type="text" id="skillInput" class="form-control" placeholder="e.g. Programming, Leadership, Project Management">
                <button type="button" id="addSkillBtn" class="btn btn-primary">Add</button>
            </div>
            <small class="text-muted">Press Enter or click Add button to add skills</small>
        </div>
        <div class="col-md-6">
            <label class="form-label">Your Skills</label>
            <div id="skillsDisplay" class="pt-2">
                <!-- Skills badges will appear here -->
            </div>
        </div>
    </div>
    <div id="skillsContainer" class="d-none">
        <!-- Hidden input fields for skills -->
    </div>
</div>


===================================================
FICHIER: Templates\partials\section_editor.html.twig
===================================================
<!-- SÃ©lecteur de sections principales -->
<div class="sections-selector">
    <h3 class="sections-selector-title">Sections de votre CV</h3>
    <ul class="sections-list">
        <li class="section-item active" data-section="personal">
            <div class="section-icon">
                <i class="fas fa-user"></i>
            </div>
            <p class="section-name">Informations personnelles</p>
            <span class="section-status">
                <i class="fas fa-check"></i>
            </span>
        </li>
        <li class="section-item" data-section="education">
            <div class="section-icon">
                <i class="fas fa-graduation-cap"></i>
            </div>
            <p class="section-name">Ã‰ducation</p>
        </li>
        <li class="section-item" data-section="experience">
            <div class="section-icon">
                <i class="fas fa-briefcase"></i>
            </div>
            <p class="section-name">ExpÃ©rience pro.</p>
        </li>
        <li class="section-item" data-section="skills">
            <div class="section-icon">
                <i class="fas fa-tools"></i>
            </div>
            <p class="section-name">CompÃ©tences</p>
        </li>
        <li class="section-item" data-section="languages">
            <div class="section-icon">
                <i class="fas fa-language"></i>
            </div>
            <p class="section-name">Langues</p>
        </li>
        <li class="section-item" data-section="additional">
            <div class="section-icon">
                <i class="fas fa-plus-circle"></i>
            </div>
            <p class="section-name">Additionnel</p>
        </li>
        <li class="section-item" data-section="review">
            <div class="section-icon">
                <i class="fas fa-check-circle"></i>
            </div>
            <p class="section-name">Revue</p>
        </li>
    </ul>
</div>

<!-- Ã‰diteur de section drag-and-drop -->
<div class="section-editor">
    <h3 class="editor-title">
        <i class="fas fa-edit"></i>
        Personnaliser l'ordre des sections
    </h3>
    <ul class="sortable-sections" id="sortableSections">
        <li class="sortable-section-item" data-section="personal">
            <div class="sortable-handle">
                <i class="fas fa-grip-vertical"></i>
            </div>
            <div class="sortable-content">
                <h4 class="sortable-section-name">
                    <i class="fas fa-user"></i>
                    Informations personnelles
                </h4>
                <p class="sortable-description">Nom, contact, photo, rÃ©sumÃ© professionnel...</p>
            </div>
            <div class="sortable-actions">
                <button type="button" class="sortable-btn toggle-visibility visible" title="Toggle visibility">
                    <i class="fas fa-eye"></i>
                </button>
            </div>
        </li>

        <li class="sortable-section-item" data-section="education">
            <div class="sortable-handle">
                <i class="fas fa-grip-vertical"></i>
            </div>
            <div class="sortable-content">
                <h4 class="sortable-section-name">
                    <i class="fas fa-graduation-cap"></i>
                    Ã‰ducation
                </h4>
                <p class="sortable-description">DiplÃ´mes, formations, certifications...</p>
            </div>
            <div class="sortable-actions">
                <button type="button" class="sortable-btn toggle-visibility visible" title="Toggle visibility">
                    <i class="fas fa-eye"></i>
                </button>
                <button type="button" class="sortable-btn remove" title="Remove section">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        </li>

        <li class="sortable-section-item" data-section="experience">
            <div class="sortable-handle">
                <i class="fas fa-grip-vertical"></i>
            </div>
            <div class="sortable-content">
                <h4 class="sortable-section-name">
                    <i class="fas fa-briefcase"></i>
                    ExpÃ©rience professionnelle
                </h4>
                <p class="sortable-description">Emplois, stages, projets professionnels...</p>
            </div>
            <div class="sortable-actions">
                <button type="button" class="sortable-btn toggle-visibility visible" title="Toggle visibility">
                    <i class="fas fa-eye"></i>
                </button>
                <button type="button" class="sortable-btn remove" title="Remove section">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        </li>

        <li class="sortable-section-item disabled" data-section="skills">
            <div class="sortable-handle">
                <i class="fas fa-grip-vertical"></i>
            </div>
            <div class="sortable-content">
                <h4 class="sortable-section-name">
                    <i class="fas fa-tools"></i>
                    CompÃ©tences
                </h4>
                <p class="sortable-description">CompÃ©tences techniques, professionnelles...</p>
            </div>
            <div class="sortable-actions">
                <button type="button" class="sortable-btn toggle-visibility hidden" title="Toggle visibility">
                    <i class="fas fa-eye-slash"></i>
                </button>
                <button type="button" class="sortable-btn remove" title="Remove section">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        </li>
    </ul>

    <button class="section-add-btn" id="addSectionBtn">
        <i class="fas fa-plus"></i>
        Ajouter une section
    </button>
</div>


===================================================
FICHIER: Templates\partials\template_carousel.html.twig
===================================================
<div class="carousel-wrapper" id="template-carousel">
    <!-- Template 1 - Moderne/Professionnel -->
    <div class="carousel-item active" data-carousel-item="0" data-template="template1">
        <div class="template-slide">
            <img src="{{ asset('images/cvs/1.png') }}" alt="Template Tech Expert" class="template-preview">
            <div class="template-details">
                <h3>Tech Expert</h3>
                <p>Un design moderne parfait pour les profils d'ingÃ©nierie et tech</p>
                <div class="template-tags">
                    <span class="tag tag-modern">Moderne</span>
                    <span class="tag tag-professional">Professionnel</span>
                    <span class="tag tag-engineering">IngÃ©nierie</span>
                </div>
                <button class="btn btn-primary select-template-btn" data-template="template1">
                    SÃ©lectionner ce template
                </button>
            </div>
        </div>
    </div>

    <!-- Template 2 - Classique/Professionnel -->
    <div class="carousel-item" data-carousel-item="1" data-template="template2">
        <div class="template-slide">
            <img src="{{ asset('images/cvs/2.png') }}" alt="Template Executive" class="template-preview">
            <div class="template-details">
                <h3>Executive</h3>
                <p>Design classique et Ã©lÃ©gant parfait pour les profils business et management</p>
                <div class="template-tags">
                    <span class="tag tag-classic">Classique</span>
                    <span class="tag tag-professional">Professionnel</span>
                    <span class="tag tag-business">Business</span>
                </div>
                <button class="btn btn-primary select-template-btn" data-template="template2">
                    SÃ©lectionner ce template
                </button>
            </div>
        </div>
    </div>

    <!-- Template 3 - CrÃ©atif -->
    <div class="carousel-item" data-carousel-item="2" data-template="template3">
        <div class="template-slide">
            <img src="{{ asset('images/cvs/3.png') }}" alt="Template Innovation" class="template-preview">
            <div class="template-details">
                <h3>Innovation</h3>
                <p>Un design crÃ©atif et moderne pour se dÃ©marquer</p>
                <div class="template-tags">
                    <span class="tag tag-creative">CrÃ©atif</span>
                    <span class="tag tag-modern">Moderne</span>
                </div>
                <button class="btn btn-primary select-template-btn" data-template="template3">
                    SÃ©lectionner ce template
                </button>
            </div>
        </div>
    </div>

    <!-- Template 4 - AcadÃ©mique -->
    <div class="carousel-item" data-carousel-item="3" data-template="template4">
        <div class="template-slide">
            <img src="{{ asset('images/cvs/4.png') }}" alt="Template AcadÃ©mique" class="template-preview">
            <div class="template-details">
                <h3>Academic Plus</h3>
                <p>IdÃ©al pour les profils acadÃ©miques et recherche</p>
                <div class="template-tags">
                    <span class="tag tag-classic">Classique</span>
                    <span class="tag tag-academic">AcadÃ©mique</span>
                </div>
                <button class="btn btn-primary select-template-btn" data-template="template4">
                    SÃ©lectionner ce template
                </button>
            </div>
        </div>
    </div>

    <!-- Template 5 - IngÃ©nierie Moderne -->
    <div class="carousel-item" data-carousel-item="4" data-template="template5">
        <div class="template-slide">
            <img src="{{ asset('images/cvs/5.png') }}" alt="Template IngÃ©nierie" class="template-preview">
            <div class="template-details">
                <h3>Tech Engineering</h3>
                <p>SpÃ©cialement conÃ§u pour les ingÃ©nieurs et techniciens</p>
                <div class="template-tags">
                    <span class="tag tag-modern">Moderne</span>
                    <span class="tag tag-engineering">IngÃ©nierie</span>
                </div>
                <button class="btn btn-primary select-template-btn" data-template="template5">
                    SÃ©lectionner ce template
                </button>
            </div>
        </div>
    </div>

    <!-- Template 6 - Business Moderne -->
    <div class="carousel-item" data-carousel-item="5" data-template="template6">
        <div class="template-slide">
            <img src="{{ asset('images/cvs/6.png') }}" alt="Template Business" class="template-preview">
            <div class="template-details">
                <h3>Business Pro</h3>
                <p>Pour les profils professionnels orientÃ©s business</p>
                <div class="template-tags">
                    <span class="tag tag-modern">Moderne</span>
                    <span class="tag tag-business">Business</span>
                    <span class="tag tag-professional">Professionnel</span>
                </div>
                <button class="btn btn-primary select-template-btn" data-template="template6">
                    SÃ©lectionner ce template
                </button>
            </div>
        </div>
    </div>

    <!-- Template 7 - Classique Ã‰lÃ©gant -->
    <div class="carousel-item" data-carousel-item="6" data-template="template7">
        <div class="template-slide">
            <img src="{{ asset('images/cvs/7.png') }}" alt="Template Classique Ã‰lÃ©gant" class="template-preview">
            <div class="template-details">
                <h3>Classic Elite</h3>
                <p>Ã‰lÃ©gant et intemporel pour une impression durable</p>
                <div class="template-tags">
                    <span class="tag tag-classic">Classique</span>
                    <span class="tag tag-professional">Professionnel</span>
                </div>
                <button class="btn btn-primary select-template-btn" data-template="template7">
                    SÃ©lectionner ce template
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Carousel controls -->
<button class="carousel-control prev" id="carousel-prev" aria-label="Template prÃ©cÃ©dent">
    <i class="fas fa-chevron-left"></i>
</button>
<button class="carousel-control next" id="carousel-next" aria-label="Template suivant">
    <i class="fas fa-chevron-right"></i>
</button>

<!-- Carousel indicators -->
<div class="carousel-indicators" role="tablist">
    <button class="carousel-indicator active" data-carousel-goto="0" aria-label="Template 1" aria-controls="template-carousel" role="tab" aria-selected="true"></button>
    <button class="carousel-indicator" data-carousel-goto="1" aria-label="Template 2" aria-controls="template-carousel" role="tab" aria-selected="false"></button>
    <button class="carousel-indicator" data-carousel-goto="2" aria-label="Template 3" aria-controls="template-carousel" role="tab" aria-selected="false"></button>
    <button class="carousel-indicator" data-carousel-goto="3" aria-label="Template 4" aria-controls="template-carousel" role="tab" aria-selected="false"></button>
    <button class="carousel-indicator" data-carousel-goto="4" aria-label="Template 5" aria-controls="template-carousel" role="tab" aria-selected="false"></button>
    <button class="carousel-indicator" data-carousel-goto="5" aria-label="Template 6" aria-controls="template-carousel" role="tab" aria-selected="false"></button>
    <button class="carousel-indicator" data-carousel-goto="6" aria-label="Template 7" aria-controls="template-carousel" role="tab" aria-selected="false"></button>
</div>


===================================================
FICHIER: Templates\partials\template_selector_sidebar.html.twig
===================================================
{# template_selector_sidebar.html.twig #}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<style>
    :root {
        /* Utilisation des couleurs cohÃ©rentes avec votre template principal */
        --primary-color: #ee3124; /* Rouge primaire ESPRIT */
        --primary-light: rgba(238, 49, 36, 0.1);
        --primary-shadow: rgba(238, 49, 36, 0.25);
        --secondary-color: #2d3748; /* Charcoal */
        --accent-color: #718096; /* Slate Gray */
        --light-bg: #faf7f2; /* Light Beige */
        --white-bg: #ffffff; /* White */
        --text-dark: #1a202c; /* Dark Text */
        --text-medium: #2d3748; /* Charcoal pour texte moyen */
        --text-light: #718096; /* Slate Gray */
        --border-color: #e2e8f0;
        --card-shadow: rgba(45, 55, 72, 0.1);
        --font-family-sans-serif: 'Poppins', sans-serif;
    }

    .template-sidebar {
        position: fixed;
        top: 0;
        left: 0;
        height: 100vh;
        width: 280px;
        background-color: var(--white-bg);
        box-shadow: 2px 0 10px var(--card-shadow);
        z-index: 1000;
        overflow-y: auto;
        transition: transform 0.3s ease-in-out;
        font-family: var(--font-family-sans-serif);
    }

    .template-sidebar.collapsed {
        transform: translateX(-280px);
    }

    .sidebar-header {
        padding: 1.5rem 1rem;
        background-color: var(--secondary-color);
        color: white;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .sidebar-header h3 {
        font-size: 1.25rem;
        margin: 0;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .sidebar-header .close-sidebar {
        background: none;
        border: none;
        color: white;
        font-size: 1.5rem;
        cursor: pointer;
        padding: 0;
        display: none;
    }

    .sidebar-content {
        padding: 1.5rem 1rem;
    }

    .sidebar-section {
        margin-bottom: 2rem;
    }

    .sidebar-section-title {
        font-size: 1rem;
        font-weight: 600;
        color: var(--text-dark);
        margin-bottom: 1rem;
        padding-bottom: 0.5rem;
        border-bottom: 2px solid var(--border-color);
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .template-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .template-item {
        margin-bottom: 1rem;
        border-radius: 0.5rem;
        overflow: hidden;
        box-shadow: 0 2px 8px var(--card-shadow);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        cursor: pointer;
        position: relative;
        background-color: var(--light-bg);
    }

    .template-item:hover {
        transform: translateY(-3px);
        box-shadow: 0 4px 12px var(--card-shadow);
    }

    .template-item.selected {
        border: 2px solid var(--primary-color);
    }

    .template-item.selected::after {
        content: '\f00c';
        font-family: 'Font Awesome 6 Free';
        font-weight: 900;
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: var(--primary-color);
        color: white;
        width: 24px;
        height: 24px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.8rem;
    }

    .template-thumbnail {
        width: 100%;
        height: 150px;
        object-fit: cover;
        border-radius: 0.5rem 0.5rem 0 0;
        display: block;
    }

    .template-info {
        padding: 0.75rem 1rem;
        background-color: white;
    }

    .template-name {
        font-weight: 600;
        font-size: 0.95rem;
        margin: 0 0 0.25rem;
        color: var(--text-dark);
    }

    .template-category {
        font-size: 0.8rem;
        color: var(--text-light);
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.4rem;
    }

    /* Style pour les tags des diffÃ©rentes catÃ©gories */
    .category-tag {
        display: inline-flex;
        align-items: center;
        padding: 0.15rem 0.5rem;
        font-size: 0.7rem;
        border-radius: 20px;
        margin-top: 0.5rem;
        font-weight: 500;
    }

    .tag-modern {
        background-color: rgba(79, 209, 197, 0.15);
        color: #0694a2;
    }

    .tag-classic {
        background-color: rgba(102, 126, 234, 0.15);
        color: #5145cd;
    }

    .tag-creative {
        background-color: rgba(245, 158, 11, 0.15);
        color: #c05621;
    }

    .tag-professional {
        background-color: rgba(16, 185, 129, 0.15);
        color: #057a55;
    }

    .tag-academic {
        background-color: rgba(236, 72, 153, 0.15);
        color: #9d174d;
    }

    .tag-engineering {
        background-color: rgba(37, 99, 235, 0.15);
        color: #1e429f;
    }

    .tag-business {
        background-color: rgba(220, 38, 38, 0.15);
        color: #9b1c1c;
    }

    .filters-section {
        margin-bottom: 1.5rem;
    }

    .filter-group {
        margin-bottom: 1rem;
    }

    .filter-label {
        display: block;
        font-size: 0.9rem;
        margin-bottom: 0.5rem;
        font-weight: 500;
        color: var(--text-medium);
    }

    .filter-options {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    .filter-option {
        padding: 0.35rem 0.75rem;
        font-size: 0.8rem;
        border-radius: 20px;
        background-color: var(--light-bg);
        color: var(--text-medium);
        border: 1px solid var(--border-color);
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .filter-option:hover {
        background-color: var(--primary-light);
        color: var(--primary-color);
    }

    .filter-option.active {
        background-color: var(--primary-color);
        color: white;
        border-color: var(--primary-color);
    }

    /* Bouton Toggle Sidebar (visible uniquement sur mobile) */
    .sidebar-toggle {
        position: fixed;
        top: 1rem;
        left: 1rem;
        background-color: var(--primary-color);
        color: white;
        border: none;
        width: 45px;
        height: 45px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        cursor: pointer;
        z-index: 1001;
        box-shadow: 0 2px 8px var(--primary-shadow);
        display: none;
    }

    .sidebar-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 999;
        display: none;
    }

    /* Contenu principal - dÃ©calÃ© par la sidebar */
    .main-content {
        margin-left: 280px;
        padding: 1.5rem;
        transition: margin-left 0.3s ease;
    }

    .main-content.expanded {
        margin-left: 0;
    }

    /* Responsive */
    @media (max-width: 992px) {
        .template-sidebar {
            transform: translateX(-280px);
        }

        .template-sidebar.active {
            transform: translateX(0);
        }

        .sidebar-toggle {
            display: flex;
        }

        .sidebar-overlay.active {
            display: block;
        }

        .sidebar-header .close-sidebar {
            display: block;
        }

        .main-content {
            margin-left: 0;
        }
    }
</style>

<!-- Bouton Toggle Sidebar (visible uniquement sur mobile) -->
<button class="sidebar-toggle" id="sidebarToggle">
    <i class="fas fa-th-large"></i>
</button>

<!-- Overlay pour fermer la sidebar sur mobile -->
<div class="sidebar-overlay" id="sidebarOverlay"></div>

<!-- Sidebar -->
<div class="template-sidebar" id="templateSidebar">
    <!-- EntÃªte de la sidebar -->
    <div class="sidebar-header">
        <h3><i class="fas fa-file-alt"></i> Templates CV</h3>
        <button class="close-sidebar" id="closeSidebar">
            <i class="fas fa-times"></i>
        </button>
    </div>

    <!-- Contenu de la sidebar -->
    <div class="sidebar-content">
        <!-- Section de filtres -->
        <div class="filters-section sidebar-section">
            <div class="sidebar-section-title">
                <i class="fas fa-filter"></i> Filtrer par
            </div>

            <!-- Filtres par style -->
            <div class="filter-group">
                <span class="filter-label">Style</span>
                <div class="filter-options">
                    <button class="filter-option" data-filter="all">Tous</button>
                    <button class="filter-option" data-filter="modern">Moderne</button>
                    <button class="filter-option" data-filter="classic">Classique</button>
                    <button class="filter-option" data-filter="creative">CrÃ©atif</button>
                    <button class="filter-option" data-filter="professional">Professionnel</button>
                </div>
            </div>

            <!-- Filtres par domaine -->
            <div class="filter-group">
                <span class="filter-label">Domaine</span>
                <div class="filter-options">
                    <button class="filter-option" data-filter="all">Tous</button>
                    <button class="filter-option" data-filter="engineering">IngÃ©nierie</button>
                    <button class="filter-option" data-filter="business">Business</button>
                    <button class="filter-option" data-filter="academic">AcadÃ©mique</button>
                </div>
            </div>
        </div>

        <!-- Section des templates -->
        <div class="templates-section sidebar-section">
            <div class="sidebar-section-title">
                <i class="fas fa-copy"></i> Templates disponibles
            </div>

            <ul class="template-list" id="templateList">
                <!-- Template 1 - Moderne/Professionnel -->
                <li class="template-item" data-template="template1" data-category="modern professional engineering">
                    <img src="{{ asset('images/cvs/1.png') }}" alt="Template Moderne" class="template-thumbnail">
                    <div class="template-info">
                        <h4 class="template-name">Tech Expert</h4>
                        <div class="template-category">
                            <span class="category-tag tag-modern">Moderne</span>
                            <span class="category-tag tag-professional">Professionnel</span>
                            <span class="category-tag tag-engineering">IngÃ©nierie</span>
                        </div>
                    </div>
                </li>

                <!-- Template 2 - Classique/Professionnel -->
                <li class="template-item" data-template="template2" data-category="classic professional business">
                    <img src="{{ asset('images/cvs/2.png') }}" alt="Template Classique" class="template-thumbnail">
                    <div class="template-info">
                        <h4 class="template-name">Executive</h4>
                        <div class="template-category">
                            <span class="category-tag tag-classic">Classique</span>
                            <span class="category-tag tag-professional">Professionnel</span>
                            <span class="category-tag tag-business">Business</span>
                        </div>
                    </div>
                </li>

                <!-- Template 3 - CrÃ©atif -->
                <li class="template-item" data-template="template3" data-category="creative modern">
                    <img src="{{ asset('images/cvs/3.png') }}" alt="Template CrÃ©atif" class="template-thumbnail">
                    <div class="template-info">
                        <h4 class="template-name">Innovation</h4>
                        <div class="template-category">
                            <span class="category-tag tag-creative">CrÃ©atif</span>
                            <span class="category-tag tag-modern">Moderne</span>
                        </div>
                    </div>
                </li>

                <!-- Template 4 - AcadÃ©mique -->
                <li class="template-item" data-template="template4" data-category="classic academic">
                    <img src="{{ asset('images/cvs/4.png') }}" alt="Template AcadÃ©mique" class="template-thumbnail">
                    <div class="template-info">
                        <h4 class="template-name">Academic Plus</h4>
                        <div class="template-category">
                            <span class="category-tag tag-classic">Classique</span>
                            <span class="category-tag tag-academic">AcadÃ©mique</span>
                        </div>
                    </div>
                </li>

                <!-- Template 5 - IngÃ©nierie Moderne -->
                <li class="template-item" data-template="template5" data-category="modern engineering">
                    <img src="{{ asset('images/cvs/5.png') }}" alt="Template IngÃ©nierie" class="template-thumbnail">
                    <div class="template-info">
                        <h4 class="template-name">Tech Engineering</h4>
                        <div class="template-category">
                            <span class="category-tag tag-modern">Moderne</span>
                            <span class="category-tag tag-engineering">IngÃ©nierie</span>
                        </div>
                    </div>
                </li>

                <!-- Template 6 - Business Moderne -->
                <li class="template-item" data-template="template6" data-category="modern business">
                    <img src="{{ asset('images/cvs/6.png') }}" alt="Template Business" class="template-thumbnail">
                    <div class="template-info">
                        <h4 class="template-name">Business Pro</h4>
                        <div class="template-category">
                            <span class="category-tag tag-modern">Moderne</span>
                            <span class="category-tag tag-business">Business</span>
                            <span class="category-tag tag-professional">Professionnel</span>
                        </div>
                    </div>
                </li>

                <!-- Template 7 - Classique Ã‰lÃ©gant -->
                <li class="template-item" data-template="template7" data-category="classic professional">
                    <img src="{{ asset('images/cvs/7.png') }}" alt="Template Classique Ã‰lÃ©gant" class="template-thumbnail">
                    <div class="template-info">
                        <h4 class="template-name">Classic Elite</h4>
                        <div class="template-category">
                            <span class="category-tag tag-classic">Classique</span>
                            <span class="category-tag tag-professional">Professionnel</span>
                        </div>
                    </div>
                </li>
            </ul>
        </div>
    </div>
</div>

<!-- Script pour la sidebar -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // RÃ©cupÃ©ration des Ã©lÃ©ments DOM
        const sidebar = document.getElementById('templateSidebar');
        const mainContent = document.querySelector('.main-content') || document.body;
        const sidebarToggle = document.getElementById('sidebarToggle');
        const closeSidebar = document.getElementById('closeSidebar');
        const sidebarOverlay = document.getElementById('sidebarOverlay');
        const templateItems = document.querySelectorAll('.template-item');
        const filterOptions = document.querySelectorAll('.filter-option');

        // Fonction pour afficher/masquer la sidebar sur mobile
        function toggleSidebar() {
            sidebar.classList.toggle('active');
            sidebarOverlay.classList.toggle('active');
            document.body.classList.toggle('sidebar-open');
        }

        // Ã‰couteurs d'Ã©vÃ©nements pour la sidebar
        if (sidebarToggle) {
            sidebarToggle.addEventListener('click', toggleSidebar);
        }

        if (closeSidebar) {
            closeSidebar.addEventListener('click', toggleSidebar);
        }

        if (sidebarOverlay) {
            sidebarOverlay.addEventListener('click', toggleSidebar);
        }

        // SÃ©lection d'un template
        templateItems.forEach(item => {
            item.addEventListener('click', function() {
                // Supprimer la classe selected de tous les templates
                templateItems.forEach(el => {
                    el.classList.remove('selected');
                });

                // Ajouter la classe selected au template cliquÃ©
                this.classList.add('selected');

                // RÃ©cupÃ©rer l'identifiant du template sÃ©lectionnÃ©
                const templateId = this.getAttribute('data-template');

                // Stocker la sÃ©lection (dans localStorage ou autre)
                localStorage.setItem('selectedTemplate', templateId);

                // DÃ©clencher un Ã©vÃ©nement personnalisÃ© pour informer d'autres scripts de la sÃ©lection
                const event = new CustomEvent('templateSelected', { detail: { templateId: templateId } });
                document.dispatchEvent(event);

                // Sur mobile, fermer la sidebar aprÃ¨s la sÃ©lection
                if (window.innerWidth < 992) {
                    toggleSidebar();
                }
            });
        });

        // Filtrage des templates
        filterOptions.forEach(option => {
            option.addEventListener('click', function() {
                const filterValue = this.getAttribute('data-filter');
                const filterGroup = this.closest('.filter-group');

                // Supprimer la classe active des autres options du mÃªme groupe
                if (filterGroup) {
                    const groupOptions = filterGroup.querySelectorAll('.filter-option');
                    groupOptions.forEach(opt => {
                        opt.classList.remove('active');
                    });
                }

                // Ajouter la classe active Ã  l'option cliquÃ©e
                this.classList.add('active');

                // Filtrer les templates
                filterTemplates();
            });
        });

        // Fonction pour filtrer les templates en fonction des options sÃ©lectionnÃ©es
        function filterTemplates() {
            const activeFilters = [];

            // RÃ©cupÃ©rer tous les filtres actifs
            document.querySelectorAll('.filter-option.active').forEach(option => {
                const filter = option.getAttribute('data-filter');
                if (filter !== 'all') {
                    activeFilters.push(filter);
                }
            });

            // Si aucun filtre actif, ou seulement des "all", afficher tous les templates
            if (activeFilters.length === 0) {
                templateItems.forEach(item => {
                    item.style.display = 'block';
                });
                return;
            }

            // Appliquer les filtres
            templateItems.forEach(item => {
                const categories = item.getAttribute('data-category').split(' ');
                let shouldShow = false;

                // Si un template correspond Ã  au moins un des filtres actifs, l'afficher
                for (let filter of activeFilters) {
                    if (categories.includes(filter)) {
                        shouldShow = true;
                        break;
                    }
                }

                item.style.display = shouldShow ? 'block' : 'none';
            });
        }

        // VÃ©rifier s'il y a un template sÃ©lectionnÃ© en localStorage
        const savedTemplate = localStorage.getItem('selectedTemplate');
        if (savedTemplate) {
            const template = document.querySelector(`.template-item[data-template="${savedTemplate}"]`);
            if (template) {
                template.classList.add('selected');
            }
        }

        // Initialiser avec tous les templates visibles
        filterOptions[0].classList.add('active'); // Activer le filtre "Tous" par dÃ©faut
    });
</script>


===================================================
FICHIER: Templates\partials\_header.html.twig
===================================================
<!-- <header class="header-container mb-4">
    <div class="container">
        <div class="logo-container py-2">
            <div class="logo-item">
                <img src="{{ asset('images/logo.png') }}" alt="Logo" class="img-fluid" style="max-height: 60px;">
            </div>
            <div class="logo-item text-center">
                <img src="{{ asset('images/tunisie-removebg-preview.png') }}" alt="Tunisia" class="img-fluid" style="max-height: 80px;">
            </div>
            <div class="logo-item text-end">
                <img src="{{ asset('images/esprim.png') }}" alt="ESPRIM" class="img-fluid" style="max-height: 40px;">
            </div>
        </div>
    </div>
</header> -->


===================================================
FICHIER: Templates\partials\_styles.html.twig
===================================================
<style>
    :root {
        /* Your selected color palette */
        --primary-red: #ee3124;
        --charcoal: #2d3748;
        --light-beige: #faf7f2;
        --slate-gray: #718096;
        --white: #ffffff;
        --dark-text: #1a202c;

        /* Additional utility variables */
        --border-radius: 8px;
        --box-shadow: 0 4px 12px rgba(0,0,0,0.08);
        --transition: all 0.3s ease;
        --card-shadow: 0 4px 6px rgba(45, 55, 72, 0.1), 0 5px 15px rgba(45, 55, 72, 0.05);
    }

    body {
        font-family: 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif;
        background-color: var(--light-beige);
        color: var(--dark-text);
        line-height: 1.6;
    }

    .header-container {
        background: linear-gradient(to right, var(--white), var(--light-beige));
        box-shadow: var(--box-shadow);
        border-bottom: 1px solid rgba(0,0,0,0.1);
        padding: 1rem 0;
    }

    .logo-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 15px 0;
    }

    .logo-item {
        transition: transform 0.3s;
    }

    .logo-item:hover {
        transform: scale(1.05);
    }

    /* Original sizing for banner images */
    .banner-image {
        width: 100px;
        height: auto;
        transition: transform 0.3s;
    }

    .banner-image:hover {
        transform: scale(1.05);
    }

    .banner-image.center {
        width: 120px;
    }

    /* Enhanced title styling - made 40% smaller */
    .main-title-container {
        text-align: center;
        margin: 2rem auto 2.5rem; /* Reduced margin to match smaller elements */
        position: relative;
        max-width: 600px;
    }

    .main-title {
        color: var(--charcoal);
        font-weight: 800;
        font-size: 1.8rem; /* 40% smaller from 3rem */
        letter-spacing: -0.5px;
        margin: 0;
        position: relative;
        display: inline-block;
        text-transform: uppercase;
    }

    .main-title::after {
        content: '';
        position: absolute;
        bottom: -6px; /* Smaller underline positioning */
        left: 50%;
        transform: translateX(-50%);
        width: 80%;
        height: 3px; /* Smaller underline height */
        background: linear-gradient(to right, var(--primary-red), var(--charcoal));
        border-radius: 2px;
    }

    .main-subtitle {
        color: var(--slate-gray);
        font-size: 1rem; /* Smaller subtitle */
        font-weight: 400;
        margin-top: 1rem; /* Reduced margin */
        font-style: italic;
    }

    .title-accent {
        color: var(--primary-red);
        position: relative;
        display: inline-block;
    }

    .title-accent::before {
        content: '';
        position: absolute;
        top: -3px; /* Smaller positioning */
        left: -6px; /* Smaller positioning */
        width: 15px; /* 40% smaller */
        height: 15px; /* 40% smaller */
        background-color: rgba(238, 49, 36, 0.1);
        border-radius: 50%;
        z-index: -1;
    }

    .title-icon {
        font-size: 1.8rem; /* 40% smaller from 3rem */
        color: var(--primary-red);
        margin-left: 10px; /* Smaller margin */
        vertical-align: middle;
        animation: float 3s ease-in-out infinite;
    }

    @keyframes float {
        0% {
            transform: translateY(0px);
        }
        50% {
            transform: translateY(-5px); /* Smaller float animation */
        }
        100% {
            transform: translateY(0px);
        }
    }

    /* Adjusted Logo badge styling - 40% smaller */
    .logo-badge {
        background-color: var(--white);
        width: 90px; /* 40% smaller from 150px */
        height: 90px; /* 40% smaller from 150px */
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1.2rem; /* Smaller margin */
        box-shadow: 0 3px 9px rgba(45, 55, 72, 0.1); /* Smaller shadow */
        border: 3px solid rgba(238, 49, 36, 0.2); /* 40% smaller border */
    }

    .title-logo {
        max-width: 66px; /* 40% smaller from 110px */
        max-height: 66px; /* 40% smaller from 110px */
        object-fit: contain;
    }

    .card {
        border: none;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
        overflow: hidden;
        margin-bottom: 3rem;
        background-color: var(--white);
    }

    .card-header {
        background-color: var(--primary-red);
        color: var(--white);
        font-weight: 600;
        padding: 1.2rem 1.5rem;
        border-bottom: none;
    }

    .card-body {
        padding: 2rem;
        background-color: var(--white);
    }

    .form-section {
        margin-bottom: 2.5rem;
        position: relative;
    }

    .form-section-title {
        color: var(--charcoal);
        margin-bottom: 1.5rem;
        padding-bottom: 0.7rem;
        border-bottom: 2px solid rgba(113, 128, 150, 0.2);
        font-weight: 600;
        display: flex;
        align-items: center;
    }

    .form-section-title i {
        font-size: 1.8rem;
        margin-right: 1rem;
        color: var(--primary-red);
    }

    .form-control, .form-select {
        padding: 0.75rem 1rem;
        border: 1px solid rgba(113, 128, 150, 0.3);
        border-radius: var(--border-radius);
        transition: var(--transition);
        background-color: var(--white);
    }

    .form-control:focus, .form-select:focus {
        border-color: var(--primary-red);
        box-shadow: 0 0 0 0.25rem rgba(238, 49, 36, 0.25);
    }

    .form-label {
        font-weight: 500;
        margin-bottom: 0.5rem;
        color: var(--charcoal);
    }

    .entry-container {
        background-color: var(--light-beige);
        border-radius: var(--border-radius);
        padding: 1.5rem;
        margin-bottom: 1rem;
        border: 1px solid rgba(113, 128, 150, 0.2);
        position: relative;
        transition: var(--transition);
    }

    .entry-container:hover {
        box-shadow: 0 5px 15px rgba(45, 55, 72, 0.05);
    }

    .btn-add {
        background-color: rgba(238, 49, 36, 0.1);
        color: var(--primary-red);
        border: 1px dashed var(--primary-red);
        padding: 0.6rem 1.2rem;
        border-radius: var(--border-radius);
        transition: var(--transition);
        display: flex;
        align-items: center;
        margin-top: 0.5rem;
    }

    .btn-add i {
        margin-right: 0.5rem;
    }

    .btn-add:hover {
        background-color: rgba(238, 49, 36, 0.15);
        color: var(--primary-red);
    }

    .btn-remove {
        position: absolute;
        right: 1rem;
        top: 1rem;
        background-color: rgba(238, 49, 36, 0.1);
        color: var(--primary-red);
        border: none;
        width: 2rem;
        height: 2rem;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: var(--transition);
    }

    .btn-remove:hover {
        background-color: rgba(238, 49, 36, 0.2);
        transform: scale(1.05);
    }

    .skill-badge {
        background-color: rgba(113, 128, 150, 0.1);
        color: var(--charcoal);
        border-radius: 20px;
        padding: 0.5rem 1rem;
        margin-right: 0.5rem;
        margin-bottom: 0.5rem;
        display: inline-flex;
        align-items: center;
        transition: var(--transition);
    }

    .skill-badge button {
        background: none;
        border: none;
        color: var(--slate-gray);
        margin-left: 0.5rem;
        cursor: pointer;
        font-size: 0.8rem;
    }

    .skill-badge:hover {
        background-color: rgba(238, 49, 36, 0.1);
        color: var(--primary-red);
    }

    .skills-input-group {
        display: flex;
        margin-bottom: 1rem;
    }

    .skills-input-group input {
        flex-grow: 1;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
    }

    .skills-input-group button {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        background-color: var(--primary-red);
        border-color: var(--primary-red);
    }

    .skills-input-group button:hover {
        background-color: rgba(238, 49, 36, 0.9);
        border-color: rgba(238, 49, 36, 0.9);
    }

    .btn {
        padding: 0.5rem 1rem;
        border-radius: var(--border-radius);
    }

    .btn-submit {
        background-color: var(--primary-red);
        border-color: var(--primary-red);
        font-weight: 600;
        padding: 0.8rem 2rem;
        border-radius: var(--border-radius);
        transition: var(--transition);
        box-shadow: 0 4px 6px rgba(238, 49, 36, 0.2);
        color: var(--white);
    }

    .btn-submit:hover {
        background-color: rgba(238, 49, 36, 0.9);
        border-color: rgba(238, 49, 36, 0.9);
        transform: translateY(-2px);
        box-shadow: 0 6px 12px rgba(238, 49, 36, 0.25);
    }

    .btn-preview {
        color: var(--charcoal);
        border-color: var(--charcoal);
    }

    .btn-preview:hover {
        background-color: var(--charcoal);
        border-color: var(--charcoal);
        color: var(--white);
    }

    /* Enhanced preview panel styling */
    .cv-preview {
        position: fixed;
        top: 0;
        right: 0;
        height: 100vh;
        width: 400px;
        background-color: var(--white);
        border-left: 1px solid rgba(113, 128, 150, 0.2);
        box-shadow: -4px 0 15px rgba(45, 55, 72, 0.1);
        padding: 2rem;
        overflow-y: auto;
        z-index: 1000;
        transform: translateX(100%);
        transition: transform 0.3s ease-in-out;
    }

    .cv-preview.show {
        transform: translateX(0);
    }

    .preview-close {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: none;
        border: none;
        font-size: 1.5rem;
        color: var(--slate-gray);
        cursor: pointer;
    }

    .preview-section {
        margin-bottom: 2rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid rgba(113, 128, 150, 0.2);
    }

    .preview-section:last-child {
        border-bottom: none;
    }

    .preview-section h5 {
        color: var(--primary-red);
        font-weight: 600;
        margin-bottom: 1rem;
    }

    .preview-section h6 {
        color: var(--charcoal);
        font-weight: 600;
        margin-top: 0.5rem;
    }

    .preview-content {
        padding: 1rem;
        background-color: var(--white);
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
    }

    /* Profile photo display in CV - matching the smaller logo badge size */
    .profile-photo-container {
        display: flex;
        justify-content: center;
        margin-bottom: 2rem;
    }

    .profile-photo-wrapper {
        position: relative;
        width: 90px; /* 40% smaller from 150px to match logo badge */
        height: 90px; /* 40% smaller from 150px to match logo badge */
        border-radius: 50%;
        overflow: hidden;
        border: 3px solid rgba(238, 49, 36, 0.2); /* 40% smaller border */
        box-shadow: 0 3px 9px rgba(45, 55, 72, 0.1); /* Smaller shadow */
    }

    .profile-photo {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    /* Preview panel profile photo */
    .preview-profile-photo {
        width: 90px; /* 40% smaller to match other photos */
        height: 90px; /* 40% smaller to match other photos */
        border-radius: 50%;
        object-fit: cover;
        border: 2px solid rgba(238, 49, 36, 0.2); /* Smaller border */
        box-shadow: 0 2px 6px rgba(45, 55, 72, 0.1); /* Smaller shadow */
        margin: 0 auto 1rem;
        display: block;
    }

    /* Progress steps */
    .steps-container {
        display: flex;
        justify-content: space-between;
        margin-bottom: 2rem;
    }

    .step-item {
        flex: 1;
        text-align: center;
        position: relative;
    }

    .step-item:not(:last-child)::after {
        content: '';
        position: absolute;
        top: 1.5rem;
        right: -50%;
        width: 100%;
        height: 2px;
        background-color: rgba(113, 128, 150, 0.3);
        z-index: 1;
    }

    .step-number {
        background-color: var(--slate-gray);
        color: var(--white);
        width: 3rem;
        height: 3rem;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 0.5rem;
        font-weight: 600;
        position: relative;
        z-index: 2;
        font-size: 1.2rem;
    }

    .step-title {
        font-size: 0.9rem;
        color: var(--slate-gray);
    }

    .step-item.active .step-number {
        background-color: var(--primary-red);
    }

    .step-item.active .step-title {
        color: var(--primary-red);
        font-weight: 600;
    }

    .step-item.completed .step-number {
        background-color: var(--charcoal);
    }

    .progress-container {
        height: 4px;
        background-color: rgba(113, 128, 150, 0.2);
        border-radius: 2px;
        margin-bottom: 2rem;
        overflow: hidden;
    }

    .progress-bar {
        height: 100%;
        background-color: var(--primary-red);
        width: 0;
        transition: width 0.3s ease;
    }

    .input-group-text {
        background-color: var(--charcoal);
        color: var(--white);
        border-color: var(--charcoal);
    }

    .form-section-page {
        display: none;
        opacity: 0;
        transform: translateX(20px);
        transition: none;
    }

    .form-section-page.active {
        display: block;
        opacity: 1;
        transform: translateX(0);
        transition: opacity 0.3s ease, transform 0.3s ease;
    }

    .form-navigation-buttons {
        border-top: 1px solid rgba(113, 128, 150, 0.2);
        padding-top: 1.5rem;
        margin-top: 2rem;
    }

    .next-section, .prev-section {
        padding: 0.6rem 1.2rem;
        border-radius: var(--border-radius);
    }

    .next-section i, .prev-section i {
        margin: 0 0.5rem;
    }

    .next-section {
        background-color: var(--charcoal);
        color: var(--white);
        border-color: var(--charcoal);
    }

    .next-section:hover {
        background-color: rgba(45, 55, 72, 0.9);
        border-color: rgba(45, 55, 72, 0.9);
    }

    .prev-section {
        border-color: var(--slate-gray);
        color: var(--slate-gray);
    }

    .prev-section:hover {
        background-color: var(--slate-gray);
        color: var(--white);
    }

    /* Welcome page styling */
    .welcome-container {
        background: linear-gradient(135deg, var(--light-beige), var(--white));
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        position: relative;
        padding: 2rem;
    }

    .welcome-grid {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        grid-template-rows: repeat(7, auto);
        gap: 1rem;
        max-width: 1200px;
        margin-bottom: 4rem;
    }

    .center-column {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 2rem;
    }

    .loading-gear {
        animation: spin 10s linear infinite;
    }

    @keyframes spin {
        from {
            transform: rotate(0deg);
        }
        to {
            transform: rotate(360deg);
        }
    }

    .enter-button {
        display: inline-flex;
        align-items: center;
        gap: 0.75rem;
        background-color: var(--primary-red);
        color: var(--white);
        padding: 1rem 2rem;
        font-size: 1.2rem;
        font-weight: 600;
        border-radius: var(--border-radius);
        text-decoration: none;
        box-shadow: 0 4px 10px rgba(238, 49, 36, 0.3);
        transition: var(--transition);
        margin-top: 2rem;
        border: none;
    }

    .enter-button:hover {
        transform: translateY(-3px);
        box-shadow: 0 6px 14px rgba(238, 49, 36, 0.4);
        color: var(--white);
    }

    /* Alert styling */
    .alert-info {
        background-color: rgba(45, 55, 72, 0.1);
        color: var(--charcoal);
        border-color: rgba(45, 55, 72, 0.2);
    }

    /* Autofill button styling */
    #autofillBtn {
        background-color: var(--charcoal);
        border-color: var(--charcoal);
        color: var(--white);
        padding: 0.25rem 0.75rem;
        font-size: 0.875rem;
        transition: var(--transition);
    }

    #autofillBtn:hover {
        background-color: rgba(45, 55, 72, 0.9);
    }

    footer {
        background-color: var(--charcoal) !important;
        color: var(--white) !important;
    }

    footer .text-muted {
        color: rgba(255, 255, 255, 0.7) !important;
    }

    @media (max-width: 768px) {
        .main-title {
            font-size: 1.5rem; /* Smaller on mobile */
        }

        .main-subtitle {
            font-size: 0.9rem; /* Smaller on mobile */
        }

        .card-body {
            padding: 1.5rem;
        }

        .step-number {
            width: 2.5rem;
            height: 2.5rem;
        }

        .step-title {
            font-size: 0.8rem;
        }

        .cv-preview {
            width: 90%;
        }

        /* Adjust banner images for mobile */
        .banner-image {
            width: 80px;
        }

        .banner-image.center {
            width: 100px;
        }

        .profile-photo-wrapper {
            width: 75px; /* Smaller on mobile */
            height: 75px; /* Smaller on mobile */
        }

        .logo-badge {
            width: 75px; /* Smaller on mobile */
            height: 75px; /* Smaller on mobile */
        }

        .title-logo {
            max-width: 55px; /* Smaller on mobile */
            max-height: 55px; /* Smaller on mobile */
        }

        .preview-profile-photo {
            width: 75px; /* Smaller on mobile */
            height: 75px; /* Smaller on mobile */
        }
    }

    /* Icon styling */
    .fas, .far, .fab, .fa {
        margin-right: 0.5rem;
    }
</style>


===================================================
FICHIER: Templates\test\index.html.twig
===================================================
{% extends 'base.html.twig' %}

{% block title %}Test des fonctionnalitÃ©s{% endblock %}

{% block body %}
    <div class="container py-5">
        <div class="row mb-4">
            <div class="col-12">
                <h1 class="text-primary-color mb-4">Test des fonctionnalitÃ©s</h1>
                <p class="lead">Cette page permet de tester les diffÃ©rentes fonctionnalitÃ©s implÃ©mentÃ©es pour ESPRIT CV Generator.</p>
                <div class="alert alert-info">
                    <i class="bi bi-info-circle"></i> Cette page est destinÃ©e aux tests uniquement et n'est pas liÃ©e Ã  l'application principale.
                </div>
                <p>
                    <a href="{{ path('app_welcome') }}" class="btn btn-primary">Retour Ã  l'application principale</a>
                </p>
            </div>
        </div>
        
        <div class="row">
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-header">
                        Mode sombre
                    </div>
                    <div class="card-body">
                        <p class="card-text">Testez le basculement entre mode clair et mode sombre.</p>
                        <button class="btn btn-primary" onclick="if(window.espritApp && window.espritApp.toggleDarkMode) window.espritApp.toggleDarkMode()">
                            Basculer mode sombre
                        </button>
                    </div>
                </div>
            </div>
            
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-header">
                        Langues
                    </div>
                    <div class="card-body">
                        <p class="card-text">Changez la langue de l'interface:</p>
                        <div class="d-flex flex-wrap gap-2">
                            <button class="btn btn-sm btn-outline-primary me-2" onclick="if(window.espritApp && window.espritApp.setLanguage) window.espritApp.setLanguage('fr')">FranÃ§ais</button>
                            <button class="btn btn-sm btn-outline-primary me-2" onclick="if(window.espritApp && window.espritApp.setLanguage) window.espritApp.setLanguage('en')">English</button>
                            <button class="btn btn-sm btn-outline-primary me-2" onclick="if(window.espritApp && window.espritApp.setLanguage) window.espritApp.setLanguage('es')">EspaÃ±ol</button>
                            <button class="btn btn-sm btn-outline-primary me-2" onclick="if(window.espritApp && window.espritApp.setLanguage) window.espritApp.setLanguage('de')">Deutsch</button>
                            <button class="btn btn-sm btn-outline-primary" onclick="if(window.espritApp && window.espritApp.setLanguage) window.espritApp.setLanguage('ar')">Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©</button>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-header">
                        Notifications
                    </div>
                    <div class="card-body">
                        <p class="card-text">Testez le systÃ¨me de notifications toast:</p>
                        <button class="btn btn-info" onclick="if(window.espritApp && window.espritApp.showNotification) window.espritApp.showNotification('Test', 'Ceci est une notification de test')">
                            Afficher notification
                        </button>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header bg-primary-color text-white">
                        Informations systÃ¨me
                    </div>
                    <div class="card-body">
                        <p class="card-text">
                            <strong>Date et heure:</strong> {{ "now"|date("Y-m-d H:i:s") }}
                        </p>
                        <p class="card-text">
                            <strong>Environnement Symfony:</strong> {{ app.environment }}
                        </p>
                        <p class="card-text">
                            <strong>Version Bootstrap:</strong> <span id="bootstrap-version">VÃ©rification...</span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // VÃ©rifier si Bootstrap est installÃ©
            if (typeof bootstrap !== 'undefined') {
                document.getElementById('bootstrap-version').textContent = bootstrap.Tooltip.VERSION || 'InstallÃ© (version non dÃ©tectÃ©e)';
            } else {
                document.getElementById('bootstrap-version').textContent = 'Non dÃ©tectÃ©';
            }
            
            // Afficher une notification de bienvenue
            setTimeout(function() {
                if (window.espritApp && window.espritApp.showNotification) {
                    window.espritApp.showNotification('Bienvenue', 'Page de test chargÃ©e avec succÃ¨s!');
                }
            }, 1000);
        });
    </script>
{% endblock %}


===================================================
FICHIER: Templates\components\language_nav.html.twig
===================================================
{#
Navigation multilingue avec drapeaux
Fichier: language_nav.html.twig
Date: 2025-04-26 17:35:21
Utilisateur: Mohamed-abidi-95
#}
<!--
<nav class="bg-white border-gray-200 dark:bg-gray-900">
    <div class="header-logos">
        <div class="container mx-auto px-4">
            <div class="flex justify-center items-center space-x-12">
                <div class="logo-container">
                    <img src="{{ asset('images/esprit-logo.png') }}" alt="ESPRIT" class="h-12">
                </div>
                <div class="logo-container">
                    <img src="{{ asset('images/career-logo.png') }}" alt="Career Center" class="h-10">
                </div>
            </div>
        </div>
    </div>

    <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
        <a href="#" class="flex items-center space-x-3 rtl:space-x-reverse">
            <img src="{{ asset('images/esprim.png') }}" class="h-8" alt="ESPRIT CV Generator" />
            <span class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white">ESPRIT CV</span>
        </a>
        <div class="flex items-center md:order-2 space-x-1 md:space-x-0 rtl:space-x-reverse">
            <button type="button" id="language-dropdown-button" data-dropdown-toggle="language-dropdown-menu" class="inline-flex items-center font-medium justify-center px-4 py-2 text-sm text-gray-900 dark:text-white rounded-lg cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700 dark:hover:text-white">
                {# Drapeau franÃ§ais par dÃ©faut #}
                <svg class="w-5 h-5 rounded-full me-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="flag-icon-css-fr" viewBox="0 0 512 512">
                    <path fill="#fff" d="M0 0h512v512H0z"/>
                    <path fill="#00267f" d="M0 0h170.7v512H0z"/>
                    <path fill="#f31830" d="M341.3 0H512v512H341.3z"/>
                </svg>
                FranÃ§ais
            </button>
            {# Menu dÃ©roulant des langues #}
            <div class="z-50 hidden my-4 text-base list-none bg-white divide-y divide-gray-100 rounded-lg shadow-md dark:bg-gray-700" id="language-dropdown-menu">
                <ul class="py-2 font-medium" role="none">
                    {# FranÃ§ais #}
                    <li>
                        <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white" role="menuitem" data-lang="fr">
                            <div class="inline-flex items-center">
                                <svg class="h-3.5 w-3.5 rounded-full me-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" id="flag-icon-css-fr" viewBox="0 0 512 512">
                                    <path fill="#fff" d="M0 0h512v512H0z"/>
                                    <path fill="#00267f" d="M0 0h170.7v512H0z"/>
                                    <path fill="#f31830" d="M341.3 0H512v512H341.3z"/>
                                </svg>
                                FranÃ§ais
                            </div>
                        </a>
                    </li>

                    {# Anglais #}
                    <li>
                        <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white" role="menuitem" data-lang="en">
                            <div class="inline-flex items-center">
                                <svg aria-hidden="true" class="h-3.5 w-3.5 rounded-full me-2" xmlns="http://www.w3.org/2000/svg" id="flag-icon-css-us" viewBox="0 0 512 512">
                                    <g fill-rule="evenodd">
                                        <g stroke-width="1pt">
                                            <path fill="#bd3d44" d="M0 0h247v10H0zm0 20h247v10H0zm0 20h247v10H0zm0 20h247v10H0zm0 20h247v10H0zm0 20h247v10H0zm0 20h247v10H0z" transform="scale(3.9385)"/>
                                            <path fill="#fff" d="M0 10h247v10H0zm0 20h247v10H0zm0 20h247v10H0zm0 20h247v10H0zm0 20h247v10H0zm0 20h247v10H0z" transform="scale(3.9385)"/>
                                        </g>
                                        <path fill="#192f5d" d="M0 0h98.8v70H0z" transform="scale(3.9385)"/>
                                        <path fill="#fff" d="M8.2 3l1 2.8H12L9.7 7.5l.9 2.7-2.4-1.7L6 10.2l.9-2.7-2.4-1.7h3zm16.5 0l.9 2.8h2.9l-2.4 1.7 1 2.7-2.4-1.7-2.4 1.7 1-2.7-2.4-1.7h2.9zm16.5 0l.9 2.8H45l-2.4 1.7 1 2.7-2.4-1.7-2.4 1.7 1-2.7-2.4-1.7h2.9z" transform="scale(3.9385)"/>
                                    </g>
                                </svg>
                                English
                            </div>
                        </a>
                    </li>

                    {# Allemand (Deutsch) #}
                    <li>
                        <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white" role="menuitem" data-lang="de">
                            <div class="inline-flex items-center">
                                <svg class="h-3.5 w-3.5 rounded-full me-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" id="flag-icon-css-de" viewBox="0 0 512 512">
                                    <path fill="#ffce00" d="M0 341.3h512V512H0z"/>
                                    <path d="M0 0h512v170.7H0z"/>
                                    <path fill="#d00" d="M0 170.7h512v170.6H0z"/>
                                </svg>
                                Deutsch
                            </div>
                        </a>
                    </li>

                    {# Arabe #}
                    <li>
                        <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white" role="menuitem" data-lang="ar">
                            <div class="inline-flex items-center">
                                <svg class="h-3.5 w-3.5 rounded-full me-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" id="flag-icon-css-ma" viewBox="0 0 512 512">
                                    {# Drapeau marocain comme exemple pour l'arabe #}
                                    <path fill="#c1272d" d="M0 0h512v512H0z"/>
                                    <path fill="none" stroke="#006233" stroke-width="12" d="M256 191.4l-38 116.8 99.4-72.2H194.6l99.3 72.2z"/>
                                </svg>
                                Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©
                            </div>
                        </a>
                    </li>
                </ul>
            </div>

            {# Bouton de menu mobile #}
            <button data-collapse-toggle="navbar-language" type="button" class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600" aria-controls="navbar-language" aria-expanded="false">
                <span class="sr-only">Ouvrir le menu</span>
                <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"/>
                </svg>
            </button>
        </div>

        {# Menu principal #}
        <div class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1" id="navbar-language">
            <ul class="flex flex-col font-medium p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
                <li>
                    <a href="#" class="block py-2 px-3 text-white bg-primary-color rounded-sm md:bg-transparent md:text-primary-color md:p-0 md:dark:text-blue-500" aria-current="page">Accueil</a>
                </li>
                <li>
                    <a href="#templates" class="block py-2 px-3 md:p-0 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:hover:text-primary-color dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">Templates</a>
                </li>
                <li>
                    <a href="#customize" class="block py-2 px-3 md:p-0 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:hover:text-primary-color dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">Personnalisation</a>
                </li>
                <li>
                    <a href="#pricing" class="block py-2 px-3 md:p-0 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:hover:text-primary-color dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">Tarifs</a>
                </li>
                <li>
                    <a href="#contact" class="block py-2 px-3 md:p-0 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:hover:text-primary-color dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">Contact</a>
                </li>
            </ul>
        </div>
    </div>

    {# Information de date et utilisateur #}
    <div class="bg-gray-50 dark:bg-gray-800 text-center py-1 text-xs text-gray-500 dark:text-gray-400">
        <span>Date et heure actuelles (UTC): 2025-04-26 17:35:21</span> |
        <span>Utilisateur: Mohamed-abidi-95</span>
    </div>
</nav> -->


===================================================
FICHIER: Templates\components\_cv_examples_carousel.html.twig
===================================================
{# Composant Carrousel d'exemples de CV #}
<div class="cv-examples-carousel" tabindex="0" aria-label="Exemples de CV">
    {# Annonce pour lecteurs d'Ã©cran #}
    <div class="sr-only-announcement" aria-live="polite" role="status" style="position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0, 0, 0, 0); white-space: nowrap; border: 0;"></div>

    {# Navigation du carrousel #}
    <div class="carousel-navigation">
        <button class="carousel-btn prev-btn" aria-label="Template prÃ©cÃ©dent">
            <i class="fas fa-chevron-left"></i>
        </button>
        <div class="carousel-indicators" role="tablist">
            <span class="indicator active" data-index="0" role="tab" aria-selected="true" aria-label="Template 1" tabindex="0"></span>
            <span class="indicator" data-index="1" role="tab" aria-selected="false" aria-label="Template 2" tabindex="0"></span>
        </div>
        <button class="carousel-btn next-btn" aria-label="Template suivant">
            <i class="fas fa-chevron-right"></i>
        </button>
    </div>

    {# Conteneur des CV #}
    <div class="cv-carousel-container">
        {# Slide 1 - Template Ã‰lÃ©gant #}
        <div class="cv-slide active" aria-hidden="false">
            <div class="template-label">Template Ã‰lÃ©gant</div>
            {% include 'components/cv_templates/_template1.html.twig' %}
        </div>

        {# Slide 2 - Template Moderne #}
        <div class="cv-slide" aria-hidden="true">
            <div class="template-label">Template Moderne</div>
            {% include 'components/cv_templates/_template2.html.twig' %}
        </div>
    </div>
</div>


===================================================
FICHIER: Templates\components\_navbar.html.twig
===================================================
{# Templates/components/_navbar.html.twig #}

{# Templates/components/_navbar.html.twig #}

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container">
        <a class="navbar-brand" href="{{ path('app_welcome') }}">
            <img src="{{ asset('images/esprim.png') }}" alt="ESPRIM Logo" height="40" class="me-2">
            ESPRIT CV Generator
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarMain" aria-controls="navbarMain" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarMain">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="{{ path('app_welcome') }}">Accueil</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Ã€ propos</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Services</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">ModÃ¨les</a>
                </li>
            </ul>
            <div class="d-flex align-items-center">
                {# Dark Mode Toggle #}
                <button type="button" class="dark-mode-toggle me-3" aria-label="Basculer le mode sombre">
                    <i class="bi bi-moon-fill moon-icon"></i>
                    <i class="bi bi-sun-fill sun-icon d-none"></i>
                </button>

                {# Language Dropdown #}
                <div class="dropdown language-dropdown">
                    <button class="btn btn-outline-secondary dropdown-toggle d-flex align-items-center" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                        <img src="{{ asset('images/flags/fr.png') }}" alt="FranÃ§ais" class="flag-icon">
                        <span>FranÃ§ais</span>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton1">
                        <li>
                            <a class="dropdown-item d-flex align-items-center" href="#" data-lang="fr">
                                <img src="{{ asset('images/flags/fr.png') }}" alt="FranÃ§ais" class="flag-icon">
                                <span>FranÃ§ais</span>
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item d-flex align-items-center" href="#" data-lang="en">
                                <img src="{{ asset('images/flags/gb.png') }}" alt="English" class="flag-icon">
                                <span>English</span>
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item d-flex align-items-center" href="#" data-lang="es">
                                <img src="{{ asset('images/flags/es.png') }}" alt="EspaÃ±ol" class="flag-icon">
                                <span>EspaÃ±ol</span>
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item d-flex align-items-center" href="#" data-lang="de">
                                <img src="{{ asset('images/flags/de.png') }}" alt="Deutsch" class="flag-icon">
                                <span>Deutsch</span>
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item d-flex align-items-center" href="#" data-lang="ar">
                                <img src="{{ asset('images/flags/tn.png') }}" alt="Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©" class="flag-icon">
                                <span>Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©</span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</nav>


===================================================
FICHIER: Templates\components\cv_templates\_template1.html.twig
===================================================
{# Template CV Ã‰lÃ©gant #}
<div class="cv-container">
    <div class="header">
        <img src="{{ asset('images/cvs/profile-example.jpg') }}" alt="Photo de profil" class="profile-img" onerror="this.src='{{ asset('images/placeholder-profile.jpg') }}'">
        <h1>Mohamed ABIDI</h1>
        <h2>Business Information Systems</h2>
        <p class="about-me">BAC + 3 en informatique de gestion, Ã©tudiant Ã  ESPRIT SCHOOL OF BUSINESS. SpÃ©cialisÃ© en dÃ©veloppement web avec le stack MERN et en gestion des donnÃ©es. ExpÃ©rience en gestion de sponsoring et administration de club.</p>
    </div>

    <div class="main-content">
        <div class="left-column">
            <div class="info">
                <h3 class="section-title">Contact</h3>
                <div class="info-item">
                    <p>TÃ©lÃ©phone : +216 23 199 953</p>
                    <p>Email : mohamed.abidi@esprit.tn</p>
                    <p>Adresse : Sousse, Hammamet Sud / Tozeur, Nefta</p>
                </div>
            </div>

            <div class="languages">
                <h3 class="section-title">Langues</h3>
                <div class="language-item">
                    <p>FranÃ§ais (B2 selon Rosetta Stone)</p>
                    <p>Anglais (B2 selon Rosetta Stone)</p>
                    <p>Arabe (Natif)</p>
                </div>
            </div>

            <div class="interests">
                <h3 class="section-title">IntÃ©rÃªts</h3>
                <div class="interest-item">
                    <p>DÃ©veloppement web</p>
                    <p>Programmation JavaScript</p>
                    <p>Big Data</p>
                </div>
            </div>

            <div class="competences">
                <h3 class="section-title">CompÃ©tences</h3>

                <div class="skills">
                    <div class="skill-category">
                        <h4>Techniques</h4>
                        <ul class="skill-list">
                            <li>MERN Stack</li>
                            <li>JavaScript</li>
                            <li>Gestion des donnÃ©es</li>
                        </ul>
                    </div>

                    <div class="skill-category">
                        <h4>Professionnelles</h4>
                        <ul class="skill-list">
                            <li>Gestion</li>
                            <li>Ã‰conomie</li>
                            <li>Administration</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="right-column">
            <div class="experiences">
                <h3 class="section-title">ExpÃ©riences Professionnelles</h3>

                <div class="experience">
                    <div class="experience-title">Responsable Sponsoring <span class="experience-company">- TUNIVISIONS ESPRIT</span></div>
                    <div class="experience-date">2022 - PrÃ©sent</div>
                    <div class="experience-description">
                        <ul>
                            <li>Gestion du secteur du club Tunivisions Esprit, avec responsabilitÃ© de la recherche et nÃ©gociation des partenariats</li>
                            <li>Membre du conseil d'administration du club Tunivisions Esprit, participant aux dÃ©cisions stratÃ©giques et Ã  la gouvernance</li>
                        </ul>
                    </div>
                </div>
            </div>

            <div class="education">
                <h3 class="section-title">Formations</h3>

                <div class="education-item">
                    <div class="education-title">Licence en Business Computing <span class="education-institution">- ESPRIT SCHOOL OF BUSINESS</span></div>
                    <div class="education-date">2021 - PrÃ©sent</div>
                    <div class="education-description">
                        <p>Parcours en Business Information Systems (BIS), spÃ©cialisation en dÃ©veloppement web et gestion des donnÃ©es.</p>
                    </div>
                </div>

                <div class="education-item">
                    <div class="education-title">BaccalaurÃ©at Sciences <span class="education-institution">- LycÃ©e BECHIR KHRAYEF NEFTA</span></div>
                    <div class="education-date">2020</div>
                    <div class="education-description">
                        <p>Formation scientifique gÃ©nÃ©rale ayant permis l'admission Ã  ESPRIT SCHOOL OF BUSINESS.</p>
                    </div>
                </div>
            </div>

            <div class="skills-section">
                <h3 class="section-title">CompÃ©tences spÃ©cifiques</h3>
                <p>MaÃ®trise des techniques actualisÃ©es en dÃ©veloppement web avec le stack MERN (MongoDB, Express, React, Node.js). DÃ©veloppeur amateur en JavaScript avec connaissances approfondies dans le domaine de la gestion des donnÃ©es et du Big Data. CompÃ©tences en gestion de projet et en Ã©conomie.</p>
            </div>
        </div>
    </div>
</div>


===================================================
FICHIER: Templates\components\cv_templates\_template2.html.twig
===================================================
{# Template CV Moderne #}
<div class="cv-container">
    <div class="header">
        <img src="{{ asset('images/cvs/profile-example.jpg') }}" alt="Photo de profil" class="profile-img" onerror="this.src='{{ asset('images/placeholder-profile.jpg') }}'">
        <div class="name-title">
            <h1>Mohamed ABIDI</h1>
            <h2>3Ã¨me annÃ©e BIS (Business Information Systems)</h2>
            <p>BAC + 3 en informatique de gestion, actuellement Ã©tudiant Ã  ESPRIT SCHOOL OF BUSINESS, spÃ©cialisÃ© en dÃ©veloppement web et gestion des donnÃ©es. PassionnÃ© par l'innovation technologique et les solutions numÃ©riques pour les entreprises.</p>
        </div>
    </div>

    <div class="main-content">
        <div class="left-column">
            <div class="info">
                <h3 class="section-title">Informations</h3>
                <div class="info-item">
                    <p><strong>TÃ©lÃ©phone :</strong> +216 23 199 953</p>
                    <p><strong>Email :</strong> mohamed.abidi@esprit.tn</p>
                    <p><strong>Adresse :</strong> Sousse, Hammamet Sud / Tozeur, Nefta</p>
                    <p><strong>LinkedIn :</strong> linkedin.com/in/mohamedabidi</p>
                    <p><strong>GitHub :</strong> github.com/mohamed-abidi</p>
                </div>
            </div>

            <div class="languages">
                <h3 class="section-title">Langues</h3>
                <div class="language-item">
                    <p>FranÃ§ais (B2 selon Rosetta Stone)</p>
                    <p>Anglais (B2 selon Rosetta Stone)</p>
                    <p>Arabe (Natif)</p>
                </div>
            </div>

            <div class="interests">
                <h3 class="section-title">IntÃ©rÃªts</h3>
                <div class="interest-item">
                    <p>DÃ©veloppement web</p>
                    <p>Gestion des donnÃ©es</p>
                    <p>Programmation JavaScript</p>
                    <p>Intelligence artificielle</p>
                    <p>Big Data & Analytics</p>
                </div>
            </div>

            <div class="certifications">
                <h3 class="section-title">Certifications</h3>
                <div class="certification-item">
                    <div class="certification-title">Rosetta Stone - Anglais B2</div>
                    <div class="certification-date">2023</div>
                </div>
                <div class="certification-item">
                    <div class="certification-title">Rosetta Stone - FranÃ§ais B2</div>
                    <div class="certification-date">2023</div>
                </div>
            </div>
        </div>

        <div class="right-column">
            <div class="objective">
                <h3 class="section-title">Objectif Professionnel</h3>
                <p>Ã‰tudiant motivÃ© en informatique de gestion cherchant Ã  mettre en pratique mes compÃ©tences en dÃ©veloppement web et gestion des donnÃ©es dans un environnement professionnel innovant. Je souhaite contribuer Ã  des projets qui combinent technologie et solutions d'affaires pour rÃ©pondre aux dÃ©fis des entreprises modernes.</p>
            </div>

            <div class="experiences">
                <h3 class="section-title">ExpÃ©riences Professionnelles</h3>

                <div class="experience">
                    <div class="experience-title">Responsable Sponsoring - TUNIVISIONS ESPRIT</div>
                    <div class="experience-date">2022 - PrÃ©sent</div>
                    <div class="experience-description">
                        <ul>
                            <li>Gestion du secteur du club Tunivisions Esprit, coordination de l'Ã©quipe sponsoring</li>
                            <li>Membre du conseil d'administration du club Tunivisions Esprit</li>
                            <li>Ã‰laboration et mise en Å“uvre de stratÃ©gies pour attirer des sponsors</li>
                            <li>NÃ©gociation de partenariats et suivi des relations avec les sponsors</li>
                        </ul>
                    </div>
                </div>

                <div class="experience">
                    <div class="experience-title">DÃ©veloppeur Web Junior - Projet acadÃ©mique</div>
                    <div class="experience-date">2023</div>
                    <div class="experience-description">
                        <ul>
                            <li>DÃ©veloppement d'applications web avec la stack MERN</li>
                            <li>Conception et implÃ©mentation de bases de donnÃ©es</li>
                            <li>Collaboration en Ã©quipe sur des projets de dÃ©veloppement</li>
                        </ul>
                    </div>
                </div>
            </div>

            <div class="education">
                <h3 class="section-title">Formations</h3>

                <div class="education-item">
                    <div class="education-title">LICENCE EN BUSINESS COMPUTING - ESPRIT SCHOOL OF BUSINESS</div>
                    <div class="education-date">2021 - PrÃ©sent</div>
                    <div class="education-description">
                        <p>Parcours en Business Information Systems (BIS). Formation couvrant les aspects techniques et managÃ©riaux des systÃ¨mes d'information dans l'entreprise.</p>
                    </div>
                </div>

                <div class="education-item">
                    <div class="education-title">BAC SCIENCES - LycÃ©e BECHIR KHRAYEF NEFTA</div>
                    <div class="education-date">2020</div>
                    <div class="education-description">
                        <p>Formation scientifique gÃ©nÃ©rale ayant permis l'admission Ã  ESPRIT SCHOOL OF BUSINESS.</p>
                    </div>
                </div>
            </div>

            <div class="competences">
                <h3 class="section-title">CompÃ©tences</h3>

                <div class="skills">
                    <div class="skill-category">
                        <h4>Techniques</h4>
                        <ul class="skill-list">
                            <li>DÃ©veloppement web (MERN stack)</li>
                            <li>Programmation JavaScript</li>
                            <li>Gestion des donnÃ©es & Big Data</li>
                            <li>HTML5/CSS3</li>
                            <li>React.js</li>
                            <li>Node.js</li>
                        </ul>
                    </div>

                    <div class="skill-category">
                        <h4>Professionnelles</h4>
                        <ul class="skill-list">
                            <li>Connaissances techniques en gestion</li>
                            <li>Connaissances rÃ©glementaires en Ã©conomie</li>
                            <li>Gestion de projets</li>
                            <li>Communication</li>
                            <li>Travail d'Ã©quipe</li>
                            <li>RÃ©solution de problÃ¨mes</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


===================================================
FICHIER: src\Controller\CVGeneratorController.php
===================================================
<?php
// Last updated: 2025-04-24 19:12:05 (Based on user timestamp)
// Author: Mohamed-abidi-95

namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\HeaderUtils;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
// Correct use statement for Annotations
use Symfony\Component\Routing\Annotation\Route;
use Dompdf\Dompdf;
use Dompdf\Options;
use Psr\Log\LoggerInterface; // Added LoggerInterface

class CVGeneratorController extends AbstractController
{
    private LoggerInterface $logger;

    // Inject logger for better debugging if needed
    public function __construct(LoggerInterface $logger)
    {
        $this->logger = $logger;
    }

    /**
     * @Route("/", name="app_welcome")
     */
    public function welcome(): Response
    {
        // Assuming welcome.html.twig exists in templates/cv_generator/
        return $this->render('cv_generator/welcome.html.twig');
    }

    /**
     * @Route("/cv", name="app_cv_generator")
     */
    public function index(): Response
    {
        // Sample data for autofill testing (remains the same)
        $sampleData = [
            'firstName' => 'John', 'lastName' => 'Doe', 'position' => 'Software Developer',
            'email' => 'john.doe@example.com', 'phone' => '+216 12 345 678',
            'address' => '123 Main Street', 'city' => 'Tunis', 'country' => 'Tunisia',
            'github' => 'github.com/johndoe', 'linkedin' => 'linkedin.com/in/johndoe',
            'education' => [
                ['degree' => 'Bachelor of Science in Computer Science', 'institution' => 'ESPRIT Engineering School', 'location' => 'Tunis, Tunisia', 'startDate' => '09/2018', 'endDate' => '06/2022', 'description' => 'Graduated with honors...'],
                ['degree' => 'High School Diploma', 'institution' => 'International High School', 'location' => 'Tunis, Tunisia', 'startDate' => '09/2015', 'endDate' => '06/2018', 'description' => 'Science track...']
            ],
            'experience' => [
                ['position' => 'Software Engineer', 'company' => 'Tech Solutions Inc.', 'location' => 'Tunis, Tunisia', 'startDate' => '08/2022', 'endDate' => 'Present', 'description' => 'Developing full-stack web apps...'],
                ['position' => 'Web Development Intern', 'company' => 'StartUp Hub', 'location' => 'Tunis, Tunisia', 'startDate' => '06/2021', 'endDate' => '09/2021', 'description' => 'Assisted in development...']
            ],
            'skills' => ['JavaScript', 'React.js', 'Node.js', 'HTML/CSS', 'PHP', 'MySQL', 'Git', 'Agile', 'Problem Solving'],
            'languages' => ['Arabic (Native)', 'French (Fluent)', 'English (Advanced)'],
            'additionalInfo' => 'Passionate about building high-quality software...'
        ];

        // Renders main.html.twig as per user's provided code
        return $this->render('cv_generator/main.html.twig', [
            'currentStep' => 1, // This might need dynamic update if using multi-step logic
            'sampleData' => $sampleData
        ]);
    }

    /**
     * @Route("/cv-generator/generate", name="app_cv_generate", methods={"POST"})
     *                                    ^^^^^^^^^^^^^^^^^ Route name updated
     */
    public function generate(Request $request): Response
    {
        // Set memory limit and execution time (consider moving to php.ini if possible)
        ini_set('memory_limit', '512M');
        ini_set('max_execution_time', 300);

        $this->logger->info('CV Generation request received.'); // Log start

        try {
            // --- Debugging Logic (remains the same) ---
            if ($request->query->has('debug_data')) {
                return new Response('<pre>' . print_r($request->request->all(), true) . '</pre>', 200, ['Content-Type' => 'text/html']);
            }
            if ($request->query->has('debug')) {
                $formData = [/* ... default debug data ... */]; // Add default data
                $templateType = $request->request->get('template', 'green');
                $templateName = ($templateType === 'blue') ? 'cv_template_blue.html.twig' : 'cv_template_green.html.twig';
                $html = $this->renderView('cv_generator/' . $templateName, ['data' => $formData, 'photoData' => '', 'generatedDate' => new \DateTime()]);
                return new Response($html, 200, ['Content-Type' => 'text/html']);
            }

            // --- Simple Test PDF Logic (remains the same) ---
            if ($request->request->get('simpleTest') === 'true') {
                $html = '<!DOCTYPE html><html><head><title>Test CV</title></head><body><h1>Test PDF OK</h1></body></html>'; // Simplified
                $options = new Options();
                $options->set('isHtml5ParserEnabled', true); $options->set('defaultFont', 'DejaVu Sans');
                $dompdf = new Dompdf($options);
                $dompdf->loadHtml($html); $dompdf->setPaper('A4'); $dompdf->render();
                $response = new Response($dompdf->output());
                $disposition = HeaderUtils::makeDisposition(HeaderUtils::DISPOSITION_ATTACHMENT, 'simple-test-cv.pdf');
                $response->headers->set('Content-Type', 'application/pdf'); $response->headers->set('Content-Disposition', $disposition);
                return $response;
            }
            // --- Direct Download Test Logic ---
            if ($request->request->get('directDownload') === 'true') {
                $html = '<!DOCTYPE html><html><head><title>Direct Download Test</title></head><body><h1>Direct Download Test OK</h1></body></html>'; // Simplified
                $options = new Options();
                $options->set('isHtml5ParserEnabled', true); $options->set('defaultFont', 'DejaVu Sans');
                $dompdf = new Dompdf($options);
                $dompdf->loadHtml($html); $dompdf->setPaper('A4'); $dompdf->render();
                $response = new Response($dompdf->output());
                $disposition = HeaderUtils::makeDisposition(HeaderUtils::DISPOSITION_ATTACHMENT, 'direct-download-test.pdf');
                $response->headers->set('Content-Type', 'application/pdf'); $response->headers->set('Content-Disposition', $disposition);
                return $response;
            }


            // --- Main PDF Generation Logic ---

            // Initialize form data structure
            $formData = [
                'firstName' => $request->request->get('firstName', ''),
                'lastName' => $request->request->get('lastName', ''),
                'position' => $request->request->get('position', ''),
                'email' => $request->request->get('email', ''),
                'phone' => $request->request->get('phone', ''),
                'address' => $request->request->get('address', ''),
                'city' => $request->request->get('city', ''),
                'country' => $request->request->get('country', ''),
                'github' => $request->request->get('github', ''),
                'linkedin' => $request->request->get('linkedin', ''),
                'additionalInfo' => $request->request->get('additionalInfo', ''),
                'education' => [],
                'experience' => [],
                'skills' => [],
                'languages' => []
            ];

            // Helper function to process array fields (Handles education[0][degree] style)
            $processIndexedArrayField = function(string $baseName) use ($request, &$formData) {
                $data = $request->request->all($baseName); // Gets e.g., ['education'][0]['degree']
                if (is_array($data)) {
                    foreach ($data as $index => $entryData) {
                        if (is_array($entryData)) {
                            $hasDataInEntry = false;
                            foreach($entryData as $value) {
                                if (!empty($value)) {
                                    $hasDataInEntry = true;
                                    break;
                                }
                            }
                            if ($hasDataInEntry) {
                                $formData[$baseName][] = $entryData;
                            }
                        }
                    }
                }
            };

            // Process dynamic sections using the helper
            $processIndexedArrayField('education');
            $processIndexedArrayField('experience');

            // Process skills (assuming submitted as skills[])
            $skillsInput = $request->request->all('skills'); // Get as array
            if (is_array($skillsInput)) {
                $formData['skills'] = array_values(array_filter($skillsInput)); // Filter empty values and re-index
            }

            // Process languages (assuming submitted as languages[])
            $languagesInput = $request->request->all('languages'); // Get as array
            if (is_array($languagesInput)) {
                $formData['languages'] = array_values(array_filter($languagesInput)); // Filter empty values and re-index
            }


            // --- Get Template and Photo ---
            $templateType = $request->request->get('template', 'green');
            $photoData = $request->request->get('photoData', ''); // Base64 encoded photo data

            $templateName = ($templateType === 'blue') ? 'cv_template_blue.html.twig' : 'cv_template_green.html.twig';

            // Ensure template exists
            if (!$this->get('twig')->getLoader()->exists('cv_generator/' . $templateName)) {
                $this->logger->error("Template not found: cv_generator/{$templateName}");
                throw new \Exception("Selected template '{$templateType}' could not be found.");
            }

            $this->logger->info("Rendering CV with template: {$templateName}");

            // --- Render HTML ---
            $html = $this->renderView('cv_generator/' . $templateName, [
                'data' => $formData,
                'photoData' => $photoData, // Pass photo data to template
                'generatedDate' => new \DateTime()
            ]);

            // --- Configure Dompdf ---
            $options = new Options();
            $options->set('isHtml5ParserEnabled', true);
            $options->set('isRemoteEnabled', true); // Needed for images
            $options->set('defaultFont', 'DejaVu Sans');
            // Set base path relative to the public directory for assets
            // chroot is often needed if assets are loaded via relative paths from templates
            $options->set('chroot', $this->getParameter('kernel.project_dir') . '/public');

            // Create Dompdf instance
            $dompdf = new Dompdf($options);
            $dompdf->loadHtml($html);
            $dompdf->setPaper('A4', 'portrait');
            $this->logger->info("Rendering PDF...");
            $dompdf->render();
            $this->logger->info("PDF Rendering complete.");

            // --- Generate Filename ---
            $filename = sprintf('%s-%s-CV-%s.pdf',
                preg_replace('/[^a-zA-Z0-9]/', '_', $formData['firstName'] ?: 'CV'), // Sanitize names
                preg_replace('/[^a-zA-Z0-9]/', '_', $formData['lastName'] ?: 'User'),
                (new \DateTime())->format('Ymd') // Simpler date format
            );
            $filename = preg_replace('/_+/', '_', $filename); // Remove consecutive underscores

            // --- Create and Return Response ---
            $this->logger->info("Sending PDF response: {$filename}");
            $response = new Response($dompdf->output());
            $disposition = HeaderUtils::makeDisposition(
                HeaderUtils::DISPOSITION_ATTACHMENT, // Force download
                $filename
            );
            $response->headers->set('Content-Type', 'application/pdf');
            $response->headers->set('Content-Disposition', $disposition);

            return $response;

        } catch (\Throwable $e) { // Catch Throwable for broader error catching
            $this->logger->error("Error generating PDF: {$e->getMessage()}", ['exception' => $e]);

            // Detailed error response (consider disabling stack trace in production)
            $errorHtml = '<html><head><title>PDF Error</title><style>body{font-family:sans-serif;padding:20px}h1{color:red}pre{background:#eee;padding:10px;border:1px solid #ccc;overflow:auto}</style></head><body><h1>PDF Generation Error</h1>';
            $errorHtml .= '<p><strong>Message:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>';
            // Only show trace in development environment
            if ($this->getParameter('kernel.environment') === 'dev') {
                $errorHtml .= '<p><strong>File:</strong> ' . htmlspecialchars($e->getFile()) . ' (Line: ' . $e->getLine() . ')</p>';
                $errorHtml .= '<h2>Trace:</h2><pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>';
                $errorHtml .= '<h2>Request Data:</h2><pre>' . htmlspecialchars(print_r($request->request->all(), true)) . '</pre>';
            } else {
                $errorHtml .= '<p>An internal error occurred. Please try again later or contact support.</p>';
            }
            $errorHtml .= '<a href="' . $this->generateUrl('app_cv_generator') . '">Back to CV Generator</a></body></html>';

            // Optionally add a header to indicate error to the JS fetch call
            $response = new Response($errorHtml, Response::HTTP_INTERNAL_SERVER_ERROR, ['Content-Type' => 'text/html']);
            $response->headers->set('X-Error-Message', $e->getMessage()); // Custom header for JS
            return $response;
        }
    }

    /**
     * @Route("/cv-generator/test-pdf", name="app_cv_test_pdf")
     *                                    ^^^^^^^^^^^^^^^^^^ Route name updated
     */
    public function testPdf(): Response
    {
        // --- Test PDF Logic (remains mostly the same) ---
        try {
            $html = '<!DOCTYPE html><html><head><title>Test PDF</title></head><body><h1>Test PDF OK</h1><p>Generated: '.(new \DateTime())->format('Y-m-d H:i:s').'</p></body></html>';
            $options = new Options();
            $options->set('isHtml5ParserEnabled', true); $options->set('defaultFont', 'DejaVu Sans');
            $dompdf = new Dompdf($options);
            $dompdf->loadHtml($html); $dompdf->setPaper('A4'); $dompdf->render();
            $response = new Response($dompdf->output());
            $disposition = HeaderUtils::makeDisposition(HeaderUtils::DISPOSITION_INLINE, 'test.pdf'); // Inline for testing
            $response->headers->set('Content-Type', 'application/pdf'); $response->headers->set('Content-Disposition', $disposition);
            return $response;
        } catch (\Throwable $e) {
            $this->logger->error("Error in test PDF generation: {$e->getMessage()}", ['exception' => $e]);
            return new Response('<html><body><h1>Test PDF Error</h1><p>'.htmlspecialchars($e->getMessage()).'</p><pre>'.htmlspecialchars($e->getTraceAsString()).'</pre></body></html>', 500, ['Content-Type' => 'text/html']);
        }
    }

    /**
     * @Route("/cv-generator/debug-form", name="app_cv_debug_form", methods={"POST"})
     *                                      ^^^^^^^^^^^^^^^^^^^^ Route name added
     */
    public function debugForm(Request $request): Response
    {
        // --- Debug Form Logic (remains the same) ---
        try {
            return new Response('<html><body><h1>Form Debug</h1><pre>' . print_r($request->request->all(), true) . '</pre></body></html>', 200, ['Content-Type' => 'text/html']);
        } catch (\Throwable $e) {
            return new Response('Error: ' . $e->getMessage(), 500);
        }
    }
}


===================================================
FICHIER: src\Controller\TestController.php
===================================================
<?php
// src/Controller/TestController.php
namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

class TestController extends AbstractController
{
    /**
     * @Route("/test", name="app_test")
     */
    public function index(): Response
    {
        return $this->render('test/index.html.twig');
    }

    /**
     * @Route("/test/components", name="app_test_components")
     */
    public function components(): Response
    {
        return $this->render('test/components.html.twig');
    }
}


===================================================
FICHIER: config\packages\asset_mapper.yaml
===================================================
framework:
    asset_mapper:
        # The paths to make available to the asset mapper.
        paths:
            - assets/
        missing_import_mode: strict

when@prod:
    framework:
        asset_mapper:
            missing_import_mode: warn



===================================================
FICHIER: config\packages\cache.yaml
===================================================
framework:
    cache:
        # Unique name of your app: used to compute stable namespaces for cache keys.
        #prefix_seed: your_vendor_name/app_name

        # The "app" cache stores to the filesystem by default.
        # The data in this cache should persist between deploys.
        # Other options include:

        # Redis
        #app: cache.adapter.redis
        #default_redis_provider: redis://localhost

        # APCu (not recommended with heavy random-write workloads as memory fragmentation can cause perf issues)
        #app: cache.adapter.apcu

        # Namespaced pools use the above "app" backend by default
        #pools:
            #my.dedicated.cache: null



===================================================
FICHIER: config\packages\csrf.yaml
===================================================
# Enable stateless CSRF protection for forms and logins/logouts
framework:
    form:
        csrf_protection:
            token_id: submit

    csrf_protection:
        stateless_token_ids:
            - submit
            - authenticate
            - logout



===================================================
FICHIER: config\packages\debug.yaml
===================================================
when@dev:
    debug:
        # Forwards VarDumper Data clones to a centralized server allowing to inspect dumps on CLI or in your browser.
        # See the "server:dump" command to start a new server.
        dump_destination: "tcp://%env(VAR_DUMPER_SERVER)%"



===================================================
FICHIER: config\packages\doctrine.yaml
===================================================
doctrine:
    dbal:
        url: '%env(resolve:DATABASE_URL)%'

        # IMPORTANT: You MUST configure your server version,
        # either here or in the DATABASE_URL env var (see .env file)
        #server_version: '16'

        profiling_collect_backtrace: '%kernel.debug%'
        use_savepoints: true
    orm:
        auto_generate_proxy_classes: true
        enable_lazy_ghost_objects: true
        report_fields_where_declared: true
        validate_xml_mapping: true
        naming_strategy: doctrine.orm.naming_strategy.underscore_number_aware
        identity_generation_preferences:
            Doctrine\DBAL\Platforms\PostgreSQLPlatform: identity
        auto_mapping: true
        mappings:
            App:
                type: attribute
                is_bundle: false
                dir: '%kernel.project_dir%/src/Entity'
                prefix: 'App\Entity'
                alias: App
        controller_resolver:
            auto_mapping: false

when@test:
    doctrine:
        dbal:
            # "TEST_TOKEN" is typically set by ParaTest
            dbname_suffix: '_test%env(default::TEST_TOKEN)%'

when@prod:
    doctrine:
        orm:
            auto_generate_proxy_classes: false
            proxy_dir: '%kernel.build_dir%/doctrine/orm/Proxies'
            query_cache_driver:
                type: pool
                pool: doctrine.system_cache_pool
            result_cache_driver:
                type: pool
                pool: doctrine.result_cache_pool

    framework:
        cache:
            pools:
                doctrine.result_cache_pool:
                    adapter: cache.app
                doctrine.system_cache_pool:
                    adapter: cache.system



===================================================
FICHIER: config\packages\doctrine_migrations.yaml
===================================================
doctrine_migrations:
    migrations_paths:
        # namespace is arbitrary but should be different from App\Migrations
        # as migrations classes should NOT be autoloaded
        'DoctrineMigrations': '%kernel.project_dir%/migrations'
    enable_profiler: false



===================================================
FICHIER: config\packages\framework.yaml
===================================================
# see https://symfony.com/doc/current/reference/configuration/framework.html
framework:
    secret: '%env(APP_SECRET)%'
    #csrf_protection: true
    http_method_override: false
    handle_all_throwables: true

    # Enables session support. Note that the session will ONLY be started if you read or write from it.
    # Remove or comment this section to explicitly disable session support.
    session:
        handler_id: null
        cookie_secure: auto
        cookie_samesite: lax
        storage_factory_id: session.storage.factory.native

    #esi: true
    #fragments: true
    php_errors:
        log: true # You might configure timezone here if needed for logs, e.g., log: E_ALL & ~E_USER_DEPRECATED & ~E_DEPRECATED & ~E_STRICT

    # Timezone and locale settings
    default_locale: 'fr'
    # timezone: 'UTC' # <-- REMOVED THIS LINE (set in php.ini)

    # Asset configuration
    assets:
    # Default path strategy is usually sufficient if assets are in public/
    # You might need 'version_strategy' or 'json_manifest_path' depending on your setup (e.g., using Webpack Encore)
    # If you are NOT using Webpack Encore or similar, this minimal config is often fine.
    # Removed the packages section below as it's not needed for assets in public/
    # packages:
    #     images:
    #         base_urls:
    #             - '/images'
    #     css:
    #         base_urls:
    #             - '/css'
    #     js:
    #         base_urls:
    #             - '/js'

    # Router configuration
    router:
        utf8: true
        # If using attributes for routes (recommended), remove route_class if present
        # route_class: Symfony\Component\Routing\Route # Example, might not be needed

    # Validation configuration
    validation:
        enabled: true
        enable_attributes: true
        # Enables validator auto-mapping support.
        # For instance, basic validation constraints will be inferred from Doctrine's metadata.
        #auto_mapping:
        #    App\Entity\: []

    # Cache configuration
    cache:
        app: cache.adapter.filesystem
        system: cache.adapter.system
        directory: '%kernel.cache_dir%/pools'

    # Form configuration
    form:
        enabled: true

    # Mailer configuration (if needed)
    mailer:
        enabled: true
        dsn: '%env(MAILER_DSN)%'

    # Notifier configuration (if needed)
    notifier:
        enabled: true
        chatter_transports: []
        texter_transports: []

    # HTTP Client configuration (if needed)
    http_client:
        default_options:
            max_redirects: 5

    # Error handler configuration
    error_controller: null # Keep this as null unless you have a specific error controller

    # Trusted configuration
    trusted_proxies: null
    trusted_headers: ['x-forwarded-for', 'x-forwarded-host', 'x-forwarded-proto', 'x-forwarded-port', 'x-forwarded-prefix']
    trusted_hosts: null

    # Web link configuration
    web_link:
        enabled: true

# REMOVED framework_extra section - belongs in config/packages/sensio_framework_extra.yaml if used
# REMOVED templating section - belongs in config/packages/twig.yaml
# REMOVED parameters section - belongs in config/services.yaml

when@test:
    framework:
        test: true
        session:
            storage_factory_id: session.storage.factory.mock_file
        profiler:
            collect: false
        validation:
            not_compromised_password: false

when@dev:
    framework:
        profiler:
            only_exceptions: false


===================================================
FICHIER: config\packages\mailer.yaml
===================================================
framework:
    mailer:
        dsn: '%env(MAILER_DSN)%'



===================================================
FICHIER: config\packages\messenger.yaml
===================================================
framework:
    messenger:
        failure_transport: failed

        transports:
            # https://symfony.com/doc/current/messenger.html#transport-configuration
            async:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                options:
                    use_notify: true
                    check_delayed_interval: 60000
                retry_strategy:
                    max_retries: 3
                    multiplier: 2
            failed: 'doctrine://default?queue_name=failed'
            # sync: 'sync://'

        default_bus: messenger.bus.default

        buses:
            messenger.bus.default: []

        routing:
            Symfony\Component\Mailer\Messenger\SendEmailMessage: async
            Symfony\Component\Notifier\Message\ChatMessage: async
            Symfony\Component\Notifier\Message\SmsMessage: async

            # Route your messages to the transports
            # 'App\Message\YourMessage': async



===================================================
FICHIER: config\packages\monolog.yaml
===================================================
monolog:
    channels:
        - deprecation # Deprecations are logged in the dedicated "deprecation" channel when it exists

when@dev:
    monolog:
        handlers:
            main:
                type: stream
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                level: debug
                channels: ["!event"]
            # uncomment to get logging in your browser
            # you may have to allow bigger header sizes in your Web server configuration
            #firephp:
            #    type: firephp
            #    level: info
            #chromephp:
            #    type: chromephp
            #    level: info
            console:
                type: console
                process_psr_3_messages: false
                channels: ["!event", "!doctrine", "!console"]

when@test:
    monolog:
        handlers:
            main:
                type: fingers_crossed
                action_level: error
                handler: nested
                excluded_http_codes: [404, 405]
                channels: ["!event"]
            nested:
                type: stream
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                level: debug

when@prod:
    monolog:
        handlers:
            main:
                type: fingers_crossed
                action_level: error
                handler: nested
                excluded_http_codes: [404, 405]
                buffer_size: 50 # How many messages should be saved? Prevent memory leaks
            nested:
                type: stream
                path: php://stderr
                level: debug
                formatter: monolog.formatter.json
            console:
                type: console
                process_psr_3_messages: false
                channels: ["!event", "!doctrine"]
            deprecation:
                type: stream
                channels: [deprecation]
                path: php://stderr
                formatter: monolog.formatter.json



===================================================
FICHIER: config\packages\notifier.yaml
===================================================
framework:
    notifier:
        chatter_transports:
        texter_transports:
        channel_policy:
            # use chat/slack, chat/telegram, sms/twilio or sms/nexmo
            urgent: ['email']
            high: ['email']
            medium: ['email']
            low: ['email']
        admin_recipients:
            - { email: admin@example.com }



===================================================
FICHIER: config\packages\routing.yaml
===================================================
framework:
    router:
        # Configure how to generate URLs in non-HTTP contexts, such as CLI commands.
        # See https://symfony.com/doc/current/routing.html#generating-urls-in-commands
        #default_uri: http://localhost

when@prod:
    framework:
        router:
            strict_requirements: null



===================================================
FICHIER: config\packages\security.yaml
===================================================
security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        users_in_memory: { memory: null }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: users_in_memory

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon



===================================================
FICHIER: config\packages\translation.yaml
===================================================
framework:
    default_locale: en
    translator:
        default_path: '%kernel.project_dir%/translations'
        fallbacks:
            - en
        providers:



===================================================
FICHIER: config\packages\twig.yaml
===================================================
twig:
    default_path: '%kernel.project_dir%/Templates'
    paths:
        '%kernel.project_dir%/Templates': ~
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'


===================================================
FICHIER: config\packages\validator.yaml
===================================================
framework:
    validation:
        # Enables validator auto-mapping support.
        # For instance, basic validation constraints will be inferred from Doctrine's metadata.
        #auto_mapping:
        #    App\Entity\: []

when@test:
    framework:
        validation:
            not_compromised_password: false



===================================================
FICHIER: config\packages\webpack_encore.yaml
===================================================
webpack_encore:
    # The path where Encore is building the assets - i.e. Encore.setOutputPath()
    output_path: '%kernel.project_dir%/public/build'
    # If multiple builds are defined (as shown below), you can disable the default build:
    # output_path: false

    # Set attributes that will be rendered on all script and link tags
    script_attributes:
        defer: true
        # Uncomment (also under link_attributes) if using Turbo Drive
        # https://turbo.hotwired.dev/handbook/drive#reloading-when-assets-change
        # 'data-turbo-track': reload
    # link_attributes:
        # Uncomment if using Turbo Drive
        # 'data-turbo-track': reload

    # If using Encore.enableIntegrityHashes() and need the crossorigin attribute (default: false, or use 'anonymous' or 'use-credentials')
    # crossorigin: 'anonymous'

    # Preload all rendered script and link tags automatically via the HTTP/2 Link header
    # preload: true

    # Throw an exception if the entrypoints.json file is missing or an entry is missing from the data
    # strict_mode: false

    # If you have multiple builds:
    # builds:
        # frontend: '%kernel.project_dir%/public/frontend/build'

        # pass the build name as the 3rd argument to the Twig functions
        # {{ encore_entry_script_tags('entry1', null, 'frontend') }}

framework:
    assets:
        json_manifest_path: '%kernel.project_dir%/public/build/manifest.json'

#when@prod:
#    webpack_encore:
#        # Cache the entrypoints.json (rebuild Symfony's cache when entrypoints.json changes)
#        # Available in version 1.2
#        cache: true

#when@test:
#    webpack_encore:
#        strict_mode: false



===================================================
FICHIER: config\packages\web_profiler.yaml
===================================================
when@dev:
    web_profiler:
        toolbar: true

    framework:
        profiler:
            collect_serializer_data: true

when@test:
    framework:
        profiler: { collect: false }



===================================================
FICHIER: public\css\animations.css
===================================================
/* --- START COPY --- */
@keyframes float {
    0% {
        transform: translate(0, 0);
    }
    50% {
        transform: translate(15px, -15px);
    }
    100% {
        transform: translate(0, 0);
    }
}

@keyframes scroll {
    0% {
        transform: translateX(0);
    }
    100% {
        /* Adjust calc value based on number of logos if needed for perfect loop */
        transform: translateX(calc(-100% / 3));
    }
}

/* Used by Hero floating elements AND CV Example decorations */
@keyframes float-element {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-15px);
    }
}

@keyframes pulse {
    0% {
        transform: scale(1);
        opacity: 1;
    }
    50% {
        transform: scale(1.2);
        opacity: 0.7;
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

@keyframes appear {
    to {
        opacity: 1;
        transform: translateX(0);
    }
}
/* --- START COPY --- */
/* Keyframe from Hero Badge dot */
@keyframes pulse {
    0% {
        transform: scale(1);
        opacity: 1;
    }
    50% {
        transform: scale(1.2);
        opacity: 0.7;
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

/* General scroll animation (move from logo-marquee section) */
@keyframes scroll {
    0% {
        transform: translateX(0);
    }
    100% {
        transform: translateX(calc(-100% / 3)); /* Adjust if needed */
    }
}

/* General float animation (move from cv-examples section) */
@keyframes float-element {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-15px);
    }
}


/* General Animations */
.animate-on-scroll {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.8s ease, transform 0.8s ease;
}

.animate-on-scroll.show {
    opacity: 1;
    transform: translateY(0);
}
/* --- END COPY --- */
/* --- END COPY --- */


===================================================
FICHIER: public\css\base.css
===================================================
/* --- START COPY --- */
/* Sections styling */
.section-heading {
    text-align: center;
    margin-bottom: 50px;
}

.section-title {
    font-size: 2.5rem;
    color: var(--secondary-dark);
    margin-bottom: 0.5rem;
}

.section-subtitle {
    font-size: 1.125rem;
    color: var(--secondary-color);
    max-width: 800px;
    margin: 0 auto;
}

/* Fix for missing Font Awesome icons */
.fa, .fas, .far, .fab {
    font-family: "Font Awesome 6 Free", "Font Awesome 6 Brands";
    font-weight: 900;
}

.far {
    font-weight: 400;
}

.fab {
    font-family: "Font Awesome 6 Brands";
}
/* --- END COPY --- */


===================================================
FICHIER: public\css\cta.css
===================================================
/* --- START COPY --- */
/* CTA Section */
.cta-section {
    background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
    color: white;
    padding: 80px 0;
    position: relative;
    overflow: hidden;
}

.cta-shape-1,
.cta-shape-2 {
    position: absolute;
    border-radius: 50%;
    z-index: 1;
}

/* Social Icons in CTA Section */
.social-icons-container {
    margin-top: 30px;
    text-align: center;
}

.social-title {
    font-size: 1rem;
    color: white;
    margin-bottom: 15px;
    opacity: 0.9;
}

.social-icons {
    display: flex;
    justify-content: center;
    gap: 15px;
}

.social-icon {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.15);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 18px;
    transition: all 0.3s ease;
}

.social-icon:hover {
    background-color: white;
    color: var(--primary-color);
    transform: translateY(-5px);
    box-shadow: 0 10px 15px rgba(0, 0, 0, 0.2);
}

/* SpÃ©cifique Ã  chaque icÃ´ne pour l'effet hover */
.social-icon:nth-child(1):hover {
    color: #FF0000; /* YouTube red */
}

.social-icon:nth-child(2):hover {
    color: #E1306C; /* Instagram pink */
}

.social-icon:nth-child(3):hover {
    color: #000000; /* X/Twitter */
}

.social-icon:nth-child(4):hover {
    color: #1877F2; /* Facebook blue */
}

.social-icon:nth-child(5):hover {
    color: #0A66C2; /* LinkedIn blue */
}
/* --- START COPY --- */
/* Note: Base CTA styles missing in this snippet */
/* SpÃ©cifique Ã  chaque icÃ´ne pour l'effet hover */
.social-icon:nth-child(1):hover {
    color: #FF0000; /* YouTube red */
}

.social-icon:nth-child(2):hover {
    color: #E1306C; /* Instagram pink */
}

.social-icon:nth-child(3):hover {
    color: #000000; /* X/Twitter */
}

.social-icon:nth-child(4):hover {
    color: #1877F2; /* Facebook blue */
}

.social-icon:nth-child(5):hover {
    color: #0A66C2; /* LinkedIn blue */
}
/* --- END COPY --- */
/* --- END COPY --- */


===================================================
FICHIER: public\css\cv-examples-carousel.css
===================================================
/* CV Examples Carousel CSS
 * Date: 2025-04-27
 * Auteur: Mohamed-abidi-95
 */
/* Styles pour Template 1 - Ã‰lÃ©gant */
.cv-slide:nth-child(1) .cv-container {
    font-family: 'Open Sans', sans-serif;
}

.cv-slide:nth-child(1) .cv-container h1,
.cv-slide:nth-child(1) .cv-container h2,
.cv-slide:nth-child(1) .cv-container .section-title {
    font-family: 'Cormorant Garamond', serif;
}

.cv-slide:nth-child(1) .cv-container .header::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 5px;
    background: linear-gradient(to right, #6a11cb 0%, #2575fc 100%);
}

.cv-slide:nth-child(1) .cv-container .section-title:after {
    content: "";
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 100%;
    height: 1px;
    background: linear-gradient(to right, #6a11cb 0%, #2575fc 100%);
}

.cv-slide:nth-child(1) .cv-container .experience:before,
.cv-slide:nth-child(1) .cv-container .education-item:before {
    content: "";
    position: absolute;
    left: 0;
    top: 8px;
    width: 8px;
    height: 8px;
    background-color: #2575fc;
    border-radius: 50%;
}

/* Styles pour Template 2 - Moderne */
.cv-slide:nth-child(2) .cv-container {
    font-family: 'Raleway', sans-serif;
}

.cv-slide:nth-child(2) .cv-container h1,
.cv-slide:nth-child(2) .cv-container h2,
.cv-slide:nth-child(2) .cv-container .section-title {
    font-family: 'Playfair Display', Georgia, serif;
}

.cv-slide:nth-child(2) .cv-container .header {
    display: flex;
    padding: 40px 30px;
}

.cv-slide:nth-child(2) .cv-container .section-title {
    text-transform: uppercase;
    border-bottom: 2px solid #ddd;
    padding-bottom: 10px;
}

.cv-slide:nth-child(2) .cv-container .experience:last-child,
.cv-slide:nth-child(2) .cv-container .education-item:last-child {
    border-bottom: none;
}
/* Conteneur principal du carrousel */
.cv-examples-carousel {
    position: relative;
    max-width: 800px; /* Taille standardisÃ©e */
    margin: 50px auto;
    overflow: hidden;
    box-shadow: 0 15px 35px rgba(50, 50, 93, 0.1), 0 5px 15px rgba(0, 0, 0, 0.07);
    border-radius: 8px;
    background: white;
}

/* Titre du carrousel */
.cv-examples-title {
    text-align: center;
    margin-bottom: 30px;
    font-family: 'Poppins', sans-serif;
}

.cv-examples-title h2 {
    font-size: 2rem;
    color: var(--secondary-dark, #212832);
    margin-bottom: 0.5rem;
}

.cv-examples-title p {
    font-size: 1rem;
    color: var(--secondary-color, #343f52);
    max-width: 600px;
    margin: 0 auto;
}

/* Navigation du carrousel */
.carousel-navigation {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 15px 0;
    background: linear-gradient(to right, #f9f9f9, #ffffff);
    border-bottom: 1px solid #eee;
    z-index: 10;
}

.carousel-btn {
    background-color: white;
    border: 1px solid #ddd;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    margin: 0 10px;
    color: #555;
}

.carousel-btn:hover {
    background-color: #f5f5f5;
    border-color: var(--primary-color, #2a63ff);
    color: var(--primary-color, #2a63ff);
}

/* Indicateurs de position */
.carousel-indicators {
    display: flex;
    gap: 8px;
}

.indicator {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: #ddd;
    cursor: pointer;
    transition: all 0.3s ease;
}

.indicator.active {
    background-color: var(--primary-color, #2a63ff);
    transform: scale(1.2);
}

/* Ã‰tiquette du template actuel */
.template-label {
    position: absolute;
    top: 15px;
    right: 15px;
    background-color: rgba(255, 255, 255, 0.8);
    padding: 5px 10px;
    border-radius: 15px;
    font-size: 0.85rem;
    font-weight: 500;
    color: var(--primary-color, #2a63ff);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    z-index: 5;
}

/* Conteneur des CV */
.cv-carousel-container {
    position: relative;
    width: 100%;
    height: 600px; /* Hauteur fixe pour le carrousel */
    overflow: hidden;
}

/* Slides du carrousel */
.cv-slide {
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: 0;
    transform: translateX(100%);
    transition: transform 0.8s ease, opacity 0.8s ease;
    overflow-y: auto; /* Permettre le dÃ©filement vertical si le CV est plus grand */
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px 0;
}

.cv-slide.active {
    opacity: 1;
    transform: translateX(0);
    z-index: 2;
}

.cv-slide.prev {
    transform: translateX(-100%);
}

/* Barre de dÃ©filement personnalisÃ©e */
.cv-slide::-webkit-scrollbar {
    width: 8px;
}

.cv-slide::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 10px;
}

.cv-slide::-webkit-scrollbar-thumb {
    background: #ccc;
    border-radius: 10px;
}

.cv-slide::-webkit-scrollbar-thumb:hover {
    background: #aaa;
}

/* Animation de zoom lors de la transition */
.cv-slide .cv-container {
    transition: transform 1.2s ease;
    transform: scale(0.95);
}

.cv-slide.active .cv-container {
    transform: scale(1);
}

/* Adaptation responsive pour le CV */
.cv-slide .cv-container {
    width: 100%;
    max-width: 700px; /* Largeur maximale du CV */
    margin: 0 auto;
    transform-origin: center;
}

/* Effets de transition avancÃ©s */
@keyframes fadeInScale {
    from {
        opacity: 0;
        transform: scale(0.95) translateX(50px);
    }
    to {
        opacity: 1;
        transform: scale(1) translateX(0);
    }
}

@keyframes fadeOutScale {
    from {
        opacity: 1;
        transform: scale(1) translateX(0);
    }
    to {
        opacity: 0;
        transform: scale(0.95) translateX(-50px);
    }
}

.cv-slide.active {
    animation: fadeInScale 1s ease forwards;
}

.cv-slide.prev {
    animation: fadeOutScale 1s ease forwards;
}

/* Effet de profondeur 3D */
.cv-carousel-container {
    perspective: 1000px;
}

.cv-slide .cv-container {
    transform-style: preserve-3d;
    backface-visibility: hidden;
}

/* Adaptation pour mobile */
@media (max-width: 768px) {
    .cv-carousel-container {
        height: 650px;
    }

    .cv-slide .cv-container {
        padding: 10px;
    }

    .template-label {
        top: 10px;
        right: 10px;
        font-size: 0.75rem;
    }
}

/* Personnalisation pour les modÃ¨les de CV spÃ©cifiques */
/* Les styles spÃ©cifiques Ã  chaque template sont inclus directement dans leurs containers respectifs */


===================================================
FICHIER: public\css\cv-examples-enhancements.css
===================================================
.cv-example-showcase {
    position: relative;
    height: 500px;
    display: flex;
    justify-content: center;
    align-items: center;
}

.cv-example-container {
    position: relative;
    width: 350px; /* Taille rÃ©duite */
    height: 450px; /* Taille rÃ©duite */
    overflow: hidden;
    border-radius: 12px;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    background-color: white;
    z-index: 2;
}

.cv-examples-slider {
    position: relative;
    width: 100%;
    height: 100%;
}

.cv-example-slide {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    opacity: 0;
    transition: opacity 1s ease, transform 1s ease;
    transform: scale(1.05);
    pointer-events: none;
}

.cv-example-slide.active {
    opacity: 1;
    transform: scale(1);
    pointer-events: auto;
}

.cv-example-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: top;
}

.cv-example-label {
    position: absolute;
    bottom: 15px;
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(255, 255, 255, 0.9);
    padding: 8px 15px;
    border-radius: 20px;
    font-weight: 600;
    font-size: 0.9rem;
    color: var(--secondary-dark);
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
}

.cv-examples-navigation {
    position: absolute;
    bottom: 20px;
    left: 0;
    width: 100%;
    display: flex;
    justify-content: center;
    gap: 8px;
    z-index: 3;
}

.cv-nav-dot {
    width: 10px;
    height: 10px;
    background-color: rgba(255, 255, 255, 0.5);
    border-radius: 50%;
    transition: all 0.3s ease;
    cursor: pointer;
    border: 2px solid white;
}

.cv-nav-dot.active {
    background-color: var(--primary-color);
    transform: scale(1.2);
}
/* --- START COPY --- */
/* Note: Base styles for CV examples missing in this snippet */
/* Ã‰lÃ©ments dÃ©coratifs */
.decoration-element {
    position: absolute;
    width: 50px;
    height: 50px;
    background: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    z-index: 1;
}

.decoration-1 {
    top: 10%;
    right: 5%;
    font-size: 20px;
    color: var(--success-color);
    animation: float-element 6s infinite ease-in-out;
}

.decoration-2 {
    bottom: 15%;
    left: 10%;
    font-size: 18px;
    color: #ffc107;
    animation: float-element 8s infinite ease-in-out 1s;
}

/* Keyframe defined here, move to animations.css ideally */
@keyframes float-element {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-15px);
    }
}

/* Responsive */
@media (max-width: 992px) {
    .cv-example-showcase {
        height: 400px;
        margin-top: 30px;
    }

    .cv-example-container {
        width: 280px;
        height: 380px;
    }
}

@media (max-width: 576px) {
    .cv-example-container {
        width: 240px;
        height: 320px;
    }

    .cv-example-label {
        font-size: 0.8rem;
    }
}
/* --- END COPY --- */


===================================================
FICHIER: public\css\faq.css
===================================================
.faq-accordion {
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
    border-radius: 12px;
    overflow: hidden;
}

.accordion-item {
    border: none;
    border-bottom: 1px solid #eee;
}

.accordion-item:last-child {
    border-bottom: none;
}

.accordion-button {
    padding: 20px 25px;
    font-weight: 600;
    font-size: 1.1rem;
    color: var(--secondary-dark);
    background-color: white;
    box-shadow: none !important;
}

.accordion-button:not(.collapsed) {
    color: var(--primary-color);
    background-color: white;
}

.accordion-button:not(.collapsed)::after {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%232a63ff'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e");
}

.accordion-body {
    padding: 20px 25px;
    color: var(--secondary-color);
}



===================================================
FICHIER: public\css\features.css
===================================================
.feature-card {
    background-color: white;
    border-radius: 12px;
    padding: 30px;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    margin-bottom: 30px;
    height: 100%;
}

.feature-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
}

.feature-icon {
    width: 70px;
    height: 70px;
    border-radius: 50%;
    background-color: rgba(42, 99, 255, 0.1);
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 20px;
}

.feature-icon i {
    font-size: 28px;
    color: var(--primary-color);
}

.feature-title {
    font-size: 1.25rem;
    margin-bottom: 15px;
    color: var(--secondary-dark);
}

.feature-text {
    color: var(--secondary-color);
    margin-bottom: 20px;
}

.feature-link {
    color: var(--primary-color);
    font-weight: 600;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    transition: color 0.3s ease;
}

.feature-link:hover {
    color: var(--primary-dark);
}

.feature-link i {
    margin-left: 5px;
    transition: transform 0.3s ease;
}

.feature-link:hover i {
    transform: translateX(5px);
}



===================================================
FICHIER: public\css\hero.css
===================================================
.hero-shape {
    position: absolute;
    border-radius: 50%;
    z-index: -1;
    opacity: 0.6;
}

.hero-shape-1 {
    width: 300px;
    height: 300px;
    background-color: rgba(42, 99, 255, 0.1);
    top: -100px;
    right: -100px;
    animation: float 8s ease-in-out infinite;
}

.hero-shape-2 {
    width: 200px;
    height: 200px;
    background-color: rgba(42, 99, 255, 0.05);
    bottom: -50px;
    left: -50px;
    animation: float 10s ease-in-out infinite reverse;
}

.hero-shape-3 {
    width: 150px;
    height: 150px;
    background-color: rgba(42, 99, 255, 0.07);
    top: 50%;
    right: 10%;
    animation: float 12s ease-in-out infinite;
}

.hero-shape-4 {
    width: 100px;
    height: 100px;
    background-color: rgba(255, 83, 83, 0.05);
    top: 30%;
    left: 5%;
    animation: float 15s ease-in-out infinite reverse;
}

.hero-shape-5 {
    width: 50px;
    height: 50px;
    background-color: rgba(46, 204, 113, 0.05);
    bottom: 20%;
    left: 30%;
    animation: float 9s ease-in-out infinite;
}

@keyframes float {
    0% {
        transform: translate(0, 0);
    }
    50% {
        transform: translate(15px, -15px);
    }
    100% {
        transform: translate(0, 0);
    }
}

.hero-wave {
     position: absolute;
     bottom: 0;
     left: 0;
     width: 100%;
     height: 80px;
     background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1440 320'%3E%3Cpath fill='%23f7f9fc' fill-opacity='1' d='M0,224L48,213.3C96,203,192,181,288,186.7C384,192,480,224,576,240C672,256,768,256,864,218.7C960,181,1056,107,1152,106.7C1248,107,1344,181,1392,218.7L1440,256L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z'%3E%3C/path%3E%3C/svg%3E");
     background-size: cover;
     background-repeat: no-repeat;
     z-index: -1;
 }

/* Hero Badge */
.hero-badge {
    display: inline-flex;
    align-items: center;
    background-color: rgba(42, 99, 255, 0.08);
    padding: 6px 14px;
    border-radius: 50px;
    margin-bottom: 25px;
    transform: translateY(20px);
    opacity: 0;
    transition: all 0.6s ease;
}

.hero-badge.show {
    transform: translateY(0);
    opacity: 1;
}

.floating-element {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: white;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    z-index: 3;
}

.floating-element i {
    font-size: 18px;
}

.floating-star {
    top: 10%;
    right: 10%;
    animation: float-element 5s infinite ease-in-out;
}

.floating-star i {
    color: #ffc107;
}

.floating-check {
    bottom: 20%;
    right: 5%;
    animation: float-element 7s infinite ease-in-out 1s;
}

.floating-check i {
    color: var(--success-color);
}

.floating-user {
    top: 25%;
    left: 0;
    animation: float-element 6s infinite ease-in-out 0.5s;
}

.floating-user i {
    color: var(--primary-color);
}

.floating-docs {
    bottom: 15%;
    left: 10%;
    animation: float-element 8s infinite ease-in-out 1.5s;
}

.floating-docs i {
    color: var(--accent-color);
}

@keyframes float-element {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-15px);
    }
}

.cv-annotation {
     position: absolute;
     display: flex;
     align-items: center;
     background-color: white;
     border-radius: 50px;
     padding: 5px 12px;
     box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
     z-index: 3;
 }

.annotation-1 {
    top: 15%;
    left: -5%;
    animation: appear 0.6s ease forwards 1s;
    opacity: 0;
    transform: translateX(-20px);
}

.annotation-2 {
    bottom: 25%;
    right: -5%;
    animation: appear 0.6s ease forwards 1.5s;
    opacity: 0;
    transform: translateX(20px);
}

.annotation-dot {
    width: 8px;
    height: 8px;
    background-color: var(--primary-color);
    border-radius: 50%;
    margin-right: 8px;
}

.annotation-text {
    font-size: 0.85rem;
    font-weight: 600;
    color: var(--secondary-color);
    white-space: nowrap;
}

@keyframes appear {
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@media (max-width: 1199px) {
    .hero-title {
        font-size: 2.75rem;
    }

    .annotation-1, .annotation-2 {
        display: none;
    }
}

@media (max-width: 991px) {
    .hero-section {
        padding: 80px 0 60px;
    }

    .hero-title {
        font-size: 2.5rem;
    }

    .hero-stats {
        margin-bottom: 1.5rem;
    }

    .hero-buttons {
        flex-direction: column;
        gap: 10px;
    }

    .hero-image-container {
        margin-top: 40px;
    }

    .floating-element {
        width: 35px;
        height: 35px;
    }
}

@media (max-width: 767px) {
    .hero-section {
        padding: 60px 0 40px;
    }

    .hero-title {
        font-size: 2rem;
    }

    .hero-subtitle {
        font-size: 1.1rem;
    }

    .hero-stat-number {
        font-size: 1.5rem;
    }

    .hero-stat-item {
        margin-right: 1.5rem;
    }

    .hero-stat-item:not(:last-child)::after {
        right: -0.75rem;
    }
}

/* --- START COPY --- */
.hero-section {
    background-color: var(--light-bg);
    padding: 100px 0 80px;
    position: relative;
    overflow: hidden;
    z-index: 1;
}

/* Gradient Text Effect */
.text-gradient {
    background: linear-gradient(90deg, var(--primary-color), var(--primary-dark) 50%, var(--accent-color));
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    text-fill-color: transparent;
    font-weight: 700;
}

/* Hero Shapes Animation -> Rules missing in snippet */


/* Wave Background -> Rules missing in snippet */

/* Hero Badge parts */
.badge-dot {
    width: 10px;
    height: 10px;
    background-color: var(--primary-color);
    border-radius: 50%;
    margin-right: 10px;
    animation: pulse 2s infinite;
}

.badge-text {
    font-size: 0.9rem;
    font-weight: 600;
    color: var(--primary-color);
}

/* Hero Content Styling */
.hero-content {
    position: relative;
    z-index: 2;
}

.hero-title {
    font-size: 3.25rem;
    line-height: 1.2;
    margin-bottom: 1.5rem;
    color: var(--secondary-dark);
    transform: translateY(20px);
    opacity: 0;
    transition: all 0.6s ease 0.2s;
}

.hero-title.show {
    transform: translateY(0);
    opacity: 1;
}

.hero-accent {
    color: var(--primary-color);
    position: relative;
    display: inline-block;
}

.hero-accent-2 {
    position: relative;
    display: inline-block;
}

.hero-accent-2::after {
    content: "";
    position: absolute;
    bottom: 5px;
    left: 0;
    width: 100%;
    height: 6px;
    background-color: rgba(255, 83, 83, 0.3);
    z-index: -1;
    border-radius: 4px;
}

.hero-subtitle {
    font-size: 1.25rem;
    color: var(--secondary-color);
    margin-bottom: 2rem;
    transform: translateY(20px);
    opacity: 0;
    transition: all 0.6s ease 0.4s;
}

.hero-subtitle.show {
    transform: translateY(0);
    opacity: 1;
}

/* Hero Stats */
.hero-stats {
    display: flex;
    margin-bottom: 2rem;
    transform: translateY(20px);
    opacity: 0;
    transition: all 0.6s ease 0.5s;
}

.hero-stats.show {
    transform: translateY(0);
    opacity: 1;
}

.hero-stat-item {
    margin-right: 2.5rem;
    position: relative;
}

.hero-stat-item:not(:last-child)::after {
    content: "";
    position: absolute;
    top: 50%;
    right: -1.25rem;
    transform: translateY(-50%);
    width: 5px;
    height: 5px;
    border-radius: 50%;
    background-color: var(--light-gray);
}

.hero-stat-number {
    display: block;
    font-size: 1.75rem;
    font-weight: 700;
    color: var(--primary-color);
    margin-bottom: -5px;
}

.hero-stat-label {
    display: block;
    font-size: 0.875rem;
    color: var(--secondary-color);
}

/* Hero Buttons */
.hero-buttons {
    display: flex;
    gap: 15px;
    margin-bottom: 2rem;
    transform: translateY(20px);
    opacity: 0;
    transition: all 0.6s ease 0.6s;
}

.hero-buttons.show {
    transform: translateY(0);
    opacity: 1;
}

.btn-hero-primary {
    background-color: var(--primary-color);
    color: white;
    border: none;
    padding: 14px 28px;
    border-radius: 8px;
    font-weight: 600;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.btn-hero-primary:hover {
    background-color: var(--primary-dark);
    transform: translateY(-3px);
    box-shadow: 0 10px 25px rgba(26, 76, 212, 0.3);
    color: white;
}

.btn-hero-primary::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.7s;
}

.btn-hero-primary:hover::before {
    left: 100%;
}

.btn-hero-secondary {
    background-color: transparent;
    color: var(--secondary-color);
    border: 1px solid var(--light-gray);
    padding: 14px 28px;
    border-radius: 8px;
    font-weight: 600;
    transition: all 0.3s ease;
}

.btn-hero-secondary:hover {
    background-color: var(--light-gray);
    transform: translateY(-3px);
    color: var(--secondary-dark);
}

/* Modern Gradient Button */
.btn-gradient {
    background: linear-gradient(90deg, #6a11cb, #2575fc);
    color: white;
    padding: 14px 28px;
    border-radius: 8px;
    font-weight: 600;
    border: none;
    transition: all 0.3s ease;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.btn-gradient:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
}

/* Hero Trust */
.hero-trust {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    transform: translateY(20px);
    opacity: 0;
    transition: all 0.6s ease 0.7s;
}

.hero-trust.show {
    transform: translateY(0);
    opacity: 1;
}

.hero-trust-text {
    font-size: 0.9rem;
    color: var(--secondary-color);
    margin-right: 15px;
    margin-bottom: 10px;
}

.hero-trust-logos {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
}

.trust-logo {
    height: 30px;
    margin-right: 20px;
    margin-bottom: 10px;
    opacity: 0.7;
    transition: opacity 0.3s ease;
}

.trust-logo:hover {
    opacity: 1;
}

/* Hero Image */
.hero-image-container {
    position: relative;
    z-index: 2;
    transform: translateY(20px);
    opacity: 0;
    transition: all 0.6s ease 0.4s;
}

.hero-image-container.show {
    transform: translateY(0);
    opacity: 1;
}

.hero-image {
    max-width: 100%;
    height: auto;
    border-radius: 12px;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    transition: all 0.5s ease;
    transform-origin: center;
    position: relative;
    z-index: 2;
}

.hero-image:hover {
    transform: translateY(-10px) scale(1.02);
    box-shadow: 0 30px 60px rgba(0, 0, 0, 0.2);
}

/* Floating Card */
.floating-card {
    position: absolute;
    background: white;
    border-radius: 12px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    padding: 20px;
    width: 250px;
    z-index: 2;
    animation: float-card 6s ease-in-out infinite;
}

.floating-card h3 {
    font-size: 1.2rem;
    margin-bottom: 10px;
    color: var(--primary-color);
}

.floating-card p {
    font-size: 0.9rem;
    color: var(--secondary-color);
}

.floating-card-1 {
    top: 20%;
    left: 10%;
}

.floating-card-2 {
    bottom: 15%;
    right: 15%;
}

@keyframes float-card {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-10px);
    }
}

/* Modern Badge */
.modern-badge {
    display: inline-flex;
    align-items: center;
    background: linear-gradient(90deg, #ff7eb3, #ff758c);
    color: white;
    padding: 8px 16px;
    border-radius: 50px;
    font-size: 0.85rem;
    font-weight: 600;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

/* --- END COPY --- */



===================================================
FICHIER: public\css\logo-marquee.css
===================================================
/* --- START COPY --- */
/* Logo Marquee (Carousel Infini) - Version corrigÃ©e */
.logo-marquee-section {
    background-color: #ffffff;
    border-top: 1px solid rgba(0, 0, 0, 0.05);
    border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    padding: 20px 0;
    overflow: hidden;
    position: relative;
}

.logo-marquee-title {
    font-size: 1rem;
    color: var(--secondary-color);
    font-weight: 500;
}

.logo-marquee-container {
    width: 100%;
    overflow: hidden;
    position: relative;
}

.logo-track {
    display: flex;
    width: max-content; /* Garantit que toute la largeur est utilisÃ©e */
    animation: scroll 40s linear infinite;
}

.logo-track:hover {
    animation-play-state: paused;
}

.logo-item {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 30px;
    opacity: 0.7;
    filter: grayscale(30%);
    transition: all 0.3s ease;
}

.logo-item:hover {
    opacity: 1;
    filter: grayscale(0%);
    transform: scale(1.1);
}

.logo-item-img {
    height: 50px;
    max-width: 120px;
    object-fit: contain;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .logo-item {
        padding: 0 20px;
    }

    .logo-item-img {
        height: 40px;
        max-width: 100px;
    }
    /* Keyframe needs update too if used here, but moved to animations.css */
}

@media (max-width: 576px) {
    .logo-item {
        padding: 0 15px;
    }

    .logo-item-img {
        height: 35px;
        max-width: 80px;
    }
}
/* --- START COPY --- */
/* Note: Base styles for logo marquee are missing in this snippet */
/* Responsive adjustments */
@media (max-width: 768px) {
    .logo-item {
        padding: 0 20px;
    }

    .logo-item-img {
        height: 40px;
        max-width: 100px;
    }

    /* Keyframe defined here, move to animations.css ideally */
    @keyframes scroll {
        0% {
            transform: translateX(0);
        }
        100% {
            transform: translateX(calc(-100% / 3));
        }
    }
}

@media (max-width: 576px) {
    .logo-item {
        padding: 0 15px;
    }

    .logo-item-img {
        height: 35px;
        max-width: 80px;
    }
}
/* --- END COPY --- */
/* --- END COPY --- */


===================================================
FICHIER: public\css\process.css
===================================================

.process-steps {
    position: relative;
    z-index: 1;
    padding: 20px 0;
}

.process-steps:before {
    content: "";
    position: absolute;
    top: 50%;
    left: 15%;
    right: 15%;
    height: 2px;
    background-color: #e0e0e0;
    z-index: -1;
}

.process-step {
    background-color: white;
    border-radius: 12px;
    padding: 30px;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
    position: relative;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
}

.process-step:hover {
    transform: translateY(-10px);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
}

.process-number {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: var(--primary-color);
    color: white;
    font-weight: 700;
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: -20px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 2;
}

.process-icon {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    background-color: rgba(42, 99, 255, 0.1);
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 20px;
    margin-top: 10px;
}

.process-icon i {
    font-size: 32px;
    color: var(--primary-color);
}

.process-title {
    font-size: 1.25rem;
    margin-bottom: 15px;
    color: var(--secondary-dark);
}

.process-description {
    color: var(--secondary-color);
}



===================================================
FICHIER: public\css\responsive.css
===================================================
/* --- START COPY --- */
/* General Responsive adjustments (Consider splitting these rules into component files) */
@media (max-width: 991px) {
    .hero-title { /* Belongs in hero.css */
        font-size: 2.5rem;
    }

    .hero-buttons { /* Belongs in hero.css */
        flex-direction: column;
    }

    .cta-title { /* Belongs in cta.css (if defined) or base.css */
        font-size: 2rem;
    }
}

@media (max-width: 767px) {
    .hero-title { /* Belongs in hero.css */
        font-size: 2rem;
    }

    .hero-subtitle { /* Belongs in hero.css */
        font-size: 1rem;
    }

    .section-title { /* Belongs in base.css or layout.css */
        font-size: 2rem;
    }

    .feature-card { /* Belongs in features.css */
        padding: 20px;
    }

    .cta-title { /* Belongs in cta.css (if defined) or base.css */
        font-size: 1.75rem;
    }
}
/* --- END COPY --- */


===================================================
FICHIER: public\css\section_editor.css
===================================================
/* /* template_carousel.css */
:root {
    /* Couleurs principales */
    --primary-color: #ee3124; /* Rouge ESPRIT */
    --primary-dark: #c62a1d;
    --primary-light: rgba(238, 49, 36, 0.1);
    --primary-shadow: rgba(238, 49, 36, 0.2);
    --secondary-color: #2d3748; /* Charcoal */
    --accent-color: #718096; /* Slate Gray */
    --light-bg: #faf7f2; /* Light Beige */
    --white-bg: #ffffff; /* White */
    --dark-bg: #1a202c; /* Dark Text */
    --text-dark: #1a202c;
    --text-medium: #4a5568;
    --text-light: #718096;
    --border-color: #e2e8f0;
    --border-light: #edf2f7;
    --card-shadow: rgba(0, 0, 0, 0.1);
}

.template-slide {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 2rem;
    max-width: 1000px; /* Ã‰largi horizontalement */
    margin: 0 auto;
}

@media (min-width: 768px) {
    .template-slide {
        flex-direction: row;
        align-items: flex-start;
    }
}

.template-preview {
    width: 100%;
    max-width: 400px; /* Ã‰largi horizontalement */
    height: auto;
    box-shadow: 0 10px 25px rgba(0,0,0,0.1);
    border-radius: 8px;
    transition: transform 0.3s ease;
    object-fit: contain;
}

.template-preview:hover {
    transform: translateY(-5px);
}

.template-details {
    padding: 1.5rem;
    text-align: center;
}

@media (min-width: 768px) {
    .template-details {
        text-align: left;
        padding: 0 0 0 2.5rem;
        flex: 1;
    }
}

.template-details h3 {
    color: var(--secondary-color);
    font-size: 1.75rem;
    margin-bottom: 0.75rem;
    font-weight: 600;
}

.template-details p {
    color: var(--text-medium);
    margin-bottom: 1.5rem;
    font-size: 1.1rem;
    line-height: 1.6;
}

.template-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
}

.tag {
    padding: 0.35rem 0.75rem;
    border-radius: 20px;
    font-size: 0.85rem;
    font-weight: 500;
    transition: all 0.3s ease;
}

.tag:hover {
    transform: translateY(-2px);
}

.tag-modern {
    background-color: rgba(238, 49, 36, 0.1);
    color: var(--primary-color);
}

.tag-classic {
    background-color: rgba(45, 55, 72, 0.1);
    color: var(--secondary-color);
}

.tag-creative {
    background-color: rgba(246, 173, 85, 0.1);
    color: #e67e22;
}

.tag-professional {
    background-color: rgba(52, 152, 219, 0.1);
    color: #3498db;
}

.tag-academic {
    background-color: rgba(142, 68, 173, 0.1);
    color: #8e44ad;
}

.tag-engineering {
    background-color: rgba(39, 174, 96, 0.1);
    color: #27ae60;
}

.tag-business {
    background-color: rgba(52, 73, 94, 0.1);
    color: #34495e;
}

.select-template-btn {
    padding: 0.85rem 1.75rem;
    font-size: 1rem;
    font-weight: 600;
    border-radius: 50px;
    transition: all 0.3s ease;
    background-color: var(--primary-color);
    border-color: var(--primary-color);
    color: white;
    margin-top: 0.5rem;
    box-shadow: 0 4px 15px var(--primary-shadow);
}

.select-template-btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 25px var(--primary-shadow);
    background-color: var(--primary-dark);
    border-color: var(--primary-dark);
    color: white;
}

/* Animation pour le bouton sÃ©lectionnÃ© */
.select-template-btn.selected {
    background-color: #27ae60;
    border-color: #27ae60;
}

/* Pour le fonctionnement du carousel */
.carousel-wrapper {
    position: relative;
    height: 650px; /* AugmentÃ© verticalement */
    max-height: 85vh;
    overflow: hidden;
    background-color: var(--white-bg);
    border-radius: 1rem;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
}

@media (max-width: 768px) {
    .carousel-wrapper {
        height: 850px;
    }
}

@media (max-width: 576px) {
    .carousel-wrapper {
        height: 900px;
    }
}

.carousel-item {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.7s ease-in-out;
    visibility: hidden;
}

.carousel-item.active {
    opacity: 1;
    z-index: 1;
    visibility: visible;
}

/* AmÃ©lioration du style des contrÃ´les du carousel */
.carousel-control {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 3.5rem;
    height: 3.5rem;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.85);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 10;
    transition: all 0.3s ease;
    border: none;
    outline: none;
}

.carousel-control:hover {
    background-color: var(--primary-color);
    transform: translateY(-50%) scale(1.05);
    box-shadow: 0 6px 18px var(--primary-shadow);
}

.carousel-control:hover i {
    color: white;
}

.carousel-control.prev {
    left: 1rem;
}

.carousel-control.next {
    right: 1rem;
}

.carousel-control i {
    font-size: 1.2rem;
    color: var(--secondary-color);
    transition: color 0.3s ease;
}

.carousel-indicators {
    position: absolute;
    bottom: 1.5rem;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 0.6rem;
    z-index: 10;
    padding: 0.5rem 1rem;
    background-color: rgba(255, 255, 255, 0.7);
    border-radius: 50rem;
    backdrop-filter: blur(4px);
}

.carousel-indicator {
    width: 0.75rem;
    height: 0.75rem;
    background-color: rgba(45, 55, 72, 0.5);
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.4s ease;
    border: none;
    padding: 0;
}

.carousel-indicator.active {
    background-color: var(--primary-color);
    transform: scale(1.2);
}

.carousel-indicator:focus-visible {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
}


===================================================
FICHIER: public\css\statistics.css
===================================================
.statistics-container {
    padding: 30px 0;
}

.statistic-card {
    padding: 20px;
    text-align: center;
    transition: transform 0.3s ease;
}

.statistic-card:hover {
    transform: translateY(-10px);
}

.statistic-icon {
    font-size: 36px;
    color: var(--primary-color);
    margin-bottom: 15px;
}

.statistic-number {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--secondary-dark);
    margin-bottom: 5px;
    font-family: 'Poppins', sans-serif;
}

.statistic-label {
    color: var(--secondary-color);
    font-size: 1rem;
    font-weight: 500;
}



===================================================
FICHIER: public\css\template-carousel-fixes.css
===================================================
/* --- START COPY --- */
/* Template Carousel - Fix for icons and functionality */
.modern-carousel-arrow i {
    font-size: 1.2rem;
    color: var(--secondary-color);
}

.template-rating i {
    color: #ffc107;
    font-size: 0.875rem;
}

.category-tag i {
    margin-right: 5px;
    font-size: 0.875rem;
}

.btn-template-preview i,
.btn-template-select i {
    margin-right: 5px;
}

.preview-badge i {
    margin-right: 5px;
}
/* --- END COPY --- */


===================================================
FICHIER: public\css\template-selection.css
===================================================
/* ========== TEMPLATE SELECTION SECTION STYLES ========== */

/* Base and Typography */
:root {
    --primary-color: #4a6bff;
    --secondary-color: #8a94a6;
    --accent-color: #ff6b6b;
    --light-bg: #f8f9fb;
    --dark-bg: #2c3e50;
    --text-dark: #2c3e50;
    --text-light: #8a94a6;
    --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.05);
    --shadow-md: 0 4px 8px rgba(0, 0, 0, 0.1);
    --shadow-lg: 0 8px 16px rgba(0, 0, 0, 0.1);
    --radius-sm: 4px;
    --radius-md: 8px;
    --radius-lg: 12px;
    --transition: all 0.3s ease;
}

.template-selection-section {
    padding: 5rem 0;
    background-color: var(--light-bg);
}

.container {
    max-width: 1280px;
    margin: 0 auto;
    padding: 0 1.5rem;
}

.section-heading {
    text-align: center;
    margin-bottom: 3rem;
}

.section-title {
    font-size: 2.5rem;
    color: var(--text-dark);
    margin-bottom: 0.75rem;
    font-weight: 700;
}

.section-subtitle {
    font-size: 1.125rem;
    color: var(--text-light);
    max-width: 700px;
    margin: 0 auto;
}

/* Animation Classes */
.animate-on-scroll {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.8s ease, transform 0.8s ease;
}

.animate-on-scroll.visible {
    opacity: 1;
    transform: translateY(0);
}

/* Modern Carousel Styling */
.modern-carousel-container {
    position: relative;
    margin-bottom: 3rem;
}

.modern-carousel-controls {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 1.5rem;
    gap: 1rem;
}

.modern-carousel-arrow {
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: white;
    border: 1px solid #e5e7eb;
    border-radius: 50%;
    cursor: pointer;
    transition: var(--transition);
    color: var(--text-dark);
}

.modern-carousel-arrow:hover {
    background-color: var(--primary-color);
    color: white;
    border-color: var(--primary-color);
}

.modern-carousel-arrow:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(74, 107, 255, 0.25);
}

.carousel-counter {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--text-dark);
    display: flex;
    align-items: center;
    gap: 0.25rem;
}

.carousel-counter span:nth-child(2) {
    color: var(--text-light);
}

.carousel-counter span:last-child {
    color: var(--text-light);
}

.modern-carousel-wrapper {
    position: relative;
    overflow: hidden;
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-lg);
    height: 600px;
}

.modern-carousel-item {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transform: scale(0.9) translateX(100px);
    transition: transform 0.6s ease, opacity 0.6s ease;
    pointer-events: none;
}

.modern-carousel-item.active {
    opacity: 1;
    transform: scale(1) translateX(0);
    pointer-events: auto;
    z-index: 1;
}

.modern-template-card {
    display: flex;
    height: 100%;
    background-color: white;
    border-radius: var(--radius-lg);
    overflow: hidden;
}

.template-preview-container {
    flex: 0 0 400px;
    position: relative;
    overflow: hidden;
    background-color: #f0f2f5;
}

.template-preview {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
}

.template-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0);
    display: flex;
    align-items: flex-start;
    justify-content: flex-end;
    padding: 1rem;
    transition: background 0.3s ease;
}

.preview-badge {
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 0.5rem 0.75rem;
    border-radius: var(--radius-sm);
    font-size: 0.875rem;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.template-preview-container:hover .template-preview {
    transform: scale(1.03);
}

.template-preview-container:hover .template-overlay {
    background: rgba(0, 0, 0, 0.2);
}

.modern-template-details {
    flex: 1;
    padding: 2rem;
    display: flex;
    flex-direction: column;
}

.template-header {
    margin-bottom: 1.5rem;
}

.template-title {
    font-size: 1.75rem;
    font-weight: 700;
    color: var(--text-dark);
    margin-bottom: 1rem;
}

.template-rating {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    color: #ffc107;
}

.rating-count {
    color: var(--text-light);
    font-size: 0.875rem;
    margin-left: 0.5rem;
}

.template-description {
    font-size: 1rem;
    line-height: 1.6;
    color: var(--text-light);
    margin-bottom: 1.5rem;
}

.template-categories {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
    margin-bottom: 2rem;
}

.category-tag {
    background-color: #f0f2f5;
    color: var(--text-dark);
    padding: 0.5rem 0.75rem;
    border-radius: var(--radius-sm);
    font-size: 0.875rem;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: var(--transition);
}

.category-tag:hover {
    background-color: #e5e7eb;
}

.template-actions {
    margin-top: auto;
    display: flex;
    gap: 1rem;
}

.btn-template-preview, .btn-template-select {
    padding: 0.75rem 1.25rem;
    border-radius: var(--radius-md);
    font-weight: 600;
    font-size: 0.9375rem;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    cursor: pointer;
    transition: var(--transition);
}

.btn-template-preview {
    background-color: white;
    color: var(--text-dark);
    border: 1px solid #e5e7eb;
}

.btn-template-preview:hover {
    background-color: #f8f9fb;
    border-color: #d1d5db;
}

.btn-template-select {
    background-color: var(--primary-color);
    color: white;
    border: 1px solid var(--primary-color);
    flex: 1;
}

.btn-template-select:hover {
    background-color: #3a59e6;
    border-color: #3a59e6;
}

/* Template Thumbnails */
.template-thumbnails {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-top: 2rem;
}

.template-thumbnail {
    width: 90px;
    height: 120px;
    border-radius: var(--radius-md);
    overflow: hidden;
    cursor: pointer;
    border: 3px solid transparent;
    transition: var(--transition);
    opacity: 0.6;
    background-color: #f0f2f5;
}

.template-thumbnail.active {
    border-color: var(--primary-color);
    opacity: 1;
}

.template-thumbnail:hover {
    opacity: 0.9;
}

.thumbnail-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

/* Filter Section */
.template-filters {
    padding: 2rem;
    background-color: white;
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-md);
    margin-top: 3rem;
}

.filter-section {
    margin-bottom: 1.5rem;
}

.filter-section:last-child {
    margin-bottom: 0;
}

.filter-title {
    font-size: 1.125rem;
    color: var(--text-dark);
    margin-bottom: 1rem;
    font-weight: 600;
}

.filter-options {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
}

.filter-button {
    padding: 0.5rem 1rem;
    border-radius: var(--radius-sm);
    font-size: 0.9375rem;
    font-weight: 500;
    background-color: #f0f2f5;
    color: var(--text-dark);
    border: none;
    cursor: pointer;
    transition: var(--transition);
}

.filter-button:hover {
    background-color: #e5e7eb;
}

.filter-button.active {
    background-color: var(--primary-color);
    color: white;
}

/* Responsive Styles */
@media (max-width: 1200px) {
    .modern-template-card {
        flex-direction: column;
    }

    .template-preview-container {
        flex: 0 0 300px;
    }

    .modern-carousel-wrapper {
        height: 700px;
    }
}

@media (max-width: 992px) {
    .section-title {
        font-size: 2.25rem;
    }

    .modern-carousel-wrapper {
        height: 650px;
    }
}

@media (max-width: 768px) {
    .template-selection-section {
        padding: 4rem 0;
    }

    .section-title {
        font-size: 2rem;
    }

    .section-subtitle {
        font-size: 1rem;
    }

    .modern-carousel-wrapper {
        height: auto;
    }

    .modern-carousel-item {
        position: relative;
        height: auto;
        display: none;
    }

    .modern-carousel-item.active {
        display: block;
    }

    .modern-template-card {
        flex-direction: column;
    }

    .template-preview-container {
        flex: 0 0 250px;
    }

    .template-actions {
        flex-direction: column;
    }

    .template-thumbnail {
        width: 70px;
        height: 90px;
    }
}

@media (max-width: 576px) {
    .template-selection-section {
        padding: 3rem 0;
    }

    .section-title {
        font-size: 1.75rem;
    }

    .modern-template-details {
        padding: 1.5rem;
    }

    .template-title {
        font-size: 1.5rem;
    }

    .template-thumbnail {
        width: 60px;
        height: 80px;
    }

    .modern-carousel-arrow {
        width: 40px;
        height: 40px;
    }

    .carousel-counter {
        font-size: 1rem;
    }
}

/* JavaScript Animation Helpers */
.fade-in {
    animation: fadeIn 0.5s ease forwards;
}

.fade-out {
    animation: fadeOut 0.5s ease forwards;
}

.slide-in-right {
    animation: slideInRight 0.5s ease forwards;
}

.slide-out-left {
    animation: slideOutLeft 0.5s ease forwards;
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

@keyframes slideInRight {
    from {
        transform: translateX(100px);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideOutLeft {
    from {
        transform: translateX(0);
        opacity: 1;
    }
    to {
        transform: translateX(-100px);
        opacity: 0;
    }
}

/* Additional Interactive Elements */
.btn-template-preview:focus,
.btn-template-select:focus,
.filter-button:focus,
.template-thumbnail:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(74, 107, 255, 0.25);
}

/* Hover Effects */
.modern-template-card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.modern-template-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-lg);
}

/* Active State for Template */
.modern-carousel-item.active .modern-template-card {
    animation: pulseHighlight 0.6s ease;
}

@keyframes pulseHighlight {
    0% {
        box-shadow: 0 0 0 0 rgba(74, 107, 255, 0.1);
    }
    70% {
        box-shadow: 0 0 0 10px rgba(74, 107, 255, 0);
    }
    100% {
        box-shadow: var(--shadow-lg);
    }
}


===================================================
FICHIER: public\css\template_carousel.css
===================================================
/* template_carousel.css */
:root {
    /* Couleurs principales */
    --primary-color: #ee3124; /* Rouge ESPRIT */
    --primary-dark: #c62a1d;
    --primary-light: rgba(238, 49, 36, 0.1);
    --primary-shadow: rgba(238, 49, 36, 0.2);
    --secondary-color: #2d3748; /* Charcoal */
    --accent-color: #718096; /* Slate Gray */
    --light-bg: #faf7f2; /* Light Beige */
    --white-bg: #ffffff; /* White */
    --dark-bg: #1a202c; /* Dark Text */
    --text-dark: #1a202c;
    --text-medium: #4a5568;
    --text-light: #718096;
    --border-color: #e2e8f0;
    --border-light: #edf2f7;
    --card-shadow: rgba(0, 0, 0, 0.1);
}

.template-slide {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 2rem;
    max-width: 1000px; /* Ã‰largi horizontalement */
    margin: 0 auto;
}

@media (min-width: 768px) {
    .template-slide {
        flex-direction: row;
        align-items: flex-start;
    }
}

.template-preview {
    width: 100%;
    max-width: 400px; /* Ã‰largi horizontalement */
    height: auto;
    box-shadow: 0 10px 25px rgba(0,0,0,0.1);
    border-radius: 8px;
    transition: transform 0.3s ease;
    object-fit: contain;
}

.template-preview:hover {
    transform: translateY(-5px);
}

.template-details {
    padding: 1.5rem;
    text-align: center;
}

@media (min-width: 768px) {
    .template-details {
        text-align: left;
        padding: 0 0 0 2.5rem;
        flex: 1;
    }
}

.template-details h3 {
    color: var(--secondary-color);
    font-size: 1.75rem;
    margin-bottom: 0.75rem;
    font-weight: 600;
}

.template-details p {
    color: var(--text-medium);
    margin-bottom: 1.5rem;
    font-size: 1.1rem;
    line-height: 1.6;
}

.template-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
}

.tag {
    padding: 0.35rem 0.75rem;
    border-radius: 20px;
    font-size: 0.85rem;
    font-weight: 500;
    transition: all 0.3s ease;
}

.tag:hover {
    transform: translateY(-2px);
}

.tag-modern {
    background-color: rgba(238, 49, 36, 0.1);
    color: var(--primary-color);
}

.tag-classic {
    background-color: rgba(45, 55, 72, 0.1);
    color: var(--secondary-color);
}

.tag-creative {
    background-color: rgba(246, 173, 85, 0.1);
    color: #e67e22;
}

.tag-professional {
    background-color: rgba(52, 152, 219, 0.1);
    color: #3498db;
}

.tag-academic {
    background-color: rgba(142, 68, 173, 0.1);
    color: #8e44ad;
}

.tag-engineering {
    background-color: rgba(39, 174, 96, 0.1);
    color: #27ae60;
}

.tag-business {
    background-color: rgba(52, 73, 94, 0.1);
    color: #34495e;
}

.select-template-btn {
    padding: 0.85rem 1.75rem;
    font-size: 1rem;
    font-weight: 600;
    border-radius: 50px;
    transition: all 0.3s ease;
    background-color: var(--primary-color);
    border-color: var(--primary-color);
    color: white;
    margin-top: 0.5rem;
    box-shadow: 0 4px 15px var(--primary-shadow);
}

.select-template-btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 25px var(--primary-shadow);
    background-color: var(--primary-dark);
    border-color: var(--primary-dark);
    color: white;
}

/* Animation pour le bouton sÃ©lectionnÃ© */
.select-template-btn.selected {
    background-color: #27ae60;
    border-color: #27ae60;
}

/* Pour le fonctionnement du carousel */
.carousel-wrapper {
    position: relative;
    height: 650px; /* AugmentÃ© verticalement */
    max-height: 85vh;
    overflow: hidden;
    background-color: var(--white-bg);
    border-radius: 1rem;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
}

@media (max-width: 768px) {
    .carousel-wrapper {
        height: 850px;
    }
}

@media (max-width: 576px) {
    .carousel-wrapper {
        height: 900px;
    }
}

.carousel-item {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.7s ease-in-out;
    visibility: hidden;
}

.carousel-item.active {
    opacity: 1;
    z-index: 1;
    visibility: visible;
}

/* AmÃ©lioration du style des contrÃ´les du carousel */
.carousel-control {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 3.5rem;
    height: 3.5rem;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.85);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 10;
    transition: all 0.3s ease;
    border: none;
    outline: none;
}

.carousel-control:hover {
    background-color: var(--primary-color);
    transform: translateY(-50%) scale(1.05);
    box-shadow: 0 6px 18px var(--primary-shadow);
}

.carousel-control:hover i {
    color: white;
}

.carousel-control.prev {
    left: 1rem;
}

.carousel-control.next {
    right: 1rem;
}

.carousel-control i {
    font-size: 1.2rem;
    color: var(--secondary-color);
    transition: color 0.3s ease;
}

.carousel-indicators {
    position: absolute;
    bottom: 1.5rem;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 0.6rem;
    z-index: 10;
    padding: 0.5rem 1rem;
    background-color: rgba(255, 255, 255, 0.7);
    border-radius: 50rem;
    backdrop-filter: blur(4px);
}

.carousel-indicator {
    width: 0.75rem;
    height: 0.75rem;
    background-color: rgba(45, 55, 72, 0.5);
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.4s ease;
    border: none;
    padding: 0;
}

.carousel-indicator.active {
    background-color: var(--primary-color);
    transform: scale(1.2);
}

.carousel-indicator:focus-visible {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
}

/* SÃ©lecteur de sections principales */
.sections-selector {
    margin-top: 3rem;
    margin-bottom: 2rem;
    position: relative;
}

.sections-selector-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--text-dark);
    margin-bottom: 1.5rem;
    text-align: center;
}

.sections-list {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 1rem;
    padding: 0;
    list-style: none;
    max-width: 900px;
    margin: 0 auto;
}

.section-item {
    background-color: var(--white-bg);
    border: 2px solid var(--border-color);
    border-radius: 12px;
    padding: 1rem;
    min-width: 150px;
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease;
    user-select: none;
    position: relative;
}

.section-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
    border-color: rgba(238, 49, 36, 0.5);
}

.section-item.active {
    border-color: var(--primary-color);
    background-color: var(--primary-light);
}

.section-item.disabled {
    opacity: 0.6;
    cursor: not-allowed;
}

.section-icon {
    font-size: 1.5rem;
    color: var(--secondary-color);
    margin-bottom: 0.75rem;
    transition: color 0.3s ease;
}

.section-item.active .section-icon {
    color: var(--primary-color);
}

.section-name {
    font-weight: 500;
    color: var(--text-medium);
    font-size: 0.9rem;
    margin: 0;
    transition: color 0.3s ease;
}

.section-item.active .section-name {
    color: var(--text-dark);
    font-weight: 600;
}

.section-status {
    position: absolute;
    top: -5px;
    right: -5px;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: var(--primary-color);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.7rem;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

/* Ã‰diteur de section drag-and-drop */
.section-editor {
    margin-top: 3rem;
    background-color: var(--light-bg);
    border-radius: 16px;
    padding: 2rem;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
}

.editor-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--text-dark);
    margin-bottom: 1.5rem;
    display: flex;
    align-items: center;
    gap: 0.75rem;
}

.sortable-sections {
    list-style: none;
    padding: 0;
    margin: 0;
}

.sortable-section-item {
    background-color: var(--white-bg);
    border-radius: 8px;
    padding: 1rem;
    margin-bottom: 0.75rem;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
    cursor: grab;
    display: flex;
    align-items: center;
    transition: all 0.3s ease;
    position: relative;
    border-left: 3px solid var(--secondary-color);
}

.sortable-section-item:hover {
    transform: translateX(5px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

.sortable-section-item.dragging {
    opacity: 0.8;
    cursor: grabbing;
    background-color: var(--primary-light);
    z-index: 100;
}

.sortable-handle {
    color: var(--text-light);
    margin-right: 1rem;
    padding: 0.5rem;
    cursor: grab;
}

.sortable-content {
    flex: 1;
}

.sortable-section-name {
    font-weight: 500;
    color: var(--text-dark);
    margin: 0;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.sortable-section-name i {
    color: var(--secondary-color);
}

.sortable-description {
    font-size: 0.85rem;
    color: var(--text-light);
    margin: 0.25rem 0 0;
}

.sortable-actions {
    display: flex;
    gap: 0.5rem;
}

.sortable-btn {
    background: none;
    border: none;
    padding: 0.35rem;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.3s ease;
    color: var(--text-medium);
}

.sortable-btn:hover {
    background-color: rgba(0, 0, 0, 0.05);
    color: var(--primary-color);
}

.sortable-btn.remove:hover {
    background-color: rgba(231, 76, 60, 0.1);
    color: #e74c3c;
}

.sortable-btn.toggle-visibility.visible i {
    color: #2ecc71;
}

.sortable-btn.toggle-visibility.hidden i {
    color: #95a5a6;
}

.sortable-section-item.disabled {
    opacity: 0.5;
    border-left-color: #95a5a6;
    background-color: rgba(0, 0, 0, 0.02);
}

.section-add-btn {
    margin-top: 1rem;
    background-color: var(--white-bg);
    border: 2px dashed var(--border-color);
    border-radius: 8px;
    padding: 1rem;
    width: 100%;
    text-align: center;
    cursor: pointer;
    color: var(--text-light);
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
}

.section-add-btn:hover {
    border-color: var(--primary-color);
    color: var(--primary-color);
    background-color: var(--primary-light);
}


===================================================
FICHIER: public\css\testimonials.css
===================================================
.testimonial-card {
    height: 100%;
    display: flex;
    flex-direction: column;
    position: relative;
}

.testimonial-content {
    flex-grow: 1;
    position: relative;
    z-index: 1;
}

@media (max-width: 767px) {
    .process-steps:before {
        display: none;
    }

    .process-step {
        margin-bottom: 40px;
    }

    .statistic-number {
        font-size: 2rem;
    }

    .statistic-label {
        font-size: 0.9rem;
    }
}/* --- START COPY --- */
/* Testimonials */
.testimonial-card {
    background-color: white;
    border-radius: 12px;
    padding: 30px;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
    position: relative;
    margin-bottom: 30px; /* Note: overridden below for grid */
    height: 100%;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.testimonial-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
}

.testimonial-quote {
    font-size: 5rem;
    line-height: 1;
    position: absolute;
    top: 20px;
    left: 20px;
    color: rgba(42, 99, 255, 0.1);
    font-family: sans-serif;
}

.testimonial-content {
    font-style: italic;
    margin-bottom: 20px;
    color: var(--secondary-color);
}

.testimonial-user {
    display: flex;
    align-items: center;
}

.testimonial-avatar {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    object-fit: cover;
    margin-right: 15px;
}

.testimonial-name {
    font-size: 1.125rem;
    margin-bottom: 0;
    color: var(--secondary-dark);
}

.testimonial-position {
    font-size: 0.875rem;
    color: var(--secondary-color);
    margin-bottom: 5px;
}

.testimonial-rating {
    color: #ffc107;
    font-size: 0.875rem;
}


/* Ajouter dans vos styles CSS */
.testimonials-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 25px;
    margin: 30px 0;
}

/* Overrides previous margin for grid layout */
.testimonials-grid .testimonial-card {
    margin-bottom: 0; /* Supprimer la marge infÃ©rieure existante */
}


/* Style pour les tÃ©moignages en arabe */
[dir="rtl"].testimonial-content {
    font-family: 'Cairo', 'Tajawal', sans-serif;
    font-size: 1.05rem;
    line-height: 1.7;
    text-align: right;
}
/* --- END COPY --- */


===================================================
FICHIER: public\css\typography.css
===================================================
body {
    font-family: 'Inter', sans-serif;
    color: var(--secondary-color);
}

h1, h2, h3, h4, h5, h6 {
    font-family: 'Poppins', sans-serif;
    font-weight: 700;
}


===================================================
FICHIER: public\css\variables.css
===================================================
/* --- START COPY --- */
:root {
    --primary-color: #2a63ff;
    --primary-dark: #1a4cd4;
    --primary-light: #5a84ff;
    --secondary-color: #343f52;
    --secondary-dark: #212832;
    --accent-color: #ff5353;
    --success-color: #2ecc71;
    --warning-color: #f39c12;
    --info-color: #3498db;
    --light-bg: #f7f9fc;
    --dark-bg: #1c2331;
    --light-gray: #e5e9f2;
}
/* --- END COPY --- */


===================================================
FICHIER: public\css\welcome.css
===================================================
/* Variables CSS */
:root {
    --primary-color: #ff3a3a;
    --primary-light: rgba(255, 58, 58, 0.1);
    --primary-shadow: rgba(255, 58, 58, 0.3);
    --primary-dark: #e12d2d;
    --secondary-color: #2d3748;
    --text-dark: #2d3748;
    --text-medium: #4a5568;
    --text-light: #718096;
    --bg-gradient-start: #f9f9f7;
    --bg-gradient-end: #ffffff;
    --light-bg: #f9f9f7;
    --white-bg: #ffffff;
    --border-light: #edf2f7;
    --border-color: #e2e8f0;
    --card-bg: #ffffff;
    --card-shadow: rgba(0, 0, 0, 0.08);
    --info: #3498db;
    --warning: #f1c40f;
    --accent-color: #3498db;
    --dark-bg: #1a202c;
    --font-weight-bold: 700;
    --font-weight-semibold: 600;
    --font-weight-medium: 500;
}

/* Typographie */
body, h1, h2, h3, h4, h5, h6, p, span, div {
    font-family: 'Times New Roman', Times, serif !important;
}

/* Styles gÃ©nÃ©raux */
body {
    background-color: var(--light-bg);
    color: var(--text-medium);
    line-height: 1.6;
}

.welcome-container {
    max-width: 100%;
    overflow-x: hidden;
}

/* Animations */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes slideInRight {
    from {
        opacity: 0;
        transform: translateX(30px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

@keyframes float {
    0% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
    100% { transform: translateY(0px); }
}

/* Animation au dÃ©filement */
.animate-on-scroll {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.8s ease, transform 0.8s ease;
}

.animate-on-scroll.animated {
    opacity: 1;
    transform: translateY(0);
}

/* Section HÃ©ro */
.hero-section {
    background: linear-gradient(135deg, var(--secondary-color) 0%, var(--dark-bg) 100%);
    padding: 6rem 0 8rem;
    position: relative;
    overflow: hidden;
}

.hero-content {
    position: relative;
    z-index: 2;
}

.hero-title {
    font-size: 3.5rem;
    font-weight: var(--font-weight-bold);
    color: #ffffff;
    margin-bottom: 1.5rem;
    line-height: 1.2;
}

.hero-subtitle {
    font-size: 1.25rem;
    color: rgba(255, 255, 255, 0.85);
    margin-bottom: 2.5rem;
    max-width: 650px;
}

.hero-accent {
    color: var(--primary-color);
    font-weight: var(--font-weight-bold);
}

.hero-buttons {
    display: flex;
    gap: 1.5rem;
    margin-top: 2rem;
}

.btn-hero-primary {
    padding: 0.875rem 2rem;
    font-size: 1.1rem;
    font-weight: var(--font-weight-medium);
    background-color: var(--primary-color);
    border: none;
    color: white;
    border-radius: 50px;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px var(--primary-shadow);
}

.btn-hero-primary:hover {
    background-color: var(--primary-dark);
    transform: translateY(-3px);
    box-shadow: 0 8px 25px var(--primary-shadow);
}

.btn-hero-secondary {
    padding: 0.875rem 2rem;
    font-size: 1.1rem;
    font-weight: var(--font-weight-medium);
    background-color: rgba(255, 255, 255, 0.15);
    backdrop-filter: blur(8px);
    border: 1px solid rgba(255, 255, 255, 0.25);
    color: white;
    border-radius: 50px;
    transition: all 0.3s ease;
}

.btn-hero-secondary:hover {
    background-color: rgba(255, 255, 255, 0.25);
    transform: translateY(-3px);
}

.hero-image {
    position: relative;
    z-index: 2;
    max-width: 100%;
    height: auto;
    animation: float 6s ease-in-out infinite;
}

.hero-shape-1, .hero-shape-2, .hero-shape-3 {
    position: absolute;
    z-index: 1;
    opacity: 0.5;
}

.hero-shape-1 {
    top: 10%;
    left: 5%;
    width: 300px;
    height: 300px;
    background: radial-gradient(var(--primary-color), transparent 70%);
    border-radius: 50%;
    filter: blur(50px);
}

.hero-shape-2 {
    bottom: -10%;
    right: 10%;
    width: 250px;
    height: 250px;
    background: radial-gradient(var(--info), transparent 70%);
    border-radius: 50%;
    filter: blur(60px);
}

.hero-shape-3 {
    top: 30%;
    right: 20%;
    width: 200px;
    height: 200px;
    background: radial-gradient(var(--warning), transparent 70%);
    border-radius: 50%;
    filter: blur(40px);
}

/* En-tÃªtes de sections */
.section-heading {
    text-align: center;
    margin-bottom: 4rem;
    position: relative;
}

.section-title {
    font-size: 2.5rem;
    font-weight: var(--font-weight-bold);
    color: var(--text-dark);
    margin-bottom: 1rem;
    text-align: center;
}

.section-subtitle {
    font-size: 1.1rem;
    color: var(--text-light);
    margin-bottom: 3rem;
    text-align: center;
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
}

/* Sections de contenu */
.content-section {
    padding: 6rem 0;
    position: relative;
    overflow: hidden;
}

.content-section:nth-child(odd) {
    background-color: var(--light-bg);
}

.content-section:nth-child(even) {
    background-color: var(--white-bg);
}

.content-image {
    max-width: 90%;
    height: auto;
    border-radius: 10px;
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
}

.content-image:hover {
    transform: translateY(-10px);
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
}

.content-title {
    font-size: 2.25rem;
    font-weight: var(--font-weight-bold);
    color: var(--text-dark);
    margin-bottom: 1.25rem;
}

.content-subtitle {
    font-size: 1.1rem;
    color: var(--accent-color);
    margin-bottom: 1.5rem;
    letter-spacing: 1px;
    text-transform: uppercase;
    font-weight: var(--font-weight-medium);
}

.content-text {
    color: var(--text-medium);
    margin-bottom: 2rem;
    font-size: 1.05rem;
}

.content-list {
    padding-left: 0;
    list-style: none;
    margin-bottom: 2rem;
}

.content-list-item {
    padding: 0.75rem 0;
    border-bottom: 1px solid var(--border-light);
    display: flex;
    align-items: center;
    gap: 0.75rem;
    color: var(--text-medium);
}

.content-list-item:last-child {
    border-bottom: none;
}

.content-list-icon {
    width: 28px;
    height: 28px;
    min-width: 28px;
    background-color: var(--primary-light);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.content-list-icon i {
    font-size: 0.9rem;
    color: var(--primary-color);
}

/* Section des caractÃ©ristiques */
.features-outer-section {
    background-color: var(--white-bg);
    padding: 5rem 0;
}

.feature-card {
    background-color: #ffffff;
    border-radius: 16px;
    padding: 2rem;
    margin-bottom: 2rem;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.05);
    transition: all 0.3s ease;
    height: 100%;
    border: 1px solid var(--border-light);
}

.feature-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
}

.feature-icon {
    width: 64px;
    height: 64px;
    background-color: var(--primary-light);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 1.5rem;
}

.feature-icon i {
    font-size: 1.75rem;
    color: var(--primary-color);
}

.feature-title {
    font-size: 1.5rem;
    font-weight: var(--font-weight-semibold);
    color: var(--text-dark);
    margin-bottom: 1rem;
}

.feature-text {
    color: var(--text-medium);
    margin-bottom: 1.5rem;
}

.feature-link {
    font-weight: var(--font-weight-medium);
    color: var(--primary-color);
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.3s ease;
}

.feature-link:hover {
    color: var(--primary-dark);
    transform: translateX(5px);
}

/* Section de tÃ©moignages */
.testimonials-section {
    padding: 6rem 0;
    background-color: var(--light-bg);
    position: relative;
}

.testimonial-card {
    background-color: #ffffff;
    border-radius: 16px;
    padding: 2.5rem;
    margin: 1.5rem 0.5rem;
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.06);
    position: relative;
    z-index: 1;
    transition: all 0.3s ease;
    height: 100%;
}

.testimonial-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
}

.testimonial-quote {
    position: absolute;
    top: 20px;
    right: 25px;
    font-size: 4rem;
    color: var(--primary-light);
    z-index: -1;
    opacity: 0.8;
}

.testimonial-content {
    font-size: 1.1rem;
    color: var(--text-medium);
    margin-bottom: 2rem;
    position: relative;
    z-index: 2;
}

.testimonial-user {
    display: flex;
    align-items: center;
}

.testimonial-avatar {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    object-fit: cover;
    margin-right: 1rem;
    border: 3px solid var(--border-light);
}

.testimonial-info {
    flex: 1;
}

.testimonial-name {
    font-weight: var(--font-weight-medium);
    color: var(--text-dark);
    margin-bottom: 0.25rem;
    font-size: 1.1rem;
}

.testimonial-position {
    color: var(--text-light);
    font-size: 0.9rem;
}

.testimonial-rating {
    color: #f59e0b;
    font-size: 1rem;
    margin-top: 0.5rem;
}

/* Section Call to Action */
.cta-section {
    padding: 6rem 0;
    background: linear-gradient(135deg, var(--secondary-color) 0%, var(--dark-bg) 100%);
    position: relative;
    overflow: hidden;
}

.cta-content {
    position: relative;
    z-index: 2;
    text-align: center;
}

.cta-title {
    font-size: 2.75rem;
    font-weight: var(--font-weight-bold);
    color: #ffffff;
    margin-bottom: 1.5rem;
}

.cta-text {
    font-size: 1.2rem;
    color: rgba(255, 255, 255, 0.8);
    margin-bottom: 2.5rem;
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
}

.cta-button {
    padding: 1rem 2.5rem;
    font-size: 1.25rem;
    font-weight: var(--font-weight-medium);
    background-color: var(--primary-color);
    border: none;
    color: white;
    border-radius: 50px;
    transition: all 0.3s ease;
    box-shadow: 0 8px 20px var(--primary-shadow);
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
}

.cta-button:hover {
    background-color: var(--primary-dark);
    transform: translateY(-3px);
    box-shadow: 0 12px 30px var(--primary-shadow);
}

.cta-shape-1, .cta-shape-2 {
    position: absolute;
    z-index: 1;
    opacity: 0.4;
}

.cta-shape-1 {
    top: -100px;
    left: -100px;
    width: 300px;
    height: 300px;
    background: radial-gradient(var(--primary-color), transparent 70%);
    border-radius: 50%;
    filter: blur(60px);
}

.cta-shape-2 {
    bottom: -100px;
    right: -100px;
    width: 350px;
    height: 350px;
    background: radial-gradient(var(--info), transparent 70%);
    border-radius: 50%;
    filter: blur(80px);
}

/* Section Carousel */
.carousel-section {
    padding: 5rem 0;
    background-color: var(--white-bg);
    position: relative;
}

.carousel-card {
    background-color: var(--white-bg);
    border-radius: 20px;
    box-shadow: 0 10px 30px rgba(45, 55, 72, 0.08);
    overflow: hidden;
    margin: 0 auto;
    max-width: 1100px;
}

/* Styles pour les sections disponibles */
.available-sections {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    margin-bottom: 1.5rem;
}

.cv-section {
    cursor: grab;
    background-color: var(--white-bg);
    padding: 1rem;
    border-radius: 8px;
    border-left: 3px solid var(--secondary-color);
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
    display: flex;
    align-items: center;
    gap: 1rem;
    transition: all 0.3s ease;
}

.cv-section:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.08);
}

.cv-section.dragging {
    opacity: 0.8;
    background-color: var(--primary-light);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
}

.section-icon {
    color: var(--secondary-color);
    width: 36px;
    height: 36px;
    min-width: 36px;
    background-color: rgba(45, 55, 72, 0.05);
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.section-details {
    flex: 1;
}

.section-details h5 {
    font-weight: 600;
    color: var(--text-dark);
    margin: 0;
}

.section-desc {
    font-size: 0.85rem;
    color: var(--text-medium);
    margin: 0.25rem 0 0;
}

/* Simple CV Preview */
.simple-cv-preview {
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
    overflow: hidden;
    margin-bottom: 2rem;
    transition: all 0.3s ease;
    height: auto;
    min-height: 250px;
    max-height: 500px;
    position: relative;
}

.preview-header {
    background-color: #f8f9fa;
    padding: 1rem;
    border-bottom: 1px solid #e9ecef;
}

.preview-title {
    margin: 0;
    color: var(--secondary-color);
    font-size: 1.2rem;
    font-weight: 600;
}

.preview-body {
    padding: 1rem;
    min-height: 200px;
    overflow-y: auto;
}

.preview-placeholder {
    text-align: center;
    color: #adb5bd;
    padding: 2rem 1rem;
    font-style: italic;
}

.preview-section {
    background-color: #f8f9fa;
    border-left: 3px solid var(--primary-color);
    padding: 0.75rem;
    margin-bottom: 0.75rem;
    border-radius: 4px;
    cursor: move;
    transition: all 0.3s ease;
}

.preview-section:hover {
    transform: translateY(-2px);
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
}

.preview-section-title {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 0.5rem;
    font-weight: 600;
    color: var(--secondary-color);
}

.preview-section-content {
    color: var(--text-medium);
    font-size: 0.9rem;
    line-height: 1.4;
}

/* CV Structure Builder */
.cv-structure-container {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
    margin-top: 3rem;
}

.cv-builder-controls {
    flex: 1;
    min-width: 300px;
}

.cv-preview {
    flex: 1;
    min-width: 300px;
}

.builder-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--text-dark);
    margin-bottom: 1.5rem;
    display: flex;
    align-items: center;
    gap: 0.75rem;
}

.structure-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 1.5rem;
}

.tip-text {
    color: var(--text-medium);
    font-size: 0.9rem;
}

.reset-btn {
    background-color: rgba(45, 55, 72, 0.05);
    color: var(--text-medium);
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 50px;
    font-size: 0.9rem;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.reset-btn:hover {
    background-color: rgba(238, 49, 36, 0.1);
    color: var(--primary-color);
}

/* Sections Editor */
.sections-editor-section {
    padding: 5rem 0;
    background-color: var(--light-bg);
    position: relative;
    overflow: hidden;
}

.section-editor {
    margin-top: 4rem;
}

.editor-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--text-dark);
    margin-bottom: 1.5rem;
    display: flex;
    align-items: center;
    gap: 0.75rem;
}

.sortable-sections {
    list-style: none;
    padding: 0;
    margin: 0 0 2rem;
}

.sortable-section-item {
    display: flex;
    align-items: center;
    background-color: var(--white-bg);
    margin-bottom: 0.75rem;
    border-radius: 8px;
    padding: 1rem;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
    transition: all 0.3s ease;
}

.sortable-section-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.08);
}

.sortable-section-item.disabled {
    opacity: 0.6;
    background-color: #f8f9fa;
    border: 1px dashed #dee2e6;
}

.sortable-handle {
    width: 28px;
    height: 28px;
    min-width: 28px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--text-light);
    cursor: grab;
}

.sortable-content {
    flex-grow: 1;
    margin-left: 1rem;
}

.sortable-section-name {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin: 0;
    font-size: 1.1rem;
    color: var(--text-dark);
}

.sortable-description {
    margin: 0.25rem 0 0;
    color: var(--text-medium);
    font-size: 0.9rem;
}

.sortable-actions {
    display: flex;
    gap: 0.5rem;
}

.sortable-btn {
    background: none;
    border: none;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--text-medium);
    transition: all 0.2s ease;
}

.sortable-btn:hover {
    background-color: rgba(0, 0, 0, 0.05);
}

.sortable-btn.toggle-visibility.visible {
    color: var(--info);
}

.sortable-btn.toggle-visibility.hidden {
    color: var(--text-light);
}

.sortable-btn.remove:hover {
    color: var(--primary-color);
    background-color: rgba(238, 49, 36, 0.1);
}

.section-add-btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    background-color: var(--white-bg);
    color: var(--primary-color);
    border: 1px dashed var(--primary-color);
    padding: 0.75rem 1.5rem;
    border-radius: 50px;
    font-size: 1rem;
    transition: all 0.2s ease;
}

.section-add-btn:hover {
    background-color: var(--primary-light);
    transform: translateY(-2px);
}

/* SÃ©lecteur de sections */
.sections-selector {
    margin-bottom: 3rem;
}

.sections-selector-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-dark);
    margin-bottom: 1.5rem;
    text-align: center;
}

.sections-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1rem;
    list-style: none;
    padding: 0;
    margin: 0;
}

.section-item {
    position: relative;
    padding: 1.5rem 1rem;
    width: 140px;
    background-color: var(--white-bg);
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    gap: 0.75rem;
    cursor: pointer;
    transition: all 0.2s ease;
}

.section-item:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
}

.section-item.active {
    border: 2px solid var(--primary-color);
    background-color: var(--primary-light);
}

.section-item .section-icon {
    width: 48px;
    height: 48px;
    min-width: 48px;
    background-color: var(--light-bg);
    color: var(--secondary-color);
    font-size: 1.2rem;
}

.section-item.active .section-icon {
    color: var(--primary-color);
    background-color: rgba(238, 49, 36, 0.15);
}

.section-name {
    font-size: 0.9rem;
    font-weight: 500;
    margin: 0;
    color: var(--text-dark);
}

.section-status {
    position: absolute;
    top: 10px;
    right: 10px;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: var(--primary-color);
    color: white;
    font-size: 0.7rem;
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Template feedback */
.template-feedback {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background-color: #28a745;
    color: white;
    padding: 12px 20px;
    border-radius: 4px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    z-index: 1050;
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.3s ease, transform 0.3s ease;
    font-weight: 500;
}

.template-feedback.show {
    opacity: 1;
    transform: translateY(0);
}

.template-feedback i {
    margin-right: 8px;
}

.template-feedback.error {
    background-color: #dc3545;
}

.template-feedback.info {
    background-color: #17a2b8;
}

.template-feedback.warning {
    background-color: #ffc107;
    color: #212529;
}

/* Responsive */
@media (max-width: 992px) {
    .hero-title {
        font-size: 2.75rem;
    }

    .content-image {
        margin-bottom: 2rem;
    }

    .content-section {
        padding: 4rem 0;
    }

    .cv-structure-container {
        flex-direction: column;
    }

    .a4-preview {
        margin-top: 2rem;
    }
}

@media (max-width: 768px) {
    .hero-title {
        font-size: 2.25rem;
    }

    .hero-subtitle {
        font-size: 1.1rem;
    }

    .hero-buttons {
        flex-direction: column;
        gap: 1rem;
    }

    .section-title {
        font-size: 2rem;
    }

    .content-title {
        font-size: 1.75rem;
    }

    .cta-title {
        font-size: 2rem;
    }

    .cta-text {
        font-size: 1.1rem;
    }

    .cv-structure-container {
        flex-direction: column;
    }

    .cv-builder-controls,
    .cv-preview {
        width: 100%;
    }

    .simple-cv-preview {
        max-height: 400px;
    }

    .sections-list {
        gap: 0.5rem;
    }

    .section-item {
        width: 120px;
        padding: 1.25rem 0.75rem;
    }
}

@media (max-width: 576px) {
    .cv-layout-option {
        font-size: 0.85rem;
        padding: 0.4rem 0.8rem;
    }

    .section-item {
        width: 100px;
        padding: 1rem 0.5rem;
    }

    .section-item .section-icon {
        width: 40px;
        height: 40px;
        min-width: 40px;
        font-size: 1rem;
    }

    .section-name {
        font-size: 0.8rem;
    }
}

/* Styles pour le carousel moderne */
.template-selection-section {
    padding: 80px 0;
    background-color: #f8f9fb;
}

.modern-carousel-container {
    position: relative;
    max-width: 1200px;
    margin: 0 auto 40px;
    background: #ffffff;
    border-radius: 20px;
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.08);
    padding: 30px;
}

.modern-carousel-controls {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 30px;
    gap: 20px;
}

.modern-carousel-arrow {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: rgba(0, 0, 0, 0.05);
    border: none;
    color: #333;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
}

.modern-carousel-arrow:hover {
    background-color: var(--primary-color);
    color: #fff;
    transform: scale(1.05);
}

.carousel-counter {
    font-size: 20px;
    font-weight: 600;
    color: #333;
    display: flex;
    align-items: center;
    gap: 5px;
}

.carousel-counter span:first-child {
    color: var(--primary-color);
}

.modern-carousel-wrapper {
    position: relative;
    overflow: hidden;
    height: 520px;
}

.modern-carousel-item {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    visibility: hidden;
    transition: all 0.6s ease-in-out;
    transform: translateX(30px);
}

.modern-carousel-item.active {
    opacity: 1;
    visibility: visible;
    transform: translateX(0);
    z-index: 1;
}

.modern-template-card {
    display: flex;
    background-color: #fff;
    border-radius: 16px;
    overflow: hidden;
    height: 100%;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
}

.template-preview-container {
    width: 50%;
    position: relative;
    background-color: #f0f2f5;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
}

.template-preview {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
    transition: transform 0.5s ease;
}

.template-preview-container:hover .template-preview {
    transform: scale(1.03);
}

.template-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.2);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.template-preview-container:hover .template-overlay {
    opacity: 1;
}

.preview-badge {
    background-color: rgba(255, 255, 255, 0.9);
    color: var(--primary-color);
    padding: 8px 20px;
    border-radius: 30px;
    font-weight: 600;
    font-size: 14px;
    display: flex;
    align-items: center;
    gap: 8px;
    transform: translateY(10px);
    transition: transform 0.3s ease;
}

.template-preview-container:hover .preview-badge {
    transform: translateY(0);
}

.modern-template-details {
    width: 50%;
    padding: 40px;
    display: flex;
    flex-direction: column;
}

.template-header {
    margin-bottom: 20px;
}

.template-title {
    font-size: 28px;
    font-weight: 700;
    color: #333;
    margin-bottom: 10px;
}

.template-rating {
    color: #FF9800;
    display: flex;
    align-items: center;
    gap: 5px;
    font-size: 14px;
}

.rating-count {
    color: #999;
    margin-left: 5px;
}

.template-description {
    font-size: 16px;
    color: #666;
    line-height: 1.6;
    margin-bottom: 30px;
}

.template-categories {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-bottom: 30px;
}

.category-tag {
    background-color: #f0f2f5;
    color: #555;
    padding: 6px 12px;
    border-radius: 20px;
    font-size: 13px;
    display: flex;
    align-items: center;
    gap: 5px;
    transition: all 0.3s ease;
}

.category-tag:hover {
    background-color: var(--primary-light);
    color: var(--primary-color);
}

.template-actions {
    margin-top: auto;
    display: flex;
    gap: 15px;
}

.btn-template-preview, .btn-template-select {
    padding: 12px 20px;
    border-radius: 8px;
    font-weight: 600;
    font-size: 14px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    border: none;
}

.btn-template-preview {
    background-color: #f0f2f5;
    color: #555;
    flex: 1;
}

.btn-template-preview:hover {
    background-color: #e0e4e9;
    color: #333;
}

.btn-template-select {
    background-color: var(--primary-color);
    color: white;
    flex: 1;
}

.btn-template-select:hover {
    background-color: var(--primary-dark);
    transform: translateY(-2px);
    box-shadow: 0 4px 10px var(--primary-shadow);
}

.btn-template-select.selected {
    background-color: #28a745;
}

.template-thumbnails {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 10px;
    margin-top: 30px;
}

.template-thumbnail {
    width: 80px;
    height: 60px;
    border-radius: 6px;
    overflow: hidden;
    cursor: pointer;
    transition: all 0.3s ease;
    opacity: 0.6;
    border: 2px solid transparent;
    padding: 0;
}

.template-thumbnail.active {
    border-color: var(--primary-color);
    opacity: 1;
}

.template-thumbnail:hover {
    opacity: 1;
}

.thumbnail-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.template-filters {
    max-width: 1200px;
    margin: 0 auto;
    background: white;
    padding: 20px 30px;
    border-radius: 12px;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
}

.filter-section {
    margin-bottom: 20px;
}

.filter-section:last-child {
    margin-bottom: 0;
}

.filter-title {
    font-size: 16px;
    color: #555;
    margin-bottom: 10px;
    font-weight: 600;
}

.filter-options {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
}

.filter-button {
    background-color: #f0f2f5;
    color: #555;
    padding: 8px 16px;
    border-radius: 20px;
    font-size: 14px;
    cursor: pointer;
    transition: all 0.3s ease;
    border: none;
}

.filter-button:hover {
    background-color: var(--primary-light);
    color: var(--primary-color);
}

.filter-button.active {
    background-color: var(--primary-color);
    color: white;
}

/* Styles du modal d'aperÃ§u complet */
.template-preview-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0.8);
    z-index: 1000;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.template-preview-modal.active {
    opacity: 1;
}

.template-preview-modal-content {
    background: white;
    padding: 30px;
    border-radius: 12px;
    max-width: 90%;
    max-height: 90%;
    overflow: auto;
    position: relative;
    transform: translateY(20px);
    transition: transform 0.3s ease;
}

.template-preview-modal.active .template-preview-modal-content {
    transform: translateY(0);
}

.close-preview-modal {
    position: absolute;
    top: 15px;
    right: 20px;
    font-size: 24px;
    cursor: pointer;
    color: #555;
}

.fullscreen-preview {
    max-width: 100%;
    height: auto;
    display: block;
    margin: 20px 0;
}

.preview-actions {
    margin-top: 20px;
    text-align: center;
}

/* Badge de nouveautÃ© et populaire */
.template-badge {
    position: absolute;
    top: 15px;
    left: 15px;
    background-color: var(--accent-color);
    color: white;
    padding: 5px 10px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: 600;
    z-index: 2;
}

.template-badge.new {
    background-color: #4CAF50;
}

.template-badge.popular {
    background-color: #FF5722;
}

/* Annotations personnalisÃ©es */
.template-note {
    position: absolute;
    top: 50px;
    left: 15px;
    background-color: rgba(255, 255, 255, 0.9);
    color: #333;
    padding: 5px 10px;
    border-radius: 4px;
    font-size: 12px;
    z-index: 2;
    max-width: 150px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.preview-date-info {
    color: #717171;
    font-size: 0.85rem;
    margin-bottom: 15px;
    font-style: italic;
}

/* Responsive pour le carousel moderne */
@media (max-width: 992px) {
    .modern-template-card {
        flex-direction: column;
    }

    .template-preview-container, .modern-template-details {
        width: 100%;
    }

    .modern-carousel-wrapper {
        height: 780px;
    }

    .template-preview-container {
        height: 300px;
    }
}

@media (max-width: 768px) {
    .template-actions {
        flex-direction: column;
    }

    .modern-carousel-wrapper {
        height: 850px;
    }

    .filter-options {
        justify-content: center;
    }

    .template-thumbnails {
        overflow-x: auto;
        justify-content: flex-start;
        padding-bottom: 10px;
    }

    .modern-carousel-controls {
        flex-wrap: wrap;
    }
}

@media (max-width: 576px) {
    .modern-carousel-wrapper {
        height: 900px;
    }

    .template-preview-container {
        height: 200px;
    }

    .modern-template-details {
        padding: 20px;
    }

    .template-title {
        font-size: 22px;
    }

    .template-description {
        font-size: 14px;
        margin-bottom: 20px;
    }

    .category-tag {
        font-size: 12px;
        padding: 4px 10px;
    }

    .btn-template-preview, .btn-template-select {
        padding: 10px 15px;
        font-size: 13px;
    }
}

/* Styles pour les informations utilisateur et date */
.user-info-footer {
    background-color: #f8f9fa;
    padding: 10px;
    border-radius: 5px;
    margin-top: 20px;
    text-align: center;
    font-size: 0.9rem;
    color: #6c757d;
}

.user-info-footer .date-info {
    display: inline-block;
    margin-right: 15px;
}

.user-info-footer .user-info {
    display: inline-block;
}

.user-info-footer i {
    margin-right: 5px;
    color: var(--primary-color);
}

/* Current Date: 2025-04-26 16:20:03 */
/* Current User: Mohamed-abidi-95 */


===================================================
FICHIER: tests\bootstrap.php
===================================================
<?php

use Symfony\Component\Dotenv\Dotenv;

require dirname(__DIR__).'/vendor/autoload.php';

if (method_exists(Dotenv::class, 'bootEnv')) {
    (new Dotenv())->bootEnv(dirname(__DIR__).'/.env');
}



===================================================
FICHIER: tailwind.config.js
===================================================
/** @type {import('tailwindcss').Config} */
module.exports = {
    content: [
        "./assets/**/*.js",
        "./templates/**/*.html.twig",
        "./node_modules/flowbite/**/*.js"
    ],
    darkMode: 'class',
    theme: {
        extend: {
            colors: {
                primary: {
                    50: '#ffe6e6',
                    100: '#ffcccc',
                    200: '#ff9999',
                    300: '#ff6666',
                    400: '#ff3333',
                    500: '#ff0000', // couleur principale d'ESPRIT
                    600: '#cc0000',
                    700: '#990000',
                    800: '#660000',
                    900: '#330000',
                },
            },
        },
    },
    plugins: [
        require('flowbite/plugin')
    ],
}


===================================================
FICHIER: webpack.config.js
===================================================
const Encore = require('@symfony/webpack-encore');

// Manually configure the runtime environment if not already configured yet by the "encore" command.
// It's useful when you use tools that rely on webpack.config.js file.
if (!Encore.isRuntimeEnvironmentConfigured()) {
    Encore.configureRuntimeEnvironment(process.env.NODE_ENV || 'dev');
}

Encore
    // directory where compiled assets will be stored
    .setOutputPath('public/build/')
    // public path used by the web server to access the output path
    .setPublicPath('/build')
    // only needed for CDN's or subdirectory deploy
    //.setManifestKeyPrefix('build/')

    /*
     * ENTRY CONFIG
     *
     * Each entry will result in one JavaScript file (e.g. app.js)
     * and one CSS file (e.g. app.css) if your JavaScript imports CSS.
     */
    .addEntry('app', './assets/app.js')

    // When enabled, Webpack "splits" your files into smaller pieces for greater optimization.
    .splitEntryChunks()

    // will require an extra script tag for runtime.js
    // but, you probably want this, unless you're building a single-page app
    .enableSingleRuntimeChunk()

    /*
     * FEATURE CONFIG
     *
     * Enable & configure other features below. For a full
     * list of features, see:
     * https://symfony.com/doc/current/frontend.html#adding-more-features
     */
    .cleanupOutputBeforeBuild()

    // Displays build status system notifications to the user
    // .enableBuildNotifications()

    .enableSourceMaps(!Encore.isProduction())
    // enables hashed filenames (e.g. app.abc123.css)
    .enableVersioning(Encore.isProduction())
    .copyFiles({
        from: './assets/images',
        to: 'images/[path][name].[hash:8].[ext]'
    })
    // configure Babel
    // .configureBabel((config) => {
    //     config.plugins.push('@babel/a-babel-plugin');
    // })

    // enables and configure @babel/preset-env polyfills
    .configureBabelPresetEnv((config) => {
        config.useBuiltIns = 'usage';
        config.corejs = '3.38';
    })

    // enables Sass/SCSS support
    //.enableSassLoader()

    // uncomment if you use TypeScript
    //.enableTypeScriptLoader()

    // uncomment if you use React
    //.enableReactPreset()

    // uncomment to get integrity="..." attributes on your script & link tags
    // requires WebpackEncoreBundle 1.4 or higher
    //.enableIntegrityHashes(Encore.isProduction())

    // uncomment if you're having problems with a jQuery plugin
    //.autoProvidejQuery()
;

module.exports = Encore.getWebpackConfig();



===================================================
FIN DE L'EXTRACTION - 2025-04-29 17:42:51
===================================================
