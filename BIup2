Fichier: migrations\Version20250508114114.php
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\migrations\Version20250508114114.php
-----
<?php

declare(strict_types=1);

namespace DoctrineMigrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

final class Version20250508114114 extends AbstractMigration
{
    public function getDescription(): string
    {
        return 'Creates template_usage table for tracking template selections';
    }

    public function up(Schema $schema): void
    {
        $this->addSql('CREATE TABLE template_usage (
            id INT AUTO_INCREMENT NOT NULL,
            user_id INT DEFAULT NULL,
            template_name VARCHAR(50) NOT NULL,
            selected_at DATETIME NOT NULL,
            session_id VARCHAR(255) DEFAULT NULL,
            PRIMARY KEY(id)
        ) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB');

        $this->addSql('ALTER TABLE template_usage ADD CONSTRAINT FK_template_usage_user_id FOREIGN KEY (user_id) REFERENCES user (id)');
        $this->addSql('CREATE INDEX IDX_template_usage_user_id ON template_usage (user_id)');
        $this->addSql('CREATE INDEX IDX_template_name ON template_usage (template_name)');
        $this->addSql('CREATE INDEX IDX_selected_at ON template_usage (selected_at)');
    }

    public function down(Schema $schema): void
    {
        $this->addSql('DROP TABLE template_usage');
    }
}
==================================================

Fichier: config\packages\asset_mapper.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\asset_mapper.yaml
-----
framework:
    asset_mapper:
        # The paths to make available to the asset mapper.
        paths:
            - assets/
        missing_import_mode: strict

when@prod:
    framework:
        asset_mapper:
            missing_import_mode: warn

==================================================

Fichier: config\packages\cache.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\cache.yaml
-----
framework:
    cache:
        # Unique name of your app: used to compute stable namespaces for cache keys.
        #prefix_seed: your_vendor_name/app_name

        # The "app" cache stores to the filesystem by default.
        # The data in this cache should persist between deploys.
        # Other options include:

        # Redis
        #app: cache.adapter.redis
        #default_redis_provider: redis://localhost

        # APCu (not recommended with heavy random-write workloads as memory fragmentation can cause perf issues)
        #app: cache.adapter.apcu

        # Namespaced pools use the above "app" backend by default
        #pools:
            #my.dedicated.cache: null

==================================================

Fichier: config\packages\csrf.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\csrf.yaml
-----
# Enable stateless CSRF protection for forms and logins/logouts
framework:
    form:
        csrf_protection:
            token_id: submit

    csrf_protection:
        stateless_token_ids:
            - submit
            - authenticate
            - logout

==================================================

Fichier: config\packages\debug.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\debug.yaml
-----
when@dev:
    debug:
        # Forwards VarDumper Data clones to a centralized server allowing to inspect dumps on CLI or in your browser.
        # See the "server:dump" command to start a new server.
        dump_destination: "tcp://%env(VAR_DUMPER_SERVER)%"

==================================================

Fichier: config\packages\doctrine.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\doctrine.yaml
-----
doctrine:
    dbal:
        url: '%env(resolve:DATABASE_URL)%'

        # IMPORTANT: You MUST configure your server version,
        # either here or in the DATABASE_URL env var (see .env file)
        #server_version: '16'

        profiling_collect_backtrace: '%kernel.debug%'
        use_savepoints: true
    orm:
        auto_generate_proxy_classes: true
        enable_lazy_ghost_objects: true
        report_fields_where_declared: true
        validate_xml_mapping: true
        naming_strategy: doctrine.orm.naming_strategy.underscore_number_aware
        identity_generation_preferences:
            Doctrine\DBAL\Platforms\PostgreSQLPlatform: identity
        auto_mapping: true
        mappings:
            App:
                type: attribute
                is_bundle: false
                dir: '%kernel.project_dir%/src/Entity'
                prefix: 'App\Entity'
                alias: App
        controller_resolver:
            auto_mapping: false

when@test:
    doctrine:
        dbal:
            # "TEST_TOKEN" is typically set by ParaTest
            dbname_suffix: '_test%env(default::TEST_TOKEN)%'

when@prod:
    doctrine:
        orm:
            auto_generate_proxy_classes: false
            proxy_dir: '%kernel.build_dir%/doctrine/orm/Proxies'
            query_cache_driver:
                type: pool
                pool: doctrine.system_cache_pool
            result_cache_driver:
                type: pool
                pool: doctrine.result_cache_pool

    framework:
        cache:
            pools:
                doctrine.result_cache_pool:
                    adapter: cache.app
                doctrine.system_cache_pool:
                    adapter: cache.system

==================================================

Fichier: config\packages\doctrine_migrations.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\doctrine_migrations.yaml
-----
doctrine_migrations:
    migrations_paths:
        # namespace is arbitrary but should be different from App\Migrations
        # as migrations classes should NOT be autoloaded
        'DoctrineMigrations': '%kernel.project_dir%/migrations'
    enable_profiler: false

==================================================

Fichier: config\packages\framework.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\framework.yaml
-----
# see https://symfony.com/doc/current/reference/configuration/framework.html
framework:
    secret: '%env(APP_SECRET)%'
    #csrf_protection: true
    http_method_override: false
    handle_all_throwables: true

    # Enables session support. Note that the session will ONLY be started if you read or write from it.
    # Remove or comment this section to explicitly disable session support.
    session:
        handler_id: null
        cookie_secure: auto
        cookie_samesite: lax
        storage_factory_id: session.storage.factory.native

    #esi: true
    #fragments: true
    php_errors:
        log: true # You might configure timezone here if needed for logs, e.g., log: E_ALL & ~E_USER_DEPRECATED & ~E_DEPRECATED & ~E_STRICT

    # Timezone and locale settings
    default_locale: 'fr'
    # timezone: 'UTC' # <-- REMOVED THIS LINE (set in php.ini)

    # Asset configuration
    assets:
    # Default path strategy is usually sufficient if assets are in public/
    # You might need 'version_strategy' or 'json_manifest_path' depending on your setup (e.g., using Webpack Encore)
    # If you are NOT using Webpack Encore or similar, this minimal config is often fine.
    # Removed the packages section below as it's not needed for assets in public/
    # packages:
    #     images:
    #         base_urls:
    #             - '/images'
    #     css:
    #         base_urls:
    #             - '/css'
    #     js:
    #         base_urls:
    #             - '/js'

    # Router configuration
    router:
        utf8: true
        # If using attributes for routes (recommended), remove route_class if present
        # route_class: Symfony\Component\Routing\Route # Example, might not be needed

    # Validation configuration
    validation:
        enabled: true
        enable_attributes: true
        # Enables validator auto-mapping support.
        # For instance, basic validation constraints will be inferred from Doctrine's metadata.
        #auto_mapping:
        #    App\Entity\: []

    # Cache configuration
    cache:
        app: cache.adapter.filesystem
        system: cache.adapter.system
        directory: '%kernel.cache_dir%/pools'

    # Form configuration
    form:
        enabled: true

    # Mailer configuration (if needed)
    mailer:
        enabled: true
        dsn: '%env(MAILER_DSN)%'

    # Notifier configuration (if needed)
    notifier:
        enabled: true
        chatter_transports: []
        texter_transports: []

    # HTTP Client configuration (if needed)
    http_client:
        default_options:
            max_redirects: 5

    # Error handler configuration
    error_controller: null # Keep this as null unless you have a specific error controller

    # Trusted configuration
    trusted_proxies: null
    trusted_headers: ['x-forwarded-for', 'x-forwarded-host', 'x-forwarded-proto', 'x-forwarded-port', 'x-forwarded-prefix']
    trusted_hosts: null

    # Web link configuration
    web_link:
        enabled: true

# REMOVED framework_extra section - belongs in config/packages/sensio_framework_extra.yaml if used
# REMOVED templating section - belongs in config/packages/twig.yaml
# REMOVED parameters section - belongs in config/services.yaml

when@test:
    framework:
        test: true
        session:
            storage_factory_id: session.storage.factory.mock_file
        profiler:
            collect: false
        validation:
            not_compromised_password: false

when@dev:
    framework:
        profiler:
            only_exceptions: false
==================================================

Fichier: config\packages\mailer.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\mailer.yaml
-----
framework:
    mailer:
        dsn: '%env(MAILER_DSN)%'

==================================================

Fichier: config\packages\mathjax.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\mathjax.yaml
-----
# Configuration simple pour MathJax
parameters:
  mathjax:
    enabled: true
    cdn_url: 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js'
==================================================

Fichier: config\packages\messenger.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\messenger.yaml
-----
framework:
    messenger:
        failure_transport: failed

        transports:
            # https://symfony.com/doc/current/messenger.html#transport-configuration
            async:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                options:
                    use_notify: true
                    check_delayed_interval: 60000
                retry_strategy:
                    max_retries: 3
                    multiplier: 2
            failed: 'doctrine://default?queue_name=failed'
            # sync: 'sync://'

        default_bus: messenger.bus.default

        buses:
            messenger.bus.default: []

        routing:
            Symfony\Component\Mailer\Messenger\SendEmailMessage: async
            Symfony\Component\Notifier\Message\ChatMessage: async
            Symfony\Component\Notifier\Message\SmsMessage: async

            # Route your messages to the transports
            # 'App\Message\YourMessage': async

==================================================

Fichier: config\packages\monolog.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\monolog.yaml
-----
monolog:
    channels:
        - deprecation # Deprecations are logged in the dedicated "deprecation" channel when it exists

when@dev:
    monolog:
        handlers:
            main:
                type: stream
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                level: debug
                channels: ["!event"]
            # uncomment to get logging in your browser
            # you may have to allow bigger header sizes in your Web server configuration
            #firephp:
            #    type: firephp
            #    level: info
            #chromephp:
            #    type: chromephp
            #    level: info
            console:
                type: console
                process_psr_3_messages: false
                channels: ["!event", "!doctrine", "!console"]

when@test:
    monolog:
        handlers:
            main:
                type: fingers_crossed
                action_level: error
                handler: nested
                excluded_http_codes: [404, 405]
                channels: ["!event"]
            nested:
                type: stream
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                level: debug

when@prod:
    monolog:
        handlers:
            main:
                type: fingers_crossed
                action_level: error
                handler: nested
                excluded_http_codes: [404, 405]
                buffer_size: 50 # How many messages should be saved? Prevent memory leaks
            nested:
                type: stream
                path: php://stderr
                level: debug
                formatter: monolog.formatter.json
            console:
                type: console
                process_psr_3_messages: false
                channels: ["!event", "!doctrine"]
            deprecation:
                type: stream
                channels: [deprecation]
                path: php://stderr
                formatter: monolog.formatter.json

==================================================

Fichier: config\packages\notifier.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\notifier.yaml
-----
framework:
    notifier:
        chatter_transports:
        texter_transports:
        channel_policy:
            # use chat/slack, chat/telegram, sms/twilio or sms/nexmo
            urgent: ['email']
            high: ['email']
            medium: ['email']
            low: ['email']
        admin_recipients:
            - { email: admin@example.com }

==================================================

Fichier: config\packages\routing.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\routing.yaml
-----
framework:
    router:
        # Configure how to generate URLs in non-HTTP contexts, such as CLI commands.
        # See https://symfony.com/doc/current/routing.html#generating-urls-in-commands
        #default_uri: http://localhost

when@prod:
    framework:
        router:
            strict_requirements: null

==================================================

Fichier: config\packages\security.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\security.yaml
-----
security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login_check
                enable_csrf: true
            logout:
                path: app_logout
                target: app_welcome

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
    # - { path: ^/admin, roles: ROLE_ADMIN }
    # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
==================================================

Fichier: config\packages\translation.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\translation.yaml
-----
framework:
    default_locale: en
    translator:
        default_path: '%kernel.project_dir%/translations'
        fallbacks:
            - en
        providers:

==================================================

Fichier: config\packages\twig.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\twig.yaml
-----
twig:
    default_path: '%kernel.project_dir%/Templates'
    paths:
        '%kernel.project_dir%/Templates': ~
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
==================================================

Fichier: config\packages\validator.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\validator.yaml
-----
framework:
    validation:
        # Enables validator auto-mapping support.
        # For instance, basic validation constraints will be inferred from Doctrine's metadata.
        #auto_mapping:
        #    App\Entity\: []

when@test:
    framework:
        validation:
            not_compromised_password: false

==================================================

Fichier: config\packages\web_profiler.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\web_profiler.yaml
-----
when@dev:
    web_profiler:
        toolbar: true

    framework:
        profiler:
            collect_serializer_data: true

when@test:
    framework:
        profiler: { collect: false }

==================================================

Fichier: config\packages\webpack_encore.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\packages\webpack_encore.yaml
-----
webpack_encore:
    # The path where Encore is building the assets - i.e. Encore.setOutputPath()
    output_path: '%kernel.project_dir%/public/build'
    # If multiple builds are defined (as shown below), you can disable the default build:
    # output_path: false

    # Set attributes that will be rendered on all script and link tags
    script_attributes:
        defer: true
        # Uncomment (also under link_attributes) if using Turbo Drive
        # https://turbo.hotwired.dev/handbook/drive#reloading-when-assets-change
        # 'data-turbo-track': reload
    # link_attributes:
        # Uncomment if using Turbo Drive
        # 'data-turbo-track': reload

    # If using Encore.enableIntegrityHashes() and need the crossorigin attribute (default: false, or use 'anonymous' or 'use-credentials')
    # crossorigin: 'anonymous'

    # Preload all rendered script and link tags automatically via the HTTP/2 Link header
    # preload: true

    # Throw an exception if the entrypoints.json file is missing or an entry is missing from the data
    # strict_mode: false

    # If you have multiple builds:
    # builds:
        # frontend: '%kernel.project_dir%/public/frontend/build'

        # pass the build name as the 3rd argument to the Twig functions
        # {{ encore_entry_script_tags('entry1', null, 'frontend') }}

framework:
    assets:
        json_manifest_path: '%kernel.project_dir%/public/build/manifest.json'

#when@prod:
#    webpack_encore:
#        # Cache the entrypoints.json (rebuild Symfony's cache when entrypoints.json changes)
#        # Available in version 1.2
#        cache: true

#when@test:
#    webpack_encore:
#        strict_mode: false

==================================================

Fichier: config\routes\framework.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\routes\framework.yaml
-----
when@dev:
    _errors:
        resource: '@FrameworkBundle/Resources/config/routing/errors.xml'
        prefix: /_error

==================================================

Fichier: config\routes\security.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\routes\security.yaml
-----
_security_logout:
    resource: security.route_loader.logout
    type: service

==================================================

Fichier: config\routes\web_profiler.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\routes\web_profiler.yaml
-----
when@dev:
    web_profiler_wdt:
        resource: '@WebProfilerBundle/Resources/config/routing/wdt.xml'
        prefix: /_wdt

    web_profiler_profiler:
        resource: '@WebProfilerBundle/Resources/config/routing/profiler.xml'
        prefix: /_profiler

==================================================

Fichier: config\routes.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\routes.yaml
-----
# config/routes.yaml

# Routes d'authentification
app_login:
    path: /login
    controller: App\Controller\SecurityController::login
    methods: [GET, POST]

app_login_check:
    path: /login_check
    methods: [POST]

app_logout:
    path: /logout
    controller: App\Controller\SecurityController::logout
    methods: [GET]

app_register:
    path: /register
    controller: App\Controller\SecurityController::register
    methods: [GET, POST]

app_forgot_password:
    path: /forgot-password
    controller: App\Controller\SecurityController::forgotPassword
    methods: [GET]

app_forgot_password_request:
    path: /forgot-password-request
    controller: App\Controller\SecurityController::forgotPasswordRequest
    methods: [POST]

app_verify_email:
    path: /verify/email
    controller: App\Controller\SecurityController::verifyUserEmail
    methods: [GET]

# Routes de base
app_welcome:
    path: /
    controller: App\Controller\CVGeneratorController::welcome
    methods: [GET]

# Routes du générateur de CV
app_cv_generator:
    path: /cv
    controller: App\Controller\CVGeneratorController::index
    methods: [GET]

app_cv_builder:
    path: /cv-builder
    controller: App\Controller\CVGeneratorController::builder
    methods: [GET]

app_cv_content_editor:
    path: /cv-content-editor
    controller: App\Controller\CVGeneratorController::contentEditor
    methods: [GET]

app_cv_generate:
    path: /cv-generator/generate
    controller: App\Controller\CVGeneratorController::generate
    methods: [POST]

app_cv_test_pdf:
    path: /cv-generator/test-pdf
    controller: App\Controller\CVGeneratorController::testPdf
    methods: [GET]

app_cv_debug_form:
    path: /cv-generator/debug-form
    controller: App\Controller\CVGeneratorController::debugForm
    methods: [POST]

app_cv_template_debug:
    path: /cv-template-debug
    controller: App\Controller\CVGeneratorController::templateDebug
    methods: [GET]

app_cv_template_test:
    path: /cv-template-test/{template}
    controller: App\Controller\CVGeneratorController::templateTest
    methods: [GET]

app_cv_template_elegant:
    path: /cv-template-elegant
    controller: App\Controller\CVGeneratorController::elegantTemplate
    methods: [GET]

app_test_latex_editor:
    path: /test-latex-editor
    controller: App\Controller\CVGeneratorController::testLatexEditor
    methods: [GET]

# Routes LaTeX - Utilisez le contrôleur LatexController
app_latex:
    path: /latex
    controller: App\Controller\LatexController::index
    methods: [GET]

app_latex_convert:
    path: /latex/convert
    controller: App\Controller\LatexController::convertLatex
    methods: [POST]

app_latex_preview:
    path: /latex/preview
    controller: App\Controller\LatexController::previewLatex
    methods: [POST]

app_latex_view_pdf:
    path: /latex/view/{filename}
    controller: App\Controller\LatexController::viewPdf
    methods: [GET]

app_latex_upload:
    path: /latex/upload
    controller: App\Controller\LatexController::uploadLatexFile
    methods: [POST]

# Routes pour ModernCV
app_cv_moderncv:
    path: /cv-generator/moderncv
    controller: App\Controller\CVGeneratorController::generateModernCV
    methods: [GET, POST]

app_cv_moderncv_preview:
    path: /cv-generator/moderncv/preview
    controller: App\Controller\CVGeneratorController::previewModernCV
    methods: [GET]


# Template tracking API endpoints
api_track_template:
    path: /api/track-template
    controller: App\Controller\TemplateController::trackTemplate
    methods: [POST]

api_template_stats:
    path: /api/template-stats
    controller: App\Controller\TemplateController::templateStats
    methods: [GET]

# Template analytics dashboard
app_template_analytics_dashboard:
    path: /admin/template-analytics-dashboard
    controller: App\Controller\TemplateAnalyticsController::index
    methods: [GET]
==================================================

Fichier: config\services.yaml
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\config\services.yaml
-----
# config/services.yaml
parameters:
    # Add your parameters from framework.yaml here
    app.current_date: '2025-05-08 00:23:58' # Current UTC datetime
    app.current_user: 'Mohamed-abidi-95'   # Current user login
    # Nouveaux paramètres pour le service LaTeX
    latex.temp_dir: '%kernel.project_dir%/var/latex/temp'
    latex.output_dir: '%kernel.project_dir%/var/latex/output'
    # Email configuration parameters
    mailer.sender_email: 'noreply@espritcvgenerator.com'
    mailer.sender_name: 'ESPRIT CV Generator'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Configuration explicite des contrôleurs qui ont besoin de dépendances
    App\Controller\CVGeneratorController:
        arguments:
            $logger: '@logger'
            $latexPdfGenerator: '@App\Service\LatexPdfGenerator'

    App\Controller\LatexController:
        arguments:
            $latexService: '@App\Service\LatexService'
            $logger: '@logger'
            $projectDir: '%kernel.project_dir%'

    # Configuration explicite du service LatexService avec paramètres corrects
    App\Service\LatexService:
        arguments:
            $projectDir: '%kernel.project_dir%'
            $logger: '@logger'

    # Configuration du service LatexPdfGenerator

    App\Security\EmailVerifier:
        arguments:
            $mailer: '@mailer'
            $entityManager: '@doctrine.orm.entity_manager'
    # Configuration du service LatexPdfGenerator
    App\Service\LatexPdfGenerator:
        arguments:
            $projectDir: '%kernel.project_dir%'
            $latexService: '@App\Service\LatexService'

    # Security related services

    # User authentication event listener to track last login
    App\EventListener\LoginListener:
        tags:
            - { name: 'kernel.event_listener', event: 'security.interactive_login', method: 'onSecurityInteractiveLogin' }
==================================================

Fichier: src\Controller\CVGeneratorController.php
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\src\Controller\CVGeneratorController.php
-----
<?php
// Last updated: 2025-05-08 12:05:00
// Author: Mohamed-abidi-95

namespace App\Controller;

use App\Entity\TemplateUsage;
use App\Service\LatexPdfGenerator;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\HeaderUtils;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpFoundation\BinaryFileResponse;
use Symfony\Component\HttpFoundation\ResponseHeaderBag;
use Symfony\Component\Routing\Attribute\Route;
use Dompdf\Dompdf;
use Dompdf\Options;
use Doctrine\ORM\EntityManagerInterface;
use Psr\Log\LoggerInterface;
use Symfony\Component\Process\Process;

class CVGeneratorController extends AbstractController
{
    private LoggerInterface $logger;
    private ?LatexPdfGenerator $latexPdfGenerator;
    private EntityManagerInterface $entityManager;

    public function __construct(LoggerInterface $logger, EntityManagerInterface $entityManager, ?LatexPdfGenerator $latexPdfGenerator = null)
    {
        $this->logger = $logger;
        $this->latexPdfGenerator = $latexPdfGenerator;
        $this->entityManager = $entityManager;
    }

    #[Route("/", name: "app_welcome")]
    public function welcome(): Response
    {
        return $this->render('cv_generator/welcome.html.twig');
    }

    #[Route("/cv-builder", name: "app_cv_builder")]
    public function builder(): Response
    {
        return $this->render('cv_builder/index.html.twig', [
            'current_time' => new \DateTime('now', new \DateTimeZone('UTC')),
            'username' => 'Mohamed-abidi-95'
        ]);
    }

    #[Route("/cv-content-editor", name: "app_cv_content_editor")]
    public function contentEditor(): Response
    {
        return $this->render('cv_builder/content_editor.html.twig', [
            'current_time' => new \DateTime('now', new \DateTimeZone('UTC')),
            'username' => 'Mohamed-abidi-95'
        ]);
    }

    #[Route("/cv", name: "app_cv_generator")]
    public function index(): Response
    {
        // Sample data for autofill testing
        $sampleData = [
            'firstName' => 'John', 'lastName' => 'Doe', 'position' => 'Software Developer',
            'email' => 'john.doe@example.com', 'phone' => '+216 12 345 678',
            'address' => '123 Main Street', 'city' => 'Tunis', 'country' => 'Tunisia',
            'github' => 'github.com/johndoe', 'linkedin' => 'linkedin.com/in/johndoe',
            'education' => [
                ['degree' => 'Bachelor of Science in Computer Science', 'institution' => 'ESPRIT Engineering School', 'location' => 'Tunis, Tunisia', 'startDate' => '09/2018', 'endDate' => '06/2022', 'description' => 'Graduated with honors...'],
                ['degree' => 'High School Diploma', 'institution' => 'International High School', 'location' => 'Tunis, Tunisia', 'startDate' => '09/2015', 'endDate' => '06/2018', 'description' => 'Science track...']
            ],
            'experience' => [
                ['position' => 'Software Engineer', 'company' => 'Tech Solutions Inc.', 'location' => 'Tunis, Tunisia', 'startDate' => '08/2022', 'endDate' => 'Present', 'description' => 'Developing full-stack web apps...'],
                ['position' => 'Web Development Intern', 'company' => 'StartUp Hub', 'location' => 'Tunis, Tunisia', 'startDate' => '06/2021', 'endDate' => '09/2021', 'description' => 'Assisted in development...']
            ],
            'skills' => ['JavaScript', 'React.js', 'Node.js', 'HTML/CSS', 'PHP', 'MySQL', 'Git', 'Agile', 'Problem Solving'],
            'languages' => ['Arabic (Native)', 'French (Fluent)', 'English (Advanced)'],
            'additionalInfo' => 'Passionate about building high-quality software...'
        ];

        return $this->render('cv_generator/main.html.twig', [
            'currentStep' => 1,
            'sampleData' => $sampleData
        ]);
    }

    // Ajout des attributs Route pour les fonctions LaTeX
    #[Route("/latex", name: "app_latex")]
    public function latex(): Response
    {
        return $this->render('latex/index.html.twig', [
            'controller_name' => 'LatexController',
        ]);
    }

    #[Route("/latex/preview", name: "app_latex_preview", methods: ["POST"])]
    public function latexPreview(Request $request): Response
    {
        $data = json_decode($request->getContent(), true);
        $latex = $data['latex'] ?? '';

        return $this->json([
            'success' => true,
            'latex' => $latex
        ]);
    }

    /**
     * Track template selection method
     */
    private function trackTemplateSelection(Request $request, string $templateName): void
    {
        $this->logger->info('Template selected: ' . $templateName);

        // Create template usage record
        $templateUsage = new TemplateUsage();
        $templateUsage->setTemplateName($templateName);
        $templateUsage->setSelectedAt(new \DateTime());

        // If a user is logged in, associate with user
        if ($this->getUser()) {
            $templateUsage->setUser($this->getUser());
        } else {
            // For anonymous users, track by session
            $sessionId = $request->getSession()->getId();
            $templateUsage->setSessionId($sessionId);
        }

        // Save to database
        $this->entityManager->persist($templateUsage);
        $this->entityManager->flush();

        $this->logger->info('Template selection recorded for template: ' . $templateName);
    }

    #[Route("/cv-generator/generate", name: "app_cv_generate", methods: ["POST"])]
    public function generate(Request $request): Response
    {
        // Set memory limit and execution time
        ini_set('memory_limit', '512M');
        ini_set('max_execution_time', 300);

        $this->logger->info('CV Generation request received.');
        $this->logger->info('Request method: ' . $request->getMethod());
        $this->logger->info('Content type: ' . $request->headers->get('Content-Type'));
        $this->logger->info('User: Mohamed-abidi-95, timestamp: ' . (new \DateTime())->format('Y-m-d H:i:s'));

        try {
            // Déboguer les données du formulaire
            $allFormData = $request->request->all();
            $this->logger->info('All form data: ' . json_encode(array_keys($allFormData)));

            // --- Get Form Data ---
            $formData = $request->request->all();

            // --- Get Template and Photo ---
            $templateType = $request->request->get('template', 'elegant'); // Default to elegant template

            // Track template selection
            $this->trackTemplateSelection($request, $templateType);

            $photoData = $request->request->get('photoData', ''); // Base64 encoded photo data

            // --- Get LaTeX formulas if any ---
            $latexFormulas = $request->request->get('latexFormulas', '[]');
            $formData['latexFormulas'] = json_decode($latexFormulas, true) ?: [];

            $this->logger->info('LaTeX formulas count: ' . count($formData['latexFormulas']));
            $this->logger->info('Template selected (raw): ' . $templateType);

            // Correction: s'assurer de la valeur correcte du template
            $templateType = strtolower($templateType);
            $this->logger->info('Template selected (normalized): ' . $templateType);

            // --- Get Style Customization Data ---
            $formData['backgroundColor'] = $request->request->get('backgroundColor', '#ffffff');
            $formData['textColor'] = $request->request->get('textColor', '#000000');
            $formData['selectedBackground'] = $request->request->get('selectedBackground', 'none');
            $formData['selectedBackgroundType'] = $request->request->get('selectedBackgroundType', 'color');
            $formData['selectedBackgroundColor'] = $request->request->get('selectedBackgroundColor', '#ffffff');

            $this->logger->info('Background: ' . $formData['selectedBackground']);
            $this->logger->info('Background Type: ' . $formData['selectedBackgroundType']);

            // Déterminer quel template utiliser
            if ($templateType === 'blue') {
                $templateName = 'cv_template_blue.html.twig';
            } elseif ($templateType === 'classic') {
                $templateName = 'cv_template_classic.html.twig';
            } else {
                $templateName = 'cv_template_elegant.html.twig';
            }

            $this->logger->info('Template name chosen: ' . $templateName);

            // Vérifier que le fichier existe réellement, en essayant différents chemins possibles
            $possiblePaths = [
                $this->getParameter('kernel.project_dir') . '/Templates/cv_generator/' . $templateName,
                $this->getParameter('kernel.project_dir') . '/templates/cv_generator/' . $templateName,
                $this->getParameter('kernel.project_dir') . '/templates/Templates/cv_generator/' . $templateName
            ];

            $templateFound = false;
            $validTemplatePath = '';

            foreach ($possiblePaths as $path) {
                $this->logger->info("Checking template path: {$path}");
                if (file_exists($path)) {
                    $templateFound = true;
                    $validTemplatePath = $path;
                    $this->logger->info("Template found at: {$path}");
                    break;
                }
            }

            if (!$templateFound) {
                throw new \Exception("Le fichier de template n'existe pas. Chemins vérifiés: " . implode(', ', $possiblePaths));
            }

            // Déterminer le chemin de rendu relatif en fonction du chemin absolu trouvé
            $templateRenderPath = '';
            $projectDir = $this->getParameter('kernel.project_dir');

            if (strpos($validTemplatePath, $projectDir . '/Templates/') === 0) {
                $templateRenderPath = 'Templates/cv_generator/' . $templateName;
            } else if (strpos($validTemplatePath, $projectDir . '/templates/Templates/') === 0) {
                $templateRenderPath = 'templates/Templates/cv_generator/' . $templateName;
            } else {
                $templateRenderPath = 'templates/cv_generator/' . $templateName;
            }

            $this->logger->info("Template render path: {$templateRenderPath}");

            // --- Render HTML with Environment variable ---
            $env = new \Twig\Environment(new \Twig\Loader\FilesystemLoader([
                $this->getParameter('kernel.project_dir'),
                $this->getParameter('kernel.project_dir') . '/templates',
                $this->getParameter('kernel.project_dir') . '/Templates'
            ]));

            // Ajouter le support MathJax pour le rendu LaTeX
            $html = $env->render($templateRenderPath, [
                'data' => $formData,
                'photoData' => $photoData,
                'generatedDate' => new \DateTime(),
                'debug_template' => $templateType,
                'includeMathJax' => true // Ajouter cette option pour activer MathJax
            ]);

            // Ajouter MathJax si nécessaire et si des formules LaTeX sont présentes
            if (!empty($formData['latexFormulas'])) {
                $mathjaxCdn = '<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>';
                $html = str_replace('</head>', $mathjaxCdn . '</head>', $html);
            }

            // Generate PDF
            $options = new Options();
            $options->set('isHtml5ParserEnabled', true);
            $options->set('defaultFont', 'DejaVu Sans');
            $options->set('isRemoteEnabled', true);

            // Option importante pour que Dompdf prenne en compte le JavaScript
            $options->set('isJavascriptEnabled', true);

            $dompdf = new Dompdf($options);
            $dompdf->loadHtml($html);
            $dompdf->setPaper('A4');
            $dompdf->render();

            // Générez un nom de fichier significatif
            $filename = ($formData['firstName'] ?? 'CV') . '-' . ($formData['lastName'] ?? 'Generated') . '-' . (new \DateTime())->format('Y-m-d') . '.pdf';

            // Retournez la réponse PDF
            $response = new Response($dompdf->output());
            $disposition = HeaderUtils::makeDisposition(HeaderUtils::DISPOSITION_ATTACHMENT, $filename);
            $response->headers->set('Content-Type', 'application/pdf');
            $response->headers->set('Content-Disposition', $disposition);

            return $response;

        } catch (\Throwable $e) {
            $this->logger->error("Error generating PDF: {$e->getMessage()}", ['exception' => $e]);
            $this->logger->error("Full exception details: " . get_class($e) . " at " . $e->getFile() . ":" . $e->getLine());

            // Retourner une réponse d'erreur avec plus de détails
            return new Response(
                '<html><body>
            <h1>Une erreur s\'est produite</h1>
            <p>' . htmlspecialchars($e->getMessage()) . '</p>
            <p><a href="/cv-content-editor" class="btn btn-primary">Retourner à l\'éditeur</a></p>
            <hr>
            <h3>Détails techniques (environnement de développement uniquement)</h3>
            <pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>
            <h4>Données formulaire reçues:</h4>
            <pre>' . htmlspecialchars(print_r($request->request->all(), true)) . '</pre>
            <hr>
            <p>Date: ' . (new \DateTime())->format('Y-m-d H:i:s') . '</p>
            <p>User: Mohamed-abidi-95</p>
        </body></html>',
                500,
                ['Content-Type' => 'text/html']
            );
        }
    }

    #[Route("/cv-generator/test-pdf", name: "app_cv_test_pdf")]
    public function testPdf(): Response
    {
        // --- Test PDF Logic (remains mostly the same) ---
        try {
            // Ajout d'un test LaTeX simple
            $html = '<!DOCTYPE html>
            <html>
            <head>
                <title>Test PDF</title>
                <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
            </head>
            <body>
                <h1>Test PDF OK</h1>
                <p>Generated: '.(new \DateTime())->format('Y-m-d H:i:s').'</p>
                <p>Test LaTeX: $$\sum_{i=1}^{n} i = \frac{n(n+1)}{2}$$</p>
            </body>
            </html>';

            $options = new Options();
            $options->set('isHtml5ParserEnabled', true);
            $options->set('defaultFont', 'DejaVu Sans');
            $options->set('isRemoteEnabled', true);
            $options->set('isJavascriptEnabled', true);

            $dompdf = new Dompdf($options);
            $dompdf->loadHtml($html);
            $dompdf->setPaper('A4');
            $dompdf->render();

            $response = new Response($dompdf->output());
            $disposition = HeaderUtils::makeDisposition(HeaderUtils::DISPOSITION_INLINE, 'test.pdf');
            $response->headers->set('Content-Type', 'application/pdf');
            $response->headers->set('Content-Disposition', $disposition);
            return $response;
        } catch (\Throwable $e) {
            $this->logger->error("Error in test PDF generation: {$e->getMessage()}", ['exception' => $e]);
            return new Response('<html><body><h1>Test PDF Error</h1><p>'.htmlspecialchars($e->getMessage()).'</p><pre>'.htmlspecialchars($e->getTraceAsString()).'</pre></body></html>', 500, ['Content-Type' => 'text/html']);
        }
    }

    #[Route("/cv-template-debug", name: "app_cv_template_debug")]
    public function templateDebug(Request $request): Response
    {
        // Obtenir le type de template à partir de la requête ou utiliser classique par défaut
        $templateType = $request->query->get('template', 'classic');

        // Track template selection
        $this->trackTemplateSelection($request, $templateType);

        // Déterminer quel template utiliser
        if ($templateType === 'blue') {
            $templateName = 'cv_template_blue.html.twig';
        } elseif ($templateType === 'classic') {
            $templateName = 'cv_template_classic.html.twig';
        } else {
            $templateName = 'cv_template_elegant.html.twig';
        }

        // Données de test
        $sampleData = [
            'firstName' => 'Test',
            'lastName' => 'Debug',
            'position' => 'Développeur Test',
            'email' => 'test@debug.com',
            'textColor' => '#000000',
            'selectedBackgroundColor' => '#ffffff',
            'selectedBackground' => 'none',
            'selectedBackgroundType' => 'color',
            // Ajouter des formules LaTeX de test
            'latexFormulas' => [
                ['formula' => '\sum_{i=1}^{n} i = \frac{n(n+1)}{2}', 'position' => 'skills'],
                ['formula' => 'E = mc^2', 'position' => 'additionalInfo']
            ]
        ];

        return $this->render('Templates/cv_generator/' . $templateName, [
            'data' => $sampleData,
            'photoData' => '/images/logo.png',
            'generatedDate' => new \DateTime(),
            'includeMathJax' => true
        ]);
    }

    #[Route("/cv-generator/debug-form", name: "app_cv_debug_form", methods: ["POST"])]
    public function debugForm(Request $request): Response
    {
        // --- Debug Form Logic (remains the same) ---
        try {
            return new Response('<html><body><h1>Form Debug</h1><pre>' . print_r($request->request->all(), true) . '</pre></body></html>', 200, ['Content-Type' => 'text/html']);
        } catch (\Throwable $e) {
            return new Response('Error: ' . $e->getMessage(), 500);
        }
    }

    #[Route("/cv-template-test/{template}", name: "app_cv_template_test")]
    public function templateTest($template = 'classic', Request $request): Response
    {
        // Track template selection
        $this->trackTemplateSelection($request, $template);

        $formData = [
            'firstName' => 'Test',
            'lastName' => 'Debug',
            'position' => 'Développeur Test',
            'textColor' => '#000000',
            'selectedBackgroundColor' => '#ffffff',
            'selectedBackground' => 'none',
            'selectedBackgroundType' => 'color',
            // Ajouter des formules LaTeX de test
            'latexFormulas' => [
                ['formula' => '\sum_{i=1}^{n} i = \frac{n(n+1)}{2}', 'position' => 'skills'],
                ['formula' => 'E = mc^2', 'position' => 'additionalInfo']
            ]
        ];

        if ($template === 'blue') {
            $templateName = 'cv_template_blue.html.twig';
        } elseif ($template === 'classic') {
            $templateName = 'cv_template_classic.html.twig';
        } else {
            $templateName = 'cv_template_elegant.html.twig';
        }

        return $this->render('Templates/cv_generator/' . $templateName, [
            'data' => $formData,
            'photoData' => null,
            'generatedDate' => new \DateTime(),
            'includeMathJax' => true
        ]);
    }

    #[Route("/cv-template-elegant", name: "app_cv_template_elegant")]
    public function elegantTemplate(Request $request): Response
    {
        // Track template selection
        $this->trackTemplateSelection($request, 'elegant');

        // Cette route sert à rendre le template élégant pour affichage/debug
        $sampleData = [
            'firstName' => 'Mohamed', 'lastName' => 'Abidi',
            'position' => 'Développeur Full Stack',
            'email' => 'mohamed.abidi@example.com', 'phone' => '+216 55 123 456',
            'address' => '15 Avenue Habib Bourguiba', 'city' => 'Tunis', 'country' => 'Tunisie',
            'github' => 'github.com/mohamed-abidi-95', 'linkedin' => 'linkedin.com/in/mohamed-abidi-95',
            'additionalInfo' => 'Développeur passionné avec 5 ans d\'expérience dans le développement web.',
            'skills' => ['JavaScript', 'React.js', 'Node.js', 'HTML/CSS', 'PHP', 'MySQL', 'Git'],
            'languages' => ['Arabe', 'Français', 'Anglais'],
            'languageLevels' => ['Langue maternelle', 'Courant', 'Avancé'],
            'experience' => [
                [
                    'position' => 'Développeur Full Stack Senior',
                    'company' => 'Tech Solutions Tunisie',
                    'location' => 'Tunis, Tunisie',
                    'startDate' => '01/2022',
                    'endDate' => 'Présent',
                    'description' => 'Direction d\'une équipe de développeurs pour construire et lancer le produit phare de l\'entreprise'
                ]
            ],
            'education' => [
                [
                    'degree' => 'Diplôme d\'Ingénieur en Informatique',
                    'institution' => 'École d\'Ingénieurs ESPRIT',
                    'location' => 'Tunis, Tunisie',
                    'startDate' => '09/2018',
                    'endDate' => '06/2023',
                    'description' => 'Diplômé avec mention. Spécialisation en technologies web et principes d\'ingénierie logicielle.'
                ]
            ],
            'projects' => [
                [
                    'name' => 'Plateforme E-commerce',
                    'description' => 'Développé une plateforme e-commerce complète avec traitement sécurisé des paiements et gestion des stocks.',
                    'technologies' => 'React.js, Node.js, Express, MongoDB'
                ]
            ],
            // Ajouter des formules LaTeX d'exemple
            'latexFormulas' => [
                ['formula' => '\sum_{i=1}^{n} i = \frac{n(n+1)}{2}', 'position' => 'skills'],
                ['formula' => 'E = mc^2', 'position' => 'projects']
            ]
        ];

        // Pour le debug/démonstration, charger le logo ESPRIT
        $photoData = '/images/logo.png';

        return $this->render('Templates/cv_generator/cv_template_elegant.html.twig', [
            'data' => $sampleData,
            'photoData' => $photoData,
            'generatedDate' => new \DateTime(),
            'includeMathJax' => true
        ]);
    }

    // Nouvelle route pour le test de l'éditeur LaTeX
    #[Route("/test-latex-editor", name: "app_test_latex_editor")]
    public function testLatexEditor(Request $request): Response
    {
        // Obtenir le moteur LaTeX préféré de l'utilisateur (par défaut: pdflatex)
        $engine = $request->query->get('engine', 'pdflatex');

        // Générer un exemple de code LaTeX pour l'affichage
        $exampleLatexCode = $this->generateExampleLatexCode();

        // Récupérer une liste des formules LaTeX récemment utilisées (simulé)
        $recentFormulas = [
            ['formula' => '\sum_{i=1}^{n} i = \frac{n(n+1)}{2}', 'name' => 'Somme des entiers'],
            ['formula' => 'E = mc^2', 'name' => 'Équation d\'Einstein'],
            ['formula' => '\oint_C \vec{E} \cdot d\vec{l} = -\frac{d\Phi_B}{dt}', 'name' => 'Loi de Faraday']
        ];

        // Déterminer si le service LatexPdfGenerator est disponible
        $latexServiceAvailable = $this->latexPdfGenerator !== null;

        // Vérifier si ModernCV est installé sur le système (pour information seulement)
        $moderncvInstalled = false;
        try {
            $process = new Process(['kpsewhich', 'moderncv.cls']);
            $process->run();
            $moderncvInstalled = $process->isSuccessful() && !empty($process->getOutput());
        } catch (\Exception $e) {
            $this->logger->warning('Impossible de vérifier si ModernCV est installé: ' . $e->getMessage());
        }

        // Générer le code de tous les templates disponibles
        $templates = [
            'standard' => $this->generateStandardCVTemplate('Mohamed', 'Abidi', 'Développeur Full Stack'),
            'classic' => $this->generateModernCVTemplate('Mohamed', 'Abidi', 'Développeur Full Stack', '+216 xx xxx xxx', 'mohamed.abidi@example.com'),
            'elegant' => $this->generateElegantCVTemplate('Mohamed', 'Abidi', 'Développeur Full Stack', '+216 xx xxx xxx', 'mohamed.abidi@example.com')
        ];

        return $this->render('cv_generator/test_latex_editor.html.twig', [
            'current_time' => new \DateTime('now', new \DateTimeZone('UTC')),
            'username' => 'Mohamed-abidi-95',
            'engine' => $engine,
            'exampleLatexCode' => $exampleLatexCode,
            'recentFormulas' => $recentFormulas,
            'latexServiceAvailable' => $latexServiceAvailable,
            'moderncvInstalled' => $moderncvInstalled,
            'templates' => $templates
        ]);
    }

    /**
     * Génère un exemple de code LaTeX pour l'affichage dans l'interface
     */
    private function generateExampleLatexCode(): string
    {
        return "% !TEX program = xelatex
\\documentclass[11pt,a4paper,sans]{moderncv}

% Style et couleur
\\moderncvstyle{classic}
\\moderncvcolor{blue}

% Packages nécessaires
\\usepackage{fontspec}
\\usepackage{wasysym}
\\usepackage[scale=0.75]{geometry}

% Informations personnelles
\\name{Mohamed}{Abidi}
\\title{Développeur Full Stack}
\\phone{+216 55 123 456}
\\email{mohamed.abidi@example.com}
\\social[linkedin]{mohamed-abidi}
\\social[github]{Mohamed-abidi-95}

\\begin{document}

\\makecvtitle

\\section{Expérience professionnelle}
\\cventry{2023--Présent}{Développeur Web Full Stack}{Société XYZ}{Tunis}{}{
\\begin{itemize}
\\item Développement d'applications web avec Symfony et React
\\item Intégration de services tiers et APIs \\smiley{}
\\item Optimisation des performances et refactoring de code \\checkbox{}
\\end{itemize}}

\\cventry{2021--2023}{Développeur Junior}{ABC Tech}{Tunis}{}{
\\begin{itemize}
\\item Maintenance et développement de sites web
\\item Mise en place d'outils de déploiement continu
\\end{itemize}}

\\section{Formation}
\\cventry{2020--2022}{Master en Génie Logiciel}{ESPRIM}{Tunis}{}{}
\\cventry{2017--2020}{Licence en Informatique}{Université de Tunis}{Tunis}{}{}

\\section{Compétences techniques}
\\cvitem{Langages}{PHP, JavaScript, HTML, CSS, SQL}
\\cvitem{Frameworks}{Symfony, React, Vue.js, Bootstrap}
\\cvitem{Outils}{Git, Docker, VS Code, PHPStorm}
\\cvitem{Bases de données}{MySQL, PostgreSQL, MongoDB}

\\section{Langues}
\\cvitemwithcomment{Arabe}{Langue maternelle}{}
\\cvitemwithcomment{Français}{Courant}{C1}
\\cvitemwithcomment{Anglais}{Professionnel}{B2}

\\end{document}";
    }

    /**
     * Génère un template CV standard en utilisant la classe article
     */
    private function generateStandardCVTemplate(string $name, string $surname, string $title): string
    {
        $latexCode = "\\documentclass[a4paper,11pt]{article}\n";
        $latexCode .= "\\usepackage[utf8]{inputenc}\n";
        $latexCode .= "\\usepackage[T1]{fontenc}\n";
        $latexCode .= "\\usepackage{geometry}\n";
        $latexCode .= "\\usepackage{hyperref}\n";
        $latexCode .= "\\usepackage{array}\n";
        $latexCode .= "\\usepackage{xcolor}\n\n";

        $latexCode .= "\\geometry{a4paper, left=2cm, right=2cm, top=2cm, bottom=2cm}\n";
        $latexCode .= "\\definecolor{linkcolor}{RGB}{0,0,238}\n";
        $latexCode .= "\\hypersetup{colorlinks=true, linkcolor=linkcolor, urlcolor=linkcolor}\n\n";

        $latexCode .= "\\begin{document}\n\n";

        $latexCode .= "\\begin{center}\n";
        $latexCode .= "    {\\huge\\textbf{" . $name . " " . $surname . "}}\\\\[0.5cm]\n";
        $latexCode .= "    {\\large " . $title . "}\\\\[0.3cm]\n";
        $latexCode .= "    \\begin{tabular}{r l}\n";
        $latexCode .= "        Téléphone: & +216 xx xxx xxx \\\\\n";
        $latexCode .= "        Email: & \\href{mailto:exemple@email.com}{exemple@email.com}\n";
        $latexCode .= "    \\end{tabular}\n";
        $latexCode .= "\\end{center}\n\n";

        $latexCode .= "\\section*{Formation}\n";
        $latexCode .= "\\begin{tabular}{r p{12cm}}\n";
        $latexCode .= "    \\textbf{2020--2022} & Master en Génie Logiciel, ESPRIM, Tunis \\\\\n";
        $latexCode .= "    \\textbf{2017--2020} & Licence en Informatique, Université de Tunis, Tunis\n";
        $latexCode .= "\\end{tabular}\n\n";

        $latexCode .= "\\section*{Expériences Professionnelles}\n";
        $latexCode .= "\\begin{tabular}{r p{12cm}}\n";
        $latexCode .= "    \\textbf{2023--Présent} & \\textbf{Développeur Web Full Stack, Société XYZ, Tunis} \\\\\n";
        $latexCode .= "                         & \$\\bullet\$ Développement d'applications web avec Symfony et React \\\\\n";
        $latexCode .= "                         & \$\\bullet\$ Intégration de services tiers et APIs \\\\\n";
        $latexCode .= "                         & \$\\bullet\$ Optimisation des performances et refactoring de code \\\\\n";
        $latexCode .= "    \\textbf{2021--2023} & \\textbf{Développeur Junior, ABC Tech, Tunis} \\\\\n";
        $latexCode .= "                         & \$\\bullet\$ Maintenance et développement de sites web \\\\\n";
        $latexCode .= "                         & \$\\bullet\$ Mise en place d'outils de déploiement continu\n";
        $latexCode .= "\\end{tabular}\n\n";

        $latexCode .= "\\section*{Compétences}\n";
        $latexCode .= "\\begin{tabular}{r p{12cm}}\n";
        $latexCode .= "    Langages: & PHP, JavaScript, HTML, CSS, SQL \\\\\n";
        $latexCode .= "    Frameworks: & Symfony, React, Vue.js, Bootstrap \\\\\n";
        $latexCode .= "    Outils: & Git, Docker, VS Code, PHPStorm \\\\\n";
        $latexCode .= "    Bases de données: & MySQL, PostgreSQL, MongoDB\n";
        $latexCode .= "\\end{tabular}\n\n";

        $latexCode .= "\\section*{Langues}\n";
        $latexCode .= "\\begin{tabular}{r p{12cm}}\n";
        $latexCode .= "    Arabe: & Langue maternelle \\\\\n";
        $latexCode .= "    Français: & Courant (C1) \\\\\n";
        $latexCode .= "    Anglais: & Professionnel (B2)\n";
        $latexCode .= "\\end{tabular}\n\n";

        $latexCode .= "\\end{document}\n";

        return $latexCode;
    }

    /**
     * Génère un template CV élégant
     */
    private function generateElegantCVTemplate(string $name, string $surname, string $title, string $phone, string $email): string
    {
        $latexCode = "\\documentclass[a4paper,11pt]{article}\n";
        $latexCode .= "\\usepackage[utf8]{inputenc}\n";
        $latexCode .= "\\usepackage[T1]{fontenc}\n";
        $latexCode .= "\\usepackage{geometry}\n";
        $latexCode .= "\\usepackage{hyperref}\n";
        $latexCode .= "\\usepackage{array}\n";
        $latexCode .= "\\usepackage{xcolor}\n";
        $latexCode .= "\\usepackage{enumitem}\n";
        $latexCode .= "\\usepackage{titlesec}\n";
        $latexCode .= "\\usepackage{fancyhdr}\n\n";

        $latexCode .= "\\geometry{a4paper, margin=2cm}\n";
        $latexCode .= "\\definecolor{accent}{RGB}{70,142,216}\n";
        $latexCode .= "\\definecolor{lightaccent}{RGB}{230,240,250}\n";
        $latexCode .= "\\hypersetup{colorlinks=true, linkcolor=accent, urlcolor=accent}\n\n";

        $latexCode .= "\\titleformat{\\section}{\\Large\\bfseries}{}{0em}{\\textcolor{accent}{}} [\\titlerule]\n";
        $latexCode .= "\\titlespacing*{\\section}{0pt}{12pt}{6pt}\n\n";

        $latexCode .= "\\pagestyle{fancy}\n";
        $latexCode .= "\\fancyhf{}\n";
        $latexCode .= "\\renewcommand{\\headrulewidth}{0pt}\n";
        $latexCode .= "\\fancyfoot[C]{\\thepage}\n\n";

        $latexCode .= "\\begin{document}\n\n";

        // En-tête élégante avec couleur d'accent
        $latexCode .= "\\begin{center}\n";
        $latexCode .= "    \\colorbox{lightaccent}{\\parbox{\\dimexpr\\textwidth-2\\fboxsep\\relax}{\n";
        $latexCode .= "        \\begin{center}\n";
        $latexCode .= "            {\\LARGE\\textcolor{accent}{\\textbf{" . $name . " " . $surname . "}}}\\\\[0.3cm]\n";
        $latexCode .= "            {\\large " . $title . "}\\\\[0.2cm]\n";
        $latexCode .= "            \\begin{tabular}{r l}\n";
        $latexCode .= "                \\textcolor{accent}{\\textbf{Téléphone:}} & " . $phone . " \\\\\n";
        $latexCode .= "                \\textcolor{accent}{\\textbf{Email:}} & \\href{mailto:" . $email . "}{" . $email . "}\n";
        $latexCode .= "            \\end{tabular}\n";
        $latexCode .= "        \\end{center}\n";
        $latexCode .= "    }}\n";
        $latexCode .= "\\end{center}\n\n";

        $latexCode .= "\\section*{Profil}\n";
        $latexCode .= "Développeur passionné avec une solide expérience en développement web Full Stack et une expertise particulière en technologies Symfony et React.\n\n";

        $latexCode .= "\\section*{Formation}\n";
        $latexCode .= "\\begin{tabular}{r p{13cm}}\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{2020--2022}} & \\textbf{Master en Génie Logiciel} \\\\\n";
        $latexCode .= "    & ESPRIM, Tunis \\\\\n";
        $latexCode .= "    & Spécialisation en développement web et architectures logicielles modernes \\\\[0.2cm]\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{2017--2020}} & \\textbf{Licence en Informatique} \\\\\n";
        $latexCode .= "    & Université de Tunis, Tunis \\\\\n";
        $latexCode .= "    & Mention très bien, projets en développement web et mobile\n";
        $latexCode .= "\\end{tabular}\n\n";

        $latexCode .= "\\section*{Expériences Professionnelles}\n";
        $latexCode .= "\\begin{tabular}{r p{13cm}}\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{2023--Présent}} & \\textbf{Développeur Web Full Stack} \\\\\n";
        $latexCode .= "    & Société XYZ, Tunis \\\\\n";
        $latexCode .= "    & \\begin{itemize}[leftmargin=*, nosep]\n";
        $latexCode .= "        \\item Développement d'applications web avec Symfony 6 et React 18\n";
        $latexCode .= "        \\item Implémentation d'API REST et GraphQL\n";
        $latexCode .= "        \\item Optimisation des performances et mise en place de CI/CD\n";
        $latexCode .= "      \\end{itemize} \\\\[0.2cm]\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{2021--2023}} & \\textbf{Développeur Junior} \\\\\n";
        $latexCode .= "    & ABC Tech, Tunis \\\\\n";
        $latexCode .= "    & \\begin{itemize}[leftmargin=*, nosep]\n";
        $latexCode .= "        \\item Maintenance et développement de sites web e-commerce\n";
        $latexCode .= "        \\item Migration d'applications vers des architectures modernes\n";
        $latexCode .= "        \\item Participation aux revues de code et à l'amélioration des processus\n";
        $latexCode .= "      \\end{itemize}\n";
        $latexCode .= "\\end{tabular}\n\n";

        $latexCode .= "\\section*{Compétences}\n";
        $latexCode .= "\\begin{tabular}{r p{13cm}}\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{Langages:}} & PHP, JavaScript/TypeScript, HTML5, CSS3, SQL \\\\\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{Frameworks:}} & Symfony, React, Vue.js, Next.js, Bootstrap, Tailwind CSS \\\\\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{Outils:}} & Git, Docker, Kubernetes, CI/CD, VS Code, PHPStorm \\\\\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{Bases de données:}} & MySQL, PostgreSQL, MongoDB, Redis\n";
        $latexCode .= "\\end{tabular}\n\n";

        $latexCode .= "\\section*{Langues}\n";
        $latexCode .= "\\begin{tabular}{r p{13cm}}\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{Arabe:}} & Langue maternelle \\\\\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{Français:}} & Courant (C1) \\\\\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{Anglais:}} & Professionnel (B2)\n";
        $latexCode .= "\\end{tabular}\n\n";

        $latexCode .= "\\section*{Projets personnels}\n";
        $latexCode .= "\\begin{tabular}{r p{13cm}}\n";
        $latexCode .= "    \\textcolor{accent}{\\textbf{EsprimCareer}} & Plateforme web de génération de CV et de gestion de carrière \\\\\n";
        $latexCode .= "    & Technologies utilisées : Symfony, React, LaTeX, Docker \\\\\n";
        $latexCode .= "    & \\textit{Fonctionnalités : Génération de CV professionnels avec support LaTeX, gestion de profils, intégration d'éditeurs avancés}\n";
        $latexCode .= "\\end{tabular}\n\n";

        $latexCode .= "\\vfill\n";
        $latexCode .= "\\begin{center}\n";
        $latexCode .= "    \\textit{Document généré par EsprimCareer - " . (new \DateTime())->format('Y-m-d') . "}\n";
        $latexCode .= "\\end{center}\n\n";

        $latexCode .= "\\end{document}\n";

        return $latexCode;
    }

    /**
     * Méthode pour générer un CV avec ModernCV intégrée directement dans le code
     * (sans dépendre de fichiers templates externes)
     */
    #[Route("/cv-generator/moderncv", name: "app_cv_moderncv")]
    public function generateModernCV(Request $request): Response
    {
        // Track template selection
        $this->trackTemplateSelection($request, 'moderncv');

        if (!$this->latexPdfGenerator) {
            return new Response("Le service LatexPdfGenerator n'est pas configuré correctement.", 500);
        }

        try {
            // Récupération des données du formulaire ou utilisation de données par défaut
            $firstName = $request->request->get('firstName', 'Mohamed');
            $lastName = $request->request->get('lastName', 'Abidi');
            $position = $request->request->get('position', 'Développeur Full Stack');
            $phone = $request->request->get('phone', '+216 xx xxx xxx');
            $email = $request->request->get('email', 'mohamed.abidi@example.com');

            // Génération du code LaTeX directement dans le code
            $latexCode = $this->generateModernCVTemplate($firstName, $lastName, $position, $phone, $email);

            // Convertir le code LaTeX en PDF
            $documentId = uniqid('cv_');
            $pdfPath = $this->latexPdfGenerator->convertLatexToPdf($latexCode, $documentId);

            if (!$pdfPath || !file_exists($pdfPath)) {
                throw new \Exception("Échec de la génération du PDF. Vérifiez le journal des erreurs.");
            }

            // Créer une réponse binaire
            $response = new BinaryFileResponse($pdfPath);
            $response->setContentDisposition(
                ResponseHeaderBag::DISPOSITION_ATTACHMENT,
                $firstName . '-' . $lastName . '-CV-ModernCV.pdf'
            );

            return $response;

        } catch (\Exception $e) {
            $this->logger->error("Error generating ModernCV PDF: {$e->getMessage()}", ['exception' => $e]);

            // Retourner une réponse d'erreur avec plus de détails
            return new Response(
                '<html><body>
                <h1>Erreur lors de la génération du CV ModernCV</h1>
                <p>' . htmlspecialchars($e->getMessage()) . '</p>
                <p><a href="/cv" class="btn btn-primary">Retourner au générateur de CV</a></p>
                <hr>
                <h3>Détails techniques (environnement de développement uniquement)</h3>
                <pre>' . htmlspecialchars($e->getTraceAsString()) . '</pre>
                </body></html>',
                500,
                ['Content-Type' => 'text/html']
            );
        }
    }

    /**
     * Méthode pour prévisualiser le CV avec ModernCV intégré directement dans le code
     */
    #[Route("/cv-generator/moderncv/preview", name: "app_cv_moderncv_preview")]
    public function previewModernCV(Request $request): Response
    {
        // Track template selection
        $this->trackTemplateSelection($request, 'moderncv_preview');

        if (!$this->latexPdfGenerator) {
            return new Response("Le service LatexPdfGenerator n'est pas configuré correctement.", 500);
        }

        try {
            // Récupération des données du formulaire ou utilisation de données par défaut
            $firstName = 'Mohamed';
            $lastName = 'Abidi';
            $position = 'Développeur Full Stack';
            $phone = '+216 xx xxx xxx';
            $email = 'mohamed.abidi@example.com';

            // Génération du code LaTeX directement dans le code
            $latexCode = $this->generateModernCVTemplate($firstName, $lastName, $position, $phone, $email);

            // Convertir le code LaTeX en PDF
            $documentId = uniqid('cv_preview_');
            $pdfPath = $this->latexPdfGenerator->convertLatexToPdf($latexCode, $documentId);

            if (!$pdfPath || !file_exists($pdfPath)) {
                throw new \Exception("Échec de la prévisualisation du PDF. Vérifiez le journal des erreurs.");
            }

            // Obtenir le nom du fichier à partir du chemin
            $filenameParts = explode('/', $pdfPath);
            $filename = end($filenameParts);

            // Génération de l'URL pour visualiser le PDF
            $pdfUrl = $this->generateUrl('app_latex_view_pdf', ['filename' => $filename]);

            return $this->render('Templates/cv/preview.html.twig', [
                'pdf_url' => $pdfUrl,
                'current_time' => new \DateTime('now', new \DateTimeZone('UTC')),
                'username' => 'Mohamed-abidi-95'
            ]);

        } catch (\Exception $e) {
            $this->logger->error("Error previewing ModernCV PDF: {$e->getMessage()}", ['exception' => $e]);

            return $this->render('Templates/cv/error.html.twig', [
                'error' => $e->getMessage(),
                'current_time' => new \DateTime('now', new \DateTimeZone('UTC')),
                'username' => 'Mohamed-abidi-95'
            ]);
        }
    }

    /**
     * Méthode pour générer le template ModernCV directement dans le code PHP
     * Cette méthode remplace l'utilisation du fichier template externe
     */
    private function generateModernCVTemplate(string $name, string $surname, string $title, string $phone, string $email): string
    {
        // Les expériences et autres données peuvent être passées en paramètres supplémentaires au besoin
        $experiences = $this->formatExperiencesForLatexString();
        $education = $this->formatEducationForLatexString();
        $skills = $this->formatSkillsForLatexString();
        $languages = $this->formatLanguagesForLatexString();

        // Utiliser la concaténation de chaînes au lieu de Heredoc
        $latexCode = "\\documentclass[11pt,a4paper]{article}\n";
        $latexCode .= "\\usepackage[utf8]{inputenc}\n";
        $latexCode .= "\\usepackage[T1]{fontenc}\n";
        $latexCode .= "\\usepackage{geometry}\n";
        $latexCode .= "\\usepackage{array}\n";
        $latexCode .= "\\usepackage{xcolor}\n";
        $latexCode .= "\\usepackage{hyperref}\n";
        $latexCode .= "\\usepackage{enumitem}\n";
        $latexCode .= "\\usepackage{titlesec}\n\n";

        $latexCode .= "\\geometry{a4paper, margin=2cm}\n";
        $latexCode .= "\\definecolor{accent}{RGB}{0,100,200}\n";
        $latexCode .= "\\hypersetup{colorlinks=true, linkcolor=accent, urlcolor=accent}\n\n";

        $latexCode .= "\\titleformat{\\section}{\\Large\\bfseries}{}{0em}{\\textcolor{accent}{}}[\\titlerule]\n";
        $latexCode .= "\\titlespacing*{\\section}{0pt}{12pt}{6pt}\n\n";

        $latexCode .= "\\begin{document}\n\n";

        $latexCode .= "\\begin{center}\n";
        $latexCode .= "    {\\huge\\textbf{" . $name . " " . $surname . "}}\\\\[0.5cm]\n";
        $latexCode .= "    {\\large " . $title . "}\\\\[0.3cm]\n";
        $latexCode .= "    \\begin{tabular}{r l}\n";
        $latexCode .= "        Téléphone: & " . $phone . " \\\\\n";
        $latexCode .= "        Email: & \\href{mailto:" . $email . "}{" . $email . "}\n";
        $latexCode .= "    \\end{tabular}\n";
        $latexCode .= "\\end{center}\n\n";

        $latexCode .= "\\section*{Formation}\n" . $education . "\n\n";
        $latexCode .= "\\section*{Expériences Professionnelles}\n" . $experiences . "\n\n";
        $latexCode .= "\\section*{Compétences}\n" . $skills . "\n\n";
        $latexCode .= "\\section*{Langues}\n" . $languages . "\n\n";

        $latexCode .= "\\end{document}\n";

        return $latexCode;
    }

    /**
     * Méthode utilitaire pour formater les expériences en texte LaTeX
     */
    private function formatExperiencesForLatexString(): string
    {
        // Données hardcodées, à remplacer par des données dynamiques au besoin
        $latexCode = "\\begin{tabular}{r p{12cm}}\n";
        $latexCode .= "    \\textbf{2023--Présent} & \\textbf{Développeur Web Full Stack, Société XYZ, Tunis} \\\\\n";
        $latexCode .= "                          & \\begin{itemize}[leftmargin=*]\n";
        $latexCode .= "                             \\item Développement d'applications web avec Symfony et React\n";
        $latexCode .= "                             \\item Intégration de services tiers et APIs\n";
        $latexCode .= "                             \\item Optimisation des performances et refactoring de code\n";
        $latexCode .= "                            \\end{itemize} \\\\[0.2cm]\n";
        $latexCode .= "    \\textbf{2021--2023} & \\textbf{Développeur Junior, ABC Tech, Tunis} \\\\\n";
        $latexCode .= "                          & \\begin{itemize}[leftmargin=*]\n";
        $latexCode .= "                             \\item Maintenance et développement de sites web\n";
        $latexCode .= "                             \\item Mise en place d'outils de déploiement continu\n";
        $latexCode .= "                            \\end{itemize}\n";
        $latexCode .= "\\end{tabular}\n";

        return $latexCode;
    }

    /**
     * Méthode utilitaire pour formater l'éducation en texte LaTeX
     */
    private function formatEducationForLatexString(): string
    {
        // Données hardcodées, à remplacer par des données dynamiques au besoin
        $latexCode = "\\begin{tabular}{r p{12cm}}\n";
        $latexCode .= "    \\textbf{2020--2022} & \\textbf{Master en Génie Logiciel} \\\\\n";
        $latexCode .= "                        & ESPRIM, Tunis \\\\[0.2cm]\n";
        $latexCode .= "    \\textbf{2017--2020} & \\textbf{Licence en Informatique} \\\\\n";
        $latexCode .= "                        & Université de Tunis, Tunis\n";
        $latexCode .= "\\end{tabular}\n";

        return $latexCode;
    }

    /**
     * Méthode utilitaire pour formater les compétences en texte LaTeX
     */
    private function formatSkillsForLatexString(): string
    {
        // Données hardcodées, à remplacer par des données dynamiques au besoin
        $latexCode = "\\begin{tabular}{r p{12cm}}\n";
        $latexCode .= "    \\textbf{Langages:} & PHP, JavaScript, HTML, CSS, SQL \\\\\n";
        $latexCode .= "    \\textbf{Frameworks:} & Symfony, React, Vue.js, Bootstrap \\\\\n";
        $latexCode .= "    \\textbf{Outils:} & Git, Docker, VS Code, PHPStorm \\\\\n";
        $latexCode .= "    \\textbf{Bases de données:} & MySQL, PostgreSQL, MongoDB\n";
        $latexCode .= "\\end{tabular}\n";

        return $latexCode;
    }

    /**
     * Méthode utilitaire pour formater les langues en texte LaTeX
     */
    private function formatLanguagesForLatexString(): string
    {
        // Données hardcodées, à remplacer par des données dynamiques au besoin
        $latexCode = "\\begin{tabular}{r p{12cm}}\n";
        $latexCode .= "    \\textbf{Arabe:} & Langue maternelle \\\\\n";
        $latexCode .= "    \\textbf{Français:} & Courant (C1) \\\\\n";
        $latexCode .= "    \\textbf{Anglais:} & Professionnel (B2)\n";
        $latexCode .= "\\end{tabular}\n";

        return $latexCode;
    }

    /**
     * ANCIENNES méthodes de formatage maintenues pour compatibilité
     * Ces méthodes peuvent être utilisées si vous avez besoin de générer des
     * données dans un format particulier pour d'autres parties de votre application
     */
    private function formatExperiencesForLatex(array $formData): array
    {
        $experiences = [];

        // Récupération des expériences depuis le formulaire ou utilisation de données par défaut
        if (isset($formData['experience']) && is_array($formData['experience'])) {
            foreach ($formData['experience'] as $exp) {
                $period = ($exp['startDate'] ?? '') . '--' . ($exp['endDate'] ?? 'Présent');
                $experiences[] = [
                    'period' => $period,
                    'position' => $exp['position'] ?? '',
                    'company' => $exp['company'] ?? '',
                    'location' => $exp['location'] ?? '',
                    'descriptions' => [$exp['description'] ?? '']
                ];
            }
        } else {
            // Données par défaut
            $experiences = [
                [
                    'period' => '2023--Présent',
                    'position' => 'Développeur Web Full Stack',
                    'company' => 'Société XYZ',
                    'location' => 'Tunis',
                    'descriptions' => ['Développement d\'applications web avec Symfony et React']
                ]
            ];
        }

        return $experiences;
    }

    private function formatEducationForLatex(array $formData): array
    {
        $education = [];

        // Récupération de l'éducation depuis le formulaire ou utilisation de données par défaut
        if (isset($formData['education']) && is_array($formData['education'])) {
            foreach ($formData['education'] as $edu) {
                $period = ($edu['startDate'] ?? '') . '--' . ($edu['endDate'] ?? '');
                $education[] = [
                    'period' => $period,
                    'degree' => $edu['degree'] ?? '',
                    'institution' => $edu['institution'] ?? '',
                    'location' => $edu['location'] ?? ''
                ];
            }
        } else {
            // Données par défaut
            $education = [
                [
                    'period' => '2020--2022',
                    'degree' => 'Master en Génie Logiciel',
                    'institution' => 'ESPRIM',
                    'location' => 'Tunis'
                ]
            ];
        }

        return $education;
    }

    private function formatSkillsForLatex(array $formData): array
    {
        $skills = [];

        // Récupération des compétences depuis le formulaire ou utilisation de données par défaut
        if (isset($formData['skills']) && is_array($formData['skills'])) {
            $skillsList = implode(', ', $formData['skills']);
            $skills[] = [
                'category' => 'Compétences techniques',
                'list' => $skillsList
            ];
        } else {
            // Données par défaut
            $skills = [
                [
                    'category' => 'Langages',
                    'list' => 'PHP, JavaScript, HTML, CSS, SQL'
                ],
                [
                    'category' => 'Frameworks',
                    'list' => 'Symfony, React, Vue.js, Bootstrap'
                ]
            ];
        }

        return $skills;
    }

    private function formatLanguagesForLatex(array $formData): array
    {
        $languages = [];

        // Récupération des langues depuis le formulaire ou utilisation de données par défaut
        if (isset($formData['languages']) && isset($formData['languageLevels']) &&
            is_array($formData['languages']) && is_array($formData['languageLevels'])) {

            foreach ($formData['languages'] as $key => $lang) {
                $level = $formData['languageLevels'][$key] ?? '';
                $languages[] = [
                    'language' => $lang,
                    'level' => $level,
                    'certification' => ''
                ];
            }
        } else {
            // Données par défaut
            $languages = [
                [
                    'language' => 'Arabe',
                    'level' => 'Langue maternelle',
                    'certification' => ''
                ],
                [
                    'language' => 'Français',
                    'level' => 'Courant',
                    'certification' => 'C1'
                ]
            ];
        }

        return $languages;
    }

    /**
     * API endpoint to track template selection via AJAX
     */
    #[Route("/api/track-template", name: "api_track_template", methods: ["POST"])]
    public function apiTrackTemplate(Request $request): Response
    {
        try {
            $data = json_decode($request->getContent(), true);
            $templateName = $data['template'] ?? null;

            if (!$templateName) {
                return $this->json(['success' => false, 'error' => 'Template name is required'], 400);
            }

            // Track the selection
            $this->trackTemplateSelection($request, $templateName);

            return $this->json(['success' => true, 'message' => 'Template selection recorded']);
        } catch (\Exception $e) {
            $this->logger->error("Error tracking template: {$e->getMessage()}", ['exception' => $e]);
            return $this->json(['success' => false, 'error' => 'An error occurred'], 500);
        }
    }

    /**
     * Route for viewing template analytics
     */
    #[Route("/admin/template-analytics", name: "app_template_analytics")]
    public function templateAnalytics(Request $request): Response
    {
        // Redirect to the TemplateAnalyticsController
        return $this->redirectToRoute('app_template_analytics_dashboard');
    }
}
==================================================

Fichier: src\Controller\TemplateAnalyticsController.php
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\src\Controller\TemplateAnalyticsController.php
-----
<?php

namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Doctrine\DBAL\Connection;

class TemplateAnalyticsController extends AbstractController
{
    public function index(Request $request, Connection $connection): Response
    {
        // Get time range from request (default to 7 days)
        $days = $request->query->getInt('days', 7);

        try {
            // Get template statistics
            $statsStmt = $connection->prepare(
                "SELECT template_name, COUNT(*) as count
                FROM template_usage
                WHERE selected_at >= DATE_SUB(CURRENT_DATE(), INTERVAL :days DAY)
                GROUP BY template_name
                ORDER BY count DESC"
            );
            $statsResult = $statsStmt->executeQuery(['days' => $days]);
            $templateStats = $statsResult->fetchAllAssociative();

            // Get daily trend data
            $trendStmt = $connection->prepare(
                "SELECT DATE_FORMAT(selected_at, '%Y-%m-%d') as date, template_name, COUNT(*) as count
                FROM template_usage
                WHERE selected_at >= DATE_SUB(CURRENT_DATE(), INTERVAL :days DAY)
                GROUP BY DATE_FORMAT(selected_at, '%Y-%m-%d'), template_name
                ORDER BY date ASC"
            );
            $trendResult = $trendStmt->executeQuery(['days' => $days]);
            $trendData = $trendResult->fetchAllAssociative();

            // Format data for charts
            $labels = [];
            $datasets = [];

            // Process trend data for Chart.js
            $templateData = [];

            foreach ($trendData as $data) {
                $date = $data['date'];
                $template = $data['template_name'];
                $count = $data['count'];

                if (!in_array($date, $labels)) {
                    $labels[] = $date;
                }

                if (!isset($templateData[$template])) {
                    $templateData[$template] = [];
                }

                $templateData[$template][$date] = $count;
            }

            // Create dataset for each template
            $colors = ['#4F46E5', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#EC4899', '#06B6D4'];
            $i = 0;

            foreach ($templateData as $template => $data) {
                $dataPoints = [];

                foreach ($labels as $date) {
                    $dataPoints[] = $data[$date] ?? 0;
                }

                $datasets[] = [
                    'label' => $template,
                    'data' => $dataPoints,
                    'backgroundColor' => $colors[$i % count($colors)],
                    'borderColor' => $colors[$i % count($colors)],
                    'borderWidth' => 1
                ];

                $i++;
            }

            try {
                // First try with the corrected path
                return $this->render('template_analytics/index.html.twig', [
                    'templateStats' => $templateStats,
                    'chartData' => [
                        'labels' => $labels,
                        'datasets' => $datasets
                    ],
                    'days' => $days
                ]);
            } catch (\Throwable $e) {
                // Fallback to the original path with typo
                return $this->render('tamplate_analytics/index.html.twig', [
                    'templateStats' => $templateStats,
                    'chartData' => [
                        'labels' => $labels,
                        'datasets' => $datasets
                    ],
                    'days' => $days
                ]);
            }
        } catch (\Exception $e) {
            return $this->render('error/analytics.html.twig', [
                'error' => $e->getMessage(),
                'trace' => $e->getTraceAsString()
            ]);
        }
    }
}
==================================================

Fichier: src\Controller\SecurityController.php
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\src\Controller\SecurityController.php
-----
<?php

namespace App\Controller;

use App\Entity\User;
use App\Security\EmailVerifier;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bridge\Twig\Mime\TemplatedEmail;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Mime\Address;
use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface;
use Symfony\Component\Security\Http\Authentication\AuthenticationUtils;

class SecurityController extends AbstractController
{
    private EmailVerifier $emailVerifier;

    public function __construct(EmailVerifier $emailVerifier)
    {
        $this->emailVerifier = $emailVerifier;
    }

    /**
     * @Route("/login", name="app_login")
     */
    public function login(AuthenticationUtils $authenticationUtils): Response
    {
        if ($this->getUser()) {
            return $this->redirectToRoute('app_welcome');
        }

        // Get the login error if there is one
        $error = $authenticationUtils->getLastAuthenticationError();

        // Last username entered by the user
        $lastUsername = $authenticationUtils->getLastUsername();

        return $this->render('security/login.html.twig', [
            'last_username' => $lastUsername,
            'error' => $error,
            'current_time' => new \DateTime('2025-05-08 00:12:00', new \DateTimeZone('UTC')),
            'username' => 'Mohamed-abidi-95'
        ]);
    }

    /**
     * @Route("/register", name="app_register")
     */
    public function register(Request $request, UserPasswordHasherInterface $passwordHasher, EntityManagerInterface $entityManager): Response
    {
        if ($this->getUser()) {
            return $this->redirectToRoute('app_welcome');
        }

        if ($request->isMethod('POST')) {
            // Handle direct form submission without using Symfony Form
            $email = $request->request->get('email');
            $firstName = $request->request->get('firstName');
            $lastName = $request->request->get('lastName');
            $password = $request->request->get('password');
            $confirmPassword = $request->request->get('confirmPassword');
            $termsAgreed = $request->request->has('termsAgree');

            // Basic validation
            $errors = [];

            if (!$email || !filter_var($email, FILTER_VALIDATE_EMAIL)) {
                $errors[] = 'Veuillez fournir une adresse email valide.';
            }

            if (!$firstName) {
                $errors[] = 'Le prénom est requis.';
            }

            if (!$lastName) {
                $errors[] = 'Le nom est requis.';
            }

            if (!$password || strlen($password) < 8) {
                $errors[] = 'Le mot de passe doit comporter au moins 8 caractères.';
            }

            if ($password !== $confirmPassword) {
                $errors[] = 'Les mots de passe ne correspondent pas.';
            }

            if (!$termsAgreed) {
                $errors[] = 'Vous devez accepter les conditions d\'utilisation.';
            }

            // Check if user already exists
            $existingUser = $entityManager->getRepository(User::class)->findOneBy(['email' => $email]);
            if ($existingUser) {
                $errors[] = 'Un compte avec cette adresse email existe déjà.';
            }

            if (empty($errors)) {
                // Create and save the user
                $user = new User();
                $user->setEmail($email);
                $user->setFirstName($firstName);
                $user->setLastName($lastName);
                $user->setPassword($passwordHasher->hashPassword($user, $password));
                $user->setIsVerified(false);

                $entityManager->persist($user);
                $entityManager->flush();

                // Send verification email (if needed)
                $this->emailVerifier->sendEmailConfirmation(
                    'app_verify_email',
                    $user,
                    (new TemplatedEmail())
                        ->from(new Address('noreply@espritcvgenerator.com', 'ESPRIT CV Generator'))
                        ->to($user->getEmail())
                        ->subject('Merci de confirmer votre email')
                        ->htmlTemplate('registration/confirmation_email.html.twig')
                        ->context([
                            'user' => $user,
                            'current_time' => new \DateTime('2025-05-08 00:12:00'),
                            'username' => 'Mohamed-abidi-95'
                        ])
                );

                // Redirect to login with success message
                $this->addFlash('success', 'Votre compte a été créé. Veuillez vérifier votre email pour l\'activer.');
                return $this->redirectToRoute('app_login');
            }

            // If we got here, there are errors
            return $this->render('security/register.html.twig', [
                'error' => implode('<br>', $errors),
                'current_time' => new \DateTime('2025-05-08 00:12:00'),
                'username' => 'Mohamed-abidi-95'
            ]);
        }

        // Display registration form
        return $this->render('security/register.html.twig', [
            'current_time' => new \DateTime('2025-05-08 00:12:00'),
            'username' => 'Mohamed-abidi-95'
        ]);
    }

    /**
     * @Route("/logout", name="app_logout")
     */
    public function logout(): void
    {
        // This method will be intercepted by the logout key on your firewall
        throw new \LogicException('This method can be blank - it will be intercepted by the logout key on your firewall.');
    }

    /**
     * @Route("/forgot-password", name="app_forgot_password")
     */
    public function forgotPassword(): Response
    {
        return $this->render('security/forgot_password.html.twig', [
            'current_time' => new \DateTime('2025-05-08 00:12:00'),
            'username' => 'Mohamed-abidi-95'
        ]);
    }

    /**
     * @Route("/forgot-password-request", name="app_forgot_password_request", methods={"POST"})
     */
    public function forgotPasswordRequest(Request $request, EntityManagerInterface $entityManager): Response
    {
        $email = $request->request->get('email');

        // Check if user exists
        $user = $entityManager->getRepository(User::class)->findOneBy(['email' => $email]);

        if (!$user) {
            return $this->render('security/forgot_password.html.twig', [
                'error' => 'Aucun compte n\'a été trouvé avec cette adresse email.',
                'current_time' => new \DateTime('2025-05-08 00:12:00'),
                'username' => 'Mohamed-abidi-95'
            ]);
        }

        // Generate reset token (in a real implementation)
        // $resetToken = bin2hex(random_bytes(16));
        // $user->setResetToken($resetToken);
        // $user->setResetTokenExpiry(new \DateTime('+1 hour'));
        // $entityManager->flush();

        // Send email with reset link (in a real implementation)
        // $this->sendResetEmail($user, $resetToken);

        // For the demo, just show success message
        return $this->render('security/forgot_password.html.twig', [
            'success' => 'Un email avec les instructions pour réinitialiser votre mot de passe a été envoyé à votre adresse email.',
            'current_time' => new \DateTime('2025-05-08 00:12:00'),
            'username' => 'Mohamed-abidi-95'
        ]);
    }

    /**
     * @Route("/verify/email", name="app_verify_email")
     */
    public function verifyUserEmail(Request $request): Response
    {
        // For demo purposes, just show success
        $this->addFlash('success', 'Votre adresse email a été vérifiée.');

        return $this->redirectToRoute('app_login');
    }
}
==================================================

Fichier: src\Controller\TemplateController.php
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\src\Controller\TemplateController.php
-----
<?php

namespace App\Controller;

use App\Entity\TemplateUsage;
use App\Repository\TemplateUsageRepository;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

class TemplateController extends AbstractController
{
    public function trackTemplate(Request $request, EntityManagerInterface $entityManager): Response
    {
        // Check if it's a POST request
        if ($request->getMethod() !== 'POST') {
            return $this->json(['success' => false, 'error' => 'Method not allowed'], 405);
        }

        try {
            // Parse request data
            $data = json_decode($request->getContent(), true);
            $templateName = $data['template'] ?? null;

            if (!$templateName) {
                return $this->json(['success' => false, 'error' => 'Template name is required'], 400);
            }

            // Create new template usage record
            $templateUsage = new TemplateUsage();
            $templateUsage->setTemplateName($templateName);
            $templateUsage->setSelectedAt(new \DateTime());

            // Set user if logged in
            if ($this->getUser()) {
                // Just store the user ID instead of a reference to the User entity
                $templateUsage->setUserId($this->getUser()->getId());
            } else {
                // For anonymous users, track by session
                $sessionId = $request->getSession()->getId();
                $templateUsage->setSessionId($sessionId);
            }

            // Save to database
            $entityManager->persist($templateUsage);
            $entityManager->flush();

            return $this->json(['success' => true, 'message' => 'Template selection recorded']);
        } catch (\Exception $e) {
            return $this->json([
                'success' => false,
                'error' => 'An error occurred: ' . $e->getMessage(),
                'trace' => $e->getTraceAsString() // For debugging
            ], 500);
        }
    }

    public function templateStats(Request $request, TemplateUsageRepository $repository): Response
    {
        try {
            $days = $request->query->getInt('days', 7);

            // Simple implementation if repository methods don't exist yet
            $conn = $repository->getEntityManager()->getConnection();

            // Get top templates
            $topTemplatesStmt = $conn->prepare(
                "SELECT template_name, COUNT(*) as count
                FROM template_usage
                WHERE selected_at >= DATE_SUB(CURRENT_DATE(), INTERVAL :days DAY)
                GROUP BY template_name
                ORDER BY count DESC
                LIMIT 5"
            );
            $topTemplatesResult = $topTemplatesStmt->executeQuery(['days' => $days]);
            $topTemplates = $topTemplatesResult->fetchAllAssociative();

            // Get daily trend
            $trendStmt = $conn->prepare(
                "SELECT DATE(selected_at) as date, template_name, COUNT(*) as count
                FROM template_usage
                WHERE selected_at >= DATE_SUB(CURRENT_DATE(), INTERVAL :days DAY)
                GROUP BY DATE(selected_at), template_name
                ORDER BY date ASC"
            );
            $trendResult = $trendStmt->executeQuery(['days' => $days]);
            $recentTrend = $trendResult->fetchAllAssociative();

            return $this->json([
                'top_templates' => $topTemplates,
                'recent_trend' => $recentTrend
            ]);
        } catch (\Exception $e) {
            return $this->json([
                'success' => false,
                'error' => 'An error occurred: ' . $e->getMessage(),
                'trace' => $e->getTraceAsString() // For debugging
            ], 500);
        }
    }
}
==================================================

Fichier: src\Controller\TestController.php
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\src\Controller\TestController.php
-----
<?php
// src/Controller/TestController.php
namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

class TestController extends AbstractController
{
    /**
     * @Route("/test", name="app_test")
     */
    public function index(): Response
    {
        return $this->render('test/index.html.twig');
    }

    /**
     * @Route("/test/components", name="app_test_components")
     */
    public function components(): Response
    {
        return $this->render('test/components.html.twig');
    }

    /**
     * Template Tracker Test Page
     *
     * @Route("/test/template-tracker", name="test_template_tracker")
     */
    public function templateTrackerTest(): Response
    {
        return $this->render('Templates/test/template_tracker.html.twig');
    }
}
==================================================

Fichier: src\Entity\TemplateUsage.php
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\src\Entity\TemplateUsage.php
-----
<?php

namespace App\Entity;

use App\Repository\TemplateUsageRepository;
use Doctrine\ORM\Mapping as ORM;

#[ORM\Entity(repositoryClass: TemplateUsageRepository::class)]
class TemplateUsage
{
    #[ORM\Id]
    #[ORM\GeneratedValue]
    #[ORM\Column(type: 'integer')]
    private ?int $id = null;

    #[ORM\Column(type: 'string', length: 255)]
    private ?string $templateName = null;

    #[ORM\Column(type: 'datetime')]
    private ?\DateTimeInterface $selectedAt = null;

    #[ORM\Column(type: 'string', length: 255, nullable: true)]
    private ?string $sessionId = null;

    #[ORM\ManyToOne(targetEntity: User::class)]
    #[ORM\JoinColumn(name: "user_id", referencedColumnName: "id", nullable: true)]
    private ?User $user = null;

    public function getId(): ?int
    {
        return $this->id;
    }

    public function getTemplateName(): ?string
    {
        return $this->templateName;
    }

    public function setTemplateName(string $templateName): self
    {
        $this->templateName = $templateName;
        return $this;
    }

    public function getSelectedAt(): ?\DateTimeInterface
    {
        return $this->selectedAt;
    }

    public function setSelectedAt(\DateTimeInterface $selectedAt): self
    {
        $this->selectedAt = $selectedAt;
        return $this;
    }

    public function getSessionId(): ?string
    {
        return $this->sessionId;
    }

    public function setSessionId(?string $sessionId): self
    {
        $this->sessionId = $sessionId;
        return $this;
    }

    public function getUser(): ?User
    {
        return $this->user;
    }

    public function setUser(?User $user): self
    {
        $this->user = $user;
        return $this;
    }
}
==================================================

Fichier: src\Entity\User.php
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\src\Entity\User.php
-----
<?php

namespace App\Entity;

use App\Repository\UserRepository;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface;
use Symfony\Component\Security\Core\User\UserInterface;

#[ORM\Entity(repositoryClass: UserRepository::class)]
#[ORM\Table(name: '`user`')]
class User implements UserInterface, PasswordAuthenticatedUserInterface
{
    #[ORM\Id]
    #[ORM\GeneratedValue]
    #[ORM\Column]
    private ?int $id = null;

    #[ORM\Column(length: 180, unique: true)]
    private ?string $email = null;

    #[ORM\Column]
    private array $roles = [];

    /**
     * @var string The hashed password
     */
    #[ORM\Column]
    private ?string $password = null;

    #[ORM\Column(length: 255, nullable: true)]
    private ?string $firstName = null;

    #[ORM\Column(length: 255, nullable: true)]
    private ?string $lastName = null;

    #[ORM\Column(type: 'datetime', nullable: true)]
    private ?\DateTimeInterface $lastLogin = null;

    #[ORM\Column(type: 'boolean')]
    private bool $isVerified = false;

    public function getId(): ?int
    {
        return $this->id;
    }

    public function getEmail(): ?string
    {
        return $this->email;
    }

    public function setEmail(string $email): self
    {
        $this->email = $email;

        return $this;
    }

    /**
     * A visual identifier that represents this user.
     *
     * @see UserInterface
     */
    public function getUserIdentifier(): string
    {
        return (string) $this->email;
    }

    /**
     * @see UserInterface
     */
    public function getRoles(): array
    {
        $roles = $this->roles;
        // guarantee every user at least has ROLE_USER
        $roles[] = 'ROLE_USER';

        return array_unique($roles);
    }

    public function setRoles(array $roles): self
    {
        $this->roles = $roles;

        return $this;
    }

    /**
     * @see PasswordAuthenticatedUserInterface
     */
    public function getPassword(): string
    {
        return $this->password;
    }

    public function setPassword(string $password): self
    {
        $this->password = $password;

        return $this;
    }

    /**
     * @see UserInterface
     */
    public function eraseCredentials(): void
    {
        // If you store any temporary, sensitive data on the user, clear it here
        // $this->plainPassword = null;
    }

    public function getFirstName(): ?string
    {
        return $this->firstName;
    }

    public function setFirstName(?string $firstName): self
    {
        $this->firstName = $firstName;

        return $this;
    }

    public function getLastName(): ?string
    {
        return $this->lastName;
    }

    public function setLastName(?string $lastName): self
    {
        $this->lastName = $lastName;

        return $this;
    }

    public function getLastLogin(): ?\DateTimeInterface
    {
        return $this->lastLogin;
    }

    public function setLastLogin(?\DateTimeInterface $lastLogin): self
    {
        $this->lastLogin = $lastLogin;

        return $this;
    }

    public function isVerified(): bool
    {
        return $this->isVerified;
    }

    public function setIsVerified(bool $isVerified): self
    {
        $this->isVerified = $isVerified;

        return $this;
    }

    public function getFullName(): string
    {
        return $this->firstName . ' ' . $this->lastName;
    }
}
==================================================

Fichier: src\EventListener\LoginListener.php
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\src\EventListener\LoginListener.php
-----
<?php

namespace App\EventListener;

use App\Entity\User;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Component\Security\Http\Event\InteractiveLoginEvent;

class LoginListener
{
    private $entityManager;

    public function __construct(EntityManagerInterface $entityManager)
    {
        $this->entityManager = $entityManager;
    }

    public function onSecurityInteractiveLogin(InteractiveLoginEvent $event): void
    {
        $user = $event->getAuthenticationToken()->getUser();

        if ($user instanceof User) {
            // Update last login date
            $user->setLastLogin(new \DateTime('now', new \DateTimeZone('UTC')));

            // Persist to database
            $this->entityManager->persist($user);
            $this->entityManager->flush();
        }
    }
}
==================================================

Fichier: src\Form\RegistrationFormType.php
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\src\Form\RegistrationFormType.php
-----
<?php

namespace App\Form;

use App\Entity\User;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Component\Form\Extension\Core\Type\EmailType;
use Symfony\Component\Form\Extension\Core\Type\PasswordType;
use Symfony\Component\Form\Extension\Core\Type\RepeatedType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Validator\Constraints\IsTrue;
use Symfony\Component\Validator\Constraints\Length;
use Symfony\Component\Validator\Constraints\NotBlank;

class RegistrationFormType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder
            ->add('firstName', TextType::class, [
                'label' => 'Prénom',
                'attr' => ['placeholder' => 'Prénom'],
                'constraints' => [
                    new NotBlank([
                        'message' => 'Veuillez entrer votre prénom',
                    ]),
                ],
            ])
            ->add('lastName', TextType::class, [
                'label' => 'Nom',
                'attr' => ['placeholder' => 'Nom'],
                'constraints' => [
                    new NotBlank([
                        'message' => 'Veuillez entrer votre nom',
                    ]),
                ],
            ])
            ->add('email', EmailType::class, [
                'label' => 'Email',
                'attr' => ['placeholder' => 'nom@exemple.com'],
                'constraints' => [
                    new NotBlank([
                        'message' => 'Veuillez entrer votre adresse email',
                    ]),
                ],
            ])
            ->add('plainPassword', RepeatedType::class, [
                'type' => PasswordType::class,
                'mapped' => false,
                'first_options' => [
                    'label' => 'Mot de passe',
                    'attr' => ['placeholder' => 'Mot de passe'],
                    'constraints' => [
                        new NotBlank([
                            'message' => 'Veuillez entrer un mot de passe',
                        ]),
                        new Length([
                            'min' => 8,
                            'minMessage' => 'Votre mot de passe doit comporter au moins {{ limit }} caractères',
                            'max' => 4096,
                        ]),
                    ],
                ],
                'second_options' => [
                    'label' => 'Confirmer le mot de passe',
                    'attr' => ['placeholder' => 'Répétez votre mot de passe'],
                ],
                'invalid_message' => 'Les mots de passe ne correspondent pas.',
            ])
            ->add('agreeTerms', CheckboxType::class, [
                'mapped' => false,
                'label' => 'J\'accepte les conditions d\'utilisation',
                'constraints' => [
                    new IsTrue([
                        'message' => 'Vous devez accepter nos conditions d\'utilisation.',
                    ]),
                ],
            ])
        ;
    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => User::class,
        ]);
    }
}
==================================================

Fichier: src\Repository\TemplateUsageRepository.php
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\src\Repository\TemplateUsageRepository.php
-----
<?php

namespace App\Repository;

use App\Entity\TemplateUsage;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Persistence\ManagerRegistry;

/**
 * @extends ServiceEntityRepository<TemplateUsage>
 */
class TemplateUsageRepository extends ServiceEntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, TemplateUsage::class);
    }

    /**
     * Get template usage statistics for the last n days
     */
    public function getTemplateStatistics(int $days = 7)
    {
        $date = new \DateTime();
        $date->modify("-{$days} day");

        $qb = $this->createQueryBuilder('t')
            ->select('t.templateName, COUNT(t.id) as count')
            ->where('t.selectedAt >= :date')
            ->setParameter('date', $date)
            ->groupBy('t.templateName')
            ->orderBy('count', 'DESC');

        return $qb->getQuery()->getResult();
    }

    /**
     * Get daily trend for all templates or a specific template
     */
    public function getDailyTrend(int $days = 7, ?string $templateName = null)
    {
        $date = new \DateTime();
        $date->modify("-{$days} day");

        $qb = $this->createQueryBuilder('t')
            ->select('DATE(t.selectedAt) as date, t.templateName, COUNT(t.id) as count')
            ->where('t.selectedAt >= :date')
            ->setParameter('date', $date)
            ->groupBy('date, t.templateName')
            ->orderBy('date', 'ASC');

        if ($templateName) {
            $qb->andWhere('t.templateName = :templateName')
                ->setParameter('templateName', $templateName);
        }

        return $qb->getQuery()->getResult();
    }

    /**
     * Get most popular templates overall
     */
    public function getTopTemplates(int $limit = 5)
    {
        return $this->createQueryBuilder('t')
            ->select('t.templateName, COUNT(t.id) as count')
            ->groupBy('t.templateName')
            ->orderBy('count', 'DESC')
            ->setMaxResults($limit)
            ->getQuery()
            ->getResult();
    }
}
==================================================

Fichier: src\Repository\UserRepository.php
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\src\Repository\UserRepository.php
-----
<?php

namespace App\Repository;

use App\Entity\User;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Persistence\ManagerRegistry;
use Symfony\Component\Security\Core\Exception\UnsupportedUserException;
use Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface;
use Symfony\Component\Security\Core\User\PasswordUpgraderInterface;

/**
 * @extends ServiceEntityRepository<User>
 *
 * @method User|null find($id, $lockMode = null, $lockVersion = null)
 * @method User|null findOneBy(array $criteria, array $orderBy = null)
 * @method User[]    findAll()
 * @method User[]    findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
 */
class UserRepository extends ServiceEntityRepository implements PasswordUpgraderInterface
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, User::class);
    }

    public function save(User $entity, bool $flush = false): void
    {
        $this->getEntityManager()->persist($entity);

        if ($flush) {
            $this->getEntityManager()->flush();
        }
    }

    public function remove(User $entity, bool $flush = false): void
    {
        $this->getEntityManager()->remove($entity);

        if ($flush) {
            $this->getEntityManager()->flush();
        }
    }

    /**
     * Used to upgrade (rehash) the user's password automatically over time.
     */
    public function upgradePassword(PasswordAuthenticatedUserInterface $user, string $newHashedPassword): void
    {
        if (!$user instanceof User) {
            throw new UnsupportedUserException(sprintf('Instances of "%s" are not supported.', \get_class($user)));
        }

        $user->setPassword($newHashedPassword);

        $this->save($user, true);
    }
}
==================================================

Fichier: src\Security\EmailVerifier.php
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\src\Security\EmailVerifier.php
-----
<?php

namespace App\Security;  // Make sure this is correctly capitalized

use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bridge\Twig\Mime\TemplatedEmail;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Mailer\MailerInterface;
use Symfony\Component\Security\Core\User\UserInterface;

class EmailVerifier
{
    private $mailer;
    private $entityManager;

    public function __construct(MailerInterface $mailer, EntityManagerInterface $entityManager)
    {
        $this->mailer = $mailer;
        $this->entityManager = $entityManager;
    }

    public function sendEmailConfirmation(string $verifyEmailRouteName, UserInterface $user, TemplatedEmail $email): void
    {
        // In a real implementation, generate a signed URL with a library like SymfonyCasts/VerifyEmailBundle
        // For this demo, we'll just simulate sending the email
        try {
            // For demo purposes, we'll skip actually sending the email
            // $this->mailer->send($email);

            // Log the action instead
            $logMessage = sprintf(
                '[%s] Would send email to %s with subject "%s"',
                (new \DateTime('2025-05-08 00:32:28'))->format('Y-m-d H:i:s'),
                $user->getEmail(),
                $email->getSubject()
            );

            error_log($logMessage);
        } catch (\Exception $e) {
            error_log('Error processing email: ' . $e->getMessage());
        }
    }

    /**
     * Simple email verification handler
     */
    public function handleEmailConfirmation(Request $request, UserInterface $user): void
    {
        // Mark user as verified
        if (method_exists($user, 'setIsVerified')) {
            $user->setIsVerified(true);
            $this->entityManager->persist($user);
            $this->entityManager->flush();
        }
    }
}
==================================================

Fichier: src\DashboardController.php
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\src\DashboardController.php
-----
<?php

namespace App\Controller;

use App\Repository\TemplateUsageRepository;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

class DashboardController extends AbstractController
{
    /**
     * @Route("/admin/dashboard", name="admin_dashboard")
     */
    public function index(Request $request, TemplateUsageRepository $templateUsageRepo): Response
    {
        // Get time range from request (default to 7 days)
        $days = $request->query->getInt('days', 7);

        // Get template statistics
        $templateStats = $templateUsageRepo->getTemplateStatistics($days);

        // Get daily trend data
        $trendData = $templateUsageRepo->getDailyTrend($days);

        // Format data for charts
        $labels = [];
        $datasets = [];

        // Process trend data for Chart.js
        $templateData = [];

        foreach ($trendData as $data) {
            $date = $data['date'];
            $template = $data['templateName'];
            $count = $data['count'];

            if (!in_array($date, $labels)) {
                $labels[] = $date;
            }

            if (!isset($templateData[$template])) {
                $templateData[$template] = [];
            }

            $templateData[$template][$date] = $count;
        }

        // Create dataset for each template
        $colors = ['#4F46E5', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#EC4899', '#06B6D4'];
        $i = 0;

        foreach ($templateData as $template => $data) {
            $dataPoints = [];

            foreach ($labels as $date) {
                $dataPoints[] = $data[$date] ?? 0;
            }

            $datasets[] = [
                'label' => $template,
                'data' => $dataPoints,
                'backgroundColor' => $colors[$i % count($colors)],
                'borderColor' => $colors[$i % count($colors)],
                'borderWidth' => 1
            ];

            $i++;
        }

        return $this->render('dashboard/index.html.twig', [
            'templateStats' => $templateStats,
            'chartData' => [
                'labels' => $labels,
                'datasets' => $datasets
            ],
            'days' => $days
        ]);
    }

    /**
     * @Route("/admin/stats/api", name="admin_stats_api")
     */
    public function statsApi(Request $request, TemplateUsageRepository $templateUsageRepo): Response
    {
        // Get time range from request (default to 7 days)
        $days = $request->query->getInt('days', 7);

        // Get template statistics
        $templateStats = $templateUsageRepo->getTemplateStatistics($days);

        // Get daily trend data
        $trendData = $templateUsageRepo->getDailyTrend($days);

        return $this->json([
            'templateStats' => $templateStats,
            'trendData' => $trendData
        ]);
    }
}
==================================================

Fichier: Templates\cv_generator\welcome.html.twig
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\cv_generator\welcome.html.twig
-----
{% extends 'base.html.twig' %}

{% block title %}ESPRIT CV Generator | Accueil{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Poppins:wght@500;600;700;800&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    {# Base & Core Styles #}
    <link rel="stylesheet" href="{{ asset('css/variables.css') }}">
    <link rel="stylesheet" href="{{ asset('css/base.css') }}">
    <link rel="stylesheet" href="{{ asset('css/typography.css') }}">
    <link rel="stylesheet" href="{{ asset('css/animations.css') }}">
    <link rel="stylesheet" href="{{ asset('css/responsive.css') }}">

    {# Section-specific Styles #}
    <link rel="stylesheet" href="{{ asset('css/hero.css') }}">
    <link rel="stylesheet" href="{{ asset('css/features.css') }}">
    <link rel="stylesheet" href="{{ asset('css/process.css') }}">
    <link rel="stylesheet" href="{{ asset('css/testimonials.css') }}">
    <link rel="stylesheet" href="{{ asset('css/faq.css') }}">
    <link rel="stylesheet" href="{{ asset('css/statistics.css') }}">
    <link rel="stylesheet" href="{{ asset('css/logo-marquee.css') }}">
    <link rel="stylesheet" href="{{ asset('css/cta.css') }}">
    <link rel="stylesheet" href="{{ asset('css/section_editor.css') }}">
    <link rel="stylesheet" href="{{ asset('css/cv-examples-enhancements.css') }}">

    {# Legacy/Additional Styles #}
    <!-- <link rel="stylesheet" href="{{ asset('css/template_carousel.css') }}"> -->

    <link rel="stylesheet" href="{{ asset('css/template-selection.css') }}">
    <!-- <link rel="stylesheet" href="{{ asset('css/welcome.css') }}"> -->
    <link rel="stylesheet" href="{{ asset('css/template_carousel.css') }}">
    <link rel="stylesheet" href="{{ asset('css/cv-examples-carousel.css') }}">

{% endblock %}

{% block body %}
    <div class="welcome-container">
    <!-- Hero Section -->
    <!-- Hero Section Optimisée -->
    <!-- Hero Section avec composant d'exemples de CV -->
    <section class="custom-hero-section">
        <!-- Formes géométriques animées -->
        <div class="hero-shape hero-shape-1"></div>
        <div class="hero-shape hero-shape-2"></div>
        <div class="hero-shape hero-shape-3"></div>

        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-6 hero-content">
                    <!-- Badge animé -->
                    <div class="hero-badge">
                        <span class="badge-pulse"></span>
                        <span class="badge-text">CV optimisés pour les recruteurs</span>
                    </div>

                    <h1 class="hero-title">Créez un CV professionnel avec <span class="hero-accent">ESPRIT</span> CV Generator</h1>
                    <p class="hero-subtitle">Générez un CV personnalisé en quelques minutes. Choisissez parmi nos templates professionnels et boostez vos chances de décrocher le job de vos rêves!</p>

                    <!-- Statistiques rapides -->
                    <div class="hero-stats">
                        <div class="hero-stat-item">
                            <div class="hero-stat-number">12K+</div>
                            <div class="hero-stat-label">CV générés</div>
                        </div>
                        <div class="hero-stat-item">
                            <div class="hero-stat-number">85%</div>
                            <div class="hero-stat-label">Taux d'entretiens</div>
                        </div>
                        <div class="hero-stat-item">
                            <div class="hero-stat-number">4.9</div>
                            <div class="hero-stat-label">Note moyenne</div>
                        </div>
                    </div>

                    <div class="hero-buttons">
                        <a href="{{ path('app_cv_generator') }}" class="btn btn-hero-primary">
                            <i class="fas fa-file-alt me-2"></i>Créer mon CV
                        </a>
                        <a href="#templates" class="btn btn-hero-secondary">
                            <i class="fas fa-palette me-2"></i>Voir les templates
                        </a>
                    </div>
                </div>

                <!-- Composant de prévisualisation de CV compact -->
                <div class="col-lg-6">
                    <div class="cv-example-showcase">
                        <div class="cv-example-container">
                            <!-- Les images de CV qui défilent -->
                            <div class="cv-examples-slider">
                                <div class="cv-example-slide active">
                                    <img src="{{ asset('images/cvs/ismail.png') }}" alt="CV Template Tech" class="cv-example-image">
                                    <div class="cv-example-label">Template Tech</div>
                                </div>
                                <div class="cv-example-slide">
                                    <img src="{{ asset('images/cvs/executive.jpg') }}" alt="CV Template Executive" class="cv-example-image">
                                    <div class="cv-example-label">ESPRIT Original</div>
                                </div>
                                <div class="cv-example-slide">
                                    <img src="{{ asset('images/cvs/6.png') }}" alt="CV Template Creative" class="cv-example-image">
                                    <div class="cv-example-label">Template Creative</div>
                                </div>
                            </div>

                            <!-- Points de navigation -->
                            <div class="cv-examples-navigation">
                                <span class="cv-nav-dot active" data-slide="0"></span>
                                <span class="cv-nav-dot" data-slide="1"></span>
                                <span class="cv-nav-dot" data-slide="2"></span>
                            </div>
                        </div>

                        <!-- Éléments décoratifs -->
                        <div class="decoration-element decoration-1">
                            <i class="fas fa-check-circle"></i>
                        </div>
                        <div class="decoration-element decoration-2">
                            <i class="fas fa-star"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Current Date and Time -->

    </section>
    <section id="templates" class="template-selection-section">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Choisissez Votre Template</h2>
                <p class="section-subtitle">Sélectionnez parmi nos designs professionnels adaptés à différents domaines</p>
            </div>

            <!-- Nouveau carousel moderne -->
            <div class="modern-carousel-container animate-on-scroll">
                <!-- Contrôles principaux -->
                <div class="modern-carousel-controls">
                    <button class="modern-carousel-arrow prev" id="carousel-prev" aria-label="Template précédent">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <div class="carousel-counter">
                        <span id="current-template">1</span><span>/</span><span id="total-templates">7</span>
                    </div>
                    <button class="modern-carousel-arrow next" id="carousel-next" aria-label="Template suivant">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>

                <!-- Carousel principal -->
                <div class="modern-carousel-wrapper" id="template-carousel">
                    <!-- Template 1 - Moderne/Professionnel -->
                    <div class="modern-carousel-item active" data-carousel-item="0" data-template="template1">
                        <div class="modern-template-card">
                            <div class="template-preview-container">
                                <img src="{{ asset('images/cvs/executive.jpg') }}" alt="Template Tech Expert" class="template-preview" onerror="this.src='https://placeholder.pics/svg/400x600/DEDEDE/555555/Template%201'">
                                <div class="template-overlay">
                                    <span class="preview-badge"><i class="fas fa-eye"></i> Aperçu</span>
                                </div>
                            </div>
                            <div class="modern-template-details">
                                <div class="template-header">
                                    <h3 class="template-title">ESPRIT Original</h3>
                                    <div class="template-rating">
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star-half-alt"></i>
                                        <span class="rating-count">(124)</span>
                                    </div>
                                </div>
                                <p class="template-description">Un design moderne parfait pour les profils d'ingénierie et tech</p>
                                <div class="template-categories">
                                    <span class="category-tag"><i class="fas fa-code"></i> Tech</span>
                                    <span class="category-tag"><i class="fas fa-cog"></i> Ingénierie</span>
                                    <span class="category-tag"><i class="fas fa-laptop-code"></i> IT</span>
                                </div>
                                <div class="template-actions">
                                    <button class="btn-template-preview" data-template="template1" data-preview="true">
                                        <i class="fas fa-search-plus"></i> Voir en détail
                                    </button>
                                    <button class="btn-template-select select-template-btn" data-template="template1">
                                        <i class="fas fa-check-circle"></i> Sélectionner
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Template 2 - Classique/Professionnel -->
                    <div class="modern-carousel-item" data-carousel-item="1" data-template="template2">
                        <div class="modern-template-card">
                            <div class="template-preview-container">
                                <img src="{{ asset('images/cvs/2.png') }}" alt="Template Executive" class="template-preview" onerror="this.src='https://placeholder.pics/svg/400x600/DEDEDE/555555/Template%202'">
                                <div class="template-overlay">
                                    <span class="preview-badge"><i class="fas fa-eye"></i> Aperçu</span>
                                </div>
                            </div>
                            <div class="modern-template-details">
                                <div class="template-header">
                                    <h3 class="template-title">Executive</h3>
                                    <div class="template-rating">
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <i class="fas fa-star"></i>
                                        <span class="rating-count">(98)</span>
                                    </div>
                                </div>
                                <p class="template-description">Design classique et élégant parfait pour les profils business et management</p>
                                <div class="template-categories">
                                    <span class="category-tag"><i class="fas fa-briefcase"></i> Business</span>
                                    <span class="category-tag"><i class="fas fa-chart-line"></i> Management</span>
                                    <span class="category-tag"><i class="fas fa-user-tie"></i> Exécutif</span>
                                </div>
                                <div class="template-actions">
                                    <button class="btn-template-preview" data-template="template2" data-preview="true">
                                        <i class="fas fa-search-plus"></i> Voir en détail
                                    </button>
                                    <button class="btn-template-select select-template-btn" data-template="template2">
                                        <i class="fas fa-check-circle"></i> Sélectionner
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Template 3-7 - Similaires aux modèles précédents ... -->
                    <!-- Templates 3 à 7 conservés tels quels -->

                </div>

                <!-- Thumbnails navigation -->
                <div class="template-thumbnails" role="tablist">
                    <button class="template-thumbnail active" data-carousel-goto="0" aria-label="Template 1" aria-controls="template-carousel" role="tab" aria-selected="true">
                        <img src="{{ asset('images/cvs/1.png') }}" alt="Tech Expert" class="thumbnail-img" onerror="this.src='https://placeholder.pics/svg/100x150/DEDEDE/555555/1'">
                    </button>
                    <button class="template-thumbnail" data-carousel-goto="1" aria-label="Template 2" aria-controls="template-carousel" role="tab" aria-selected="false">
                        <img src="{{ asset('images/cvs/2.png') }}" alt="Executive" class="thumbnail-img" onerror="this.src='https://placeholder.pics/svg/100x150/DEDEDE/555555/2'">
                    </button>
                    <!-- Autres miniatures... -->
                </div>
            </div>

            <!-- Filtres de template -->
            <div class="template-filters animate-on-scroll">
                <div class="filter-section">
                    <h4 class="filter-title">Filtrer par catégorie</h4>
                    <div class="filter-options">
                        <button class="filter-button active" data-filter="all">Tous</button>
                        <button class="filter-button" data-filter="modern">Moderne</button>
                        <button class="filter-button" data-filter="classic">Classique</button>
                        <button class="filter-button" data-filter="creative">Créatif</button>
                        <button class="filter-button" data-filter="professional">Professionnel</button>
                        <button class="filter-button" data-filter="academic">Académique</button>
                    </div>
                </div>

                <div class="filter-section">
                    <h4 class="filter-title">Filtrer par domaine</h4>
                    <div class="filter-options">
                        <button class="filter-button" data-filter="tech">Tech & IT</button>
                        <button class="filter-button" data-filter="business">Business</button>
                        <button class="filter-button" data-filter="engineering">Ingénierie</button>
                        <button class="filter-button" data-filter="academic">Académique</button>
                        <button class="filter-button" data-filter="creative">Design & Création</button>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Features Section -->
    <section class="features-outer-section py-5 my-5">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Caractéristiques Principales</h2>
                <p class="section-subtitle">Notre générateur de CV offre tout ce dont vous avez besoin pour créer un CV professionnel qui vous distingue des autres candidats</p>
            </div>

            <div class="row">
                <div class="col-lg-4 col-md-6 animate-on-scroll">
                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-paint-brush"></i>
                        </div>
                        <h3 class="feature-title">Templates Professionnels</h3>
                        <p class="feature-text">Choisissez parmi une variété de templates modernes et professionnels adaptés à différents secteurs d'activité.</p>
                        <a href="#templates" class="feature-link">
                            Explorer les templates <i class="fas fa-arrow-right"></i>
                        </a>
                    </div>
                </div>

                <div class="col-lg-4 col-md-6 animate-on-scroll">
                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-magic"></i>
                        </div>
                        <h3 class="feature-title">Interface Intuitive</h3>
                        <p class="feature-text">Notre interface conviviale vous guide pas à pas dans la création de votre CV, sans aucune compétence technique requise.</p>
                        <a href="{{ path('app_cv_generator') }}" class="feature-link">
                            Essayer maintenant <i class="fas fa-arrow-right"></i>
                        </a>
                    </div>
                </div>

                <div class="col-lg-4 col-md-6 animate-on-scroll">
                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-download"></i>
                        </div>
                        <h3 class="feature-title">Export PDF</h3>
                        <p class="feature-text">Téléchargez instantanément votre CV en format PDF de haute qualité, prêt à être envoyé aux recruteurs.</p>
                        <a href="{{ path('app_cv_generator') }}" class="feature-link">
                            Créer mon CV <i class="fas fa-arrow-right"></i>
                        </a>
                    </div>
                </div>

                <!-- Autres cartes de fonctionnalités... -->
            </div>
        </div>
    </section>

    <!-- Process Section -->
    <section class="process-section py-5 my-5 bg-light">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Comment ça fonctionne</h2>
                <p class="section-subtitle">Créez votre CV professionnel en 3 étapes simples</p>
            </div>

            <div class="row process-steps">
                <!-- Step 1 -->
                <div class="col-lg-4 animate-on-scroll">
                    <div class="process-step">
                        <div class="process-number">1</div>
                        <div class="process-icon">
                            <i class="fas fa-palette"></i>
                        </div>
                        <h3 class="process-title">Choisissez un template</h3>
                        <p class="process-description">Parcourez notre collection de templates professionnels et sélectionnez celui qui correspond le mieux à votre profil et au secteur visé.</p>
                    </div>
                </div>

                <!-- Step 2 -->
                <div class="col-lg-4 animate-on-scroll">
                    <div class="process-step">
                        <div class="process-number">2</div>
                        <div class="process-icon">
                            <i class="fas fa-edit"></i>
                        </div>
                        <h3 class="process-title">Ajoutez votre contenu</h3>
                        <p class="process-description">Complétez chaque section avec vos informations personnelles, expériences professionnelles, formations et compétences.</p>
                    </div>
                </div>

                <!-- Step 3 -->
                <div class="col-lg-4 animate-on-scroll">
                    <div class="process-step">
                        <div class="process-number">3</div>
                        <div class="process-icon">
                            <i class="fas fa-download"></i>
                        </div>
                        <h3 class="process-title">Téléchargez votre CV</h3>
                        <p class="process-description">Prévisualisez votre CV, apportez les dernières modifications si nécessaire, puis téléchargez-le en format PDF haute qualité.</p>
                    </div>
                </div>
            </div>

            <div class="text-center mt-5 animate-on-scroll">
                <a href="{{ path('app_cv_generator') }}" class="btn btn-primary btn-lg">
                    <i class="fas fa-rocket me-2"></i>Commencer maintenant
                </a>
            </div>
        </div>
    </section>

    <section id="cv-examples" class="cv-examples-section py-5">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Exemples de CV</h2>
                <p class="section-subtitle">Découvrez quelques exemples de CV créés avec notre générateur</p>
            </div>

            <div class="row justify-content-center">
                <div class="col-12">
                    <!-- Carrousel des exemples de CV -->
                    <div class="cv-examples-carousel" tabindex="0" aria-label="Exemples de CV">
                        <!-- Annonce pour lecteurs d'écran -->
                        <div class="sr-only-announcement" aria-live="polite" role="status" style="position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0, 0, 0, 0); white-space: nowrap; border: 0;"></div>

                        <!-- Navigation du carrousel -->
                        <div class="carousel-navigation">
                            <button class="carousel-btn prev-btn" aria-label="Template précédent">
                                <i class="fas fa-chevron-left"></i>
                            </button>
                            <div class="carousel-indicators" role="tablist">
                                <span class="indicator active" data-index="0" role="tab" aria-selected="true" aria-label="Template Élégant" tabindex="0"></span>
                                <span class="indicator" data-index="1" role="tab" aria-selected="false" aria-label="Template Moderne" tabindex="0"></span>
                            </div>
                            <button class="carousel-btn next-btn" aria-label="Template suivant">
                                <i class="fas fa-chevron-right"></i>
                            </button>
                        </div>

                        <!-- Conteneur des CV -->
                        <div class="cv-carousel-container">
                            <!-- Slide 1 - Template Élégant -->
                            <div class="cv-slide active" aria-hidden="false">
                                <div class="template-label">Template Élégant</div>
                                <div class="cv-container">
                                    <div class="header">
                                        <img src="{{ asset('images/cvs/profile-example.jpg') }}" alt="Photo de profil" class="profile-img" onerror="this.src='{{ asset('images/placeholder-profile.jpg') }}'">
                                        <h1>Mohamed ABIDI</h1>
                                        <h2>Business Information Systems</h2>
                                        <p class="about-me">BAC + 3 en informatique de gestion, étudiant à ESPRIT SCHOOL OF BUSINESS. Spécialisé en développement web avec le stack MERN et en gestion des données. Expérience en gestion de sponsoring et administration de club.</p>
                                    </div>

                                    <div class="main-content">
                                        <div class="left-column">
                                            <div class="info">
                                                <h3 class="section-title">Contact</h3>
                                                <div class="info-item">
                                                    <p>Téléphone : +216 23 199 953</p>
                                                    <p>Email : mohamed.abidi@esprit.tn</p>
                                                    <p>Adresse : Sousse, Hammamet Sud / Tozeur, Nefta</p>
                                                </div>
                                            </div>

                                            <div class="languages">
                                                <h3 class="section-title">Langues</h3>
                                                <div class="language-item">
                                                    <p>Français (B2 selon Rosetta Stone)</p>
                                                    <p>Anglais (B2 selon Rosetta Stone)</p>
                                                    <p>Arabe (Natif)</p>
                                                </div>
                                            </div>

                                            <div class="interests">
                                                <h3 class="section-title">Intérêts</h3>
                                                <div class="interest-item">
                                                    <p>Développement web</p>
                                                    <p>Programmation JavaScript</p>
                                                    <p>Big Data</p>
                                                </div>
                                            </div>

                                            <div class="competences">
                                                <h3 class="section-title">Compétences</h3>

                                                <div class="skills">
                                                    <div class="skill-category">
                                                        <h4>Techniques</h4>
                                                        <ul class="skill-list">
                                                            <li>MERN Stack</li>
                                                            <li>JavaScript</li>
                                                            <li>Gestion des données</li>
                                                        </ul>
                                                    </div>

                                                    <div class="skill-category">
                                                        <h4>Professionnelles</h4>
                                                        <ul class="skill-list">
                                                            <li>Gestion</li>
                                                            <li>Économie</li>
                                                            <li>Administration</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="right-column">
                                            <div class="experiences">
                                                <h3 class="section-title">Expériences Professionnelles</h3>

                                                <div class="experience">
                                                    <div class="experience-title">Responsable Sponsoring <span class="experience-company">- TUNIVISIONS ESPRIT</span></div>
                                                    <div class="experience-date">2022 - Présent</div>
                                                    <div class="experience-description">
                                                        <ul>
                                                            <li>Gestion du secteur du club Tunivisions Esprit, avec responsabilité de la recherche et négociation des partenariats</li>
                                                            <li>Membre du conseil d'administration du club Tunivisions Esprit, participant aux décisions stratégiques et à la gouvernance</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="education">
                                                <h3 class="section-title">Formations</h3>

                                                <div class="education-item">
                                                    <div class="education-title">Licence en Business Computing <span class="education-institution">- ESPRIT SCHOOL OF BUSINESS</span></div>
                                                    <div class="education-date">2021 - Présent</div>
                                                    <div class="education-description">
                                                        <p>Parcours en Business Information Systems (BIS), spécialisation en développement web et gestion des données.</p>
                                                    </div>
                                                </div>

                                                <div class="education-item">
                                                    <div class="education-title">Baccalauréat Sciences <span class="education-institution">- Lycée BECHIR KHRAYEF NEFTA</span></div>
                                                    <div class="education-date">2020</div>
                                                    <div class="education-description">
                                                        <p>Formation scientifique générale ayant permis l'admission à ESPRIT SCHOOL OF BUSINESS.</p>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="skills-section">
                                                <h3 class="section-title">Compétences spécifiques</h3>
                                                <p>Maîtrise des techniques actualisées en développement web avec le stack MERN (MongoDB, Express, React, Node.js). Développeur amateur en JavaScript avec connaissances approfondies dans le domaine de la gestion des données et du Big Data. Compétences en gestion de projet et en économie.</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Slide 2 - Template Moderne -->
                            <div class="cv-slide" aria-hidden="true">
                                <div class="template-label">Template Moderne</div>
                                <div class="cv-container">
                                    <div class="header">
                                        <img src="{{ asset('images/cvs/profile-example.jpg') }}" alt="Photo de profil" class="profile-img" onerror="this.src='{{ asset('images/placeholder-profile.jpg') }}'">
                                        <div class="name-title">
                                            <h1>Mohamed ABIDI</h1>
                                            <h2>3ème année BIS (Business Information Systems)</h2>
                                            <p>BAC + 3 en informatique de gestion, actuellement étudiant à ESPRIT SCHOOL OF BUSINESS, spécialisé en développement web et gestion des données. Passionné par l'innovation technologique et les solutions numériques pour les entreprises.</p>
                                        </div>
                                    </div>

                                    <div class="main-content">
                                        <div class="left-column">
                                            <div class="info">
                                                <h3 class="section-title">Informations</h3>
                                                <div class="info-item">
                                                    <p><strong>Téléphone :</strong> +216 23 199 953</p>
                                                    <p><strong>Email :</strong> mohamed.abidi@esprit.tn</p>
                                                    <p><strong>Adresse :</strong> Sousse, Hammamet Sud / Tozeur, Nefta</p>
                                                    <p><strong>LinkedIn :</strong> linkedin.com/in/mohamedabidi</p>
                                                    <p><strong>GitHub :</strong> github.com/mohamed-abidi</p>
                                                </div>
                                            </div>

                                            <div class="languages">
                                                <h3 class="section-title">Langues</h3>
                                                <div class="language-item">
                                                    <p>Français (B2 selon Rosetta Stone)</p>
                                                    <p>Anglais (B2 selon Rosetta Stone)</p>
                                                    <p>Arabe (Natif)</p>
                                                </div>
                                            </div>

                                            <div class="interests">
                                                <h3 class="section-title">Intérêts</h3>
                                                <div class="interest-item">
                                                    <p>Développement web</p>
                                                    <p>Gestion des données</p>
                                                    <p>Programmation JavaScript</p>
                                                    <p>Intelligence artificielle</p>
                                                    <p>Big Data & Analytics</p>
                                                </div>
                                            </div>

                                            <div class="certifications">
                                                <h3 class="section-title">Certifications</h3>
                                                <div class="certification-item">
                                                    <div class="certification-title">Rosetta Stone - Anglais B2</div>
                                                    <div class="certification-date">2023</div>
                                                </div>
                                                <div class="certification-item">
                                                    <div class="certification-title">Rosetta Stone - Français B2</div>
                                                    <div class="certification-date">2023</div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="right-column">
                                            <div class="objective">
                                                <h3 class="section-title">Objectif Professionnel</h3>
                                                <p>Étudiant motivé en informatique de gestion cherchant à mettre en pratique mes compétences en développement web et gestion des données dans un environnement professionnel innovant. Je souhaite contribuer à des projets qui combinent technologie et solutions d'affaires pour répondre aux défis des entreprises modernes.</p>
                                            </div>

                                            <div class="experiences">
                                                <h3 class="section-title">Expériences Professionnelles</h3>

                                                <div class="experience">
                                                    <div class="experience-title">Responsable Sponsoring - TUNIVISIONS ESPRIT</div>
                                                    <div class="experience-date">2022 - Présent</div>
                                                    <div class="experience-description">
                                                        <ul>
                                                            <li>Gestion du secteur du club Tunivisions Esprit, coordination de l'équipe sponsoring</li>
                                                            <li>Membre du conseil d'administration du club Tunivisions Esprit</li>
                                                            <li>Élaboration et mise en œuvre de stratégies pour attirer des sponsors</li>
                                                            <li>Négociation de partenariats et suivi des relations avec les sponsors</li>
                                                        </ul>
                                                    </div>
                                                </div>

                                                <div class="experience">
                                                    <div class="experience-title">Développeur Web Junior - Projet académique</div>
                                                    <div class="experience-date">2023</div>
                                                    <div class="experience-description">
                                                        <ul>
                                                            <li>Développement d'applications web avec la stack MERN</li>
                                                            <li>Conception et implémentation de bases de données</li>
                                                            <li>Collaboration en équipe sur des projets de développement</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="education">
                                                <h3 class="section-title">Formations</h3>

                                                <div class="education-item">
                                                    <div class="education-title">LICENCE EN BUSINESS COMPUTING - ESPRIT SCHOOL OF BUSINESS</div>
                                                    <div class="education-date">2021 - Présent</div>
                                                    <div class="education-description">
                                                        <p>Parcours en Business Information Systems (BIS). Formation couvrant les aspects techniques et managériaux des systèmes d'information dans l'entreprise.</p>
                                                    </div>
                                                </div>

                                                <div class="education-item">
                                                    <div class="education-title">BAC SCIENCES - Lycée BECHIR KHRAYEF NEFTA</div>
                                                    <div class="education-date">2020</div>
                                                    <div class="education-description">
                                                        <p>Formation scientifique générale ayant permis l'admission à ESPRIT SCHOOL OF BUSINESS.</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="text-center mt-4">
                        <a href="{{ path('app_cv_generator') }}" class="btn btn-primary btn-lg">
                            <i class="fas fa-file-alt me-2"></i>Créer mon CV avec ce style
                        </a>
                        <a href="{{ path('app_cv_builder') }}" class="btn btn-success btn-lg">
                            <i class="fas fa-tools me-2"></i>Construire mon CV personnalisé
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Testimonials Section Améliorée -->
    <section class="testimonials-section py-5 bg-light">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Témoignages</h2>
                <p class="section-subtitle">Découvrez ce que nos utilisateurs disent de notre générateur de CV</p>
            </div>

            <div class="testimonials-grid">
                <!-- Témoignage 1 -->
                <div class="testimonial-card animate-on-scroll">
                    <div class="testimonial-quote">"</div>
                    <p class="testimonial-content">J'ai obtenu trois entretiens en une semaine après avoir refait mon CV avec cet outil. L'interface est intuitive et les templates sont vraiment professionnels. Je le recommande vivement!</p>
                    <div class="testimonial-user">
                        <img src="{{ asset('images/avatar-1.jpg') }}" alt="Sophia Laroui" class="testimonial-avatar" onerror="this.src='https://ui-avatars.com/api/?name=Sofia+L&background=random'">
                        <div class="testimonial-info">
                            <h4 class="testimonial-name">Sophia Laroui</h4>
                            <p class="testimonial-position">Ingénieure Logiciel</p>
                            <div class="testimonial-rating">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Témoignage 2 (Arabe tunisien) -->
                <div class="testimonial-card animate-on-scroll">
                    <div class="testimonial-quote">"</div>
                    <p class="testimonial-content" dir="rtl" lang="ar-TN">برشا فرحان بالخدمة متاع الموقع هذا. عملتلي سيفي محترم ومهني وفي ظرف نهار واحد لقيت شكون يتصل بيا للانترفيو. الموقع سهل وتعاونوني على باهي.</p>
                    <div class="testimonial-user">
                        <img src="{{ asset('images/avatar-2.jpg') }}" alt="Yassine Marzougui" class="testimonial-avatar" onerror="this.src='https://ui-avatars.com/api/?name=Yassine+M&background=random'">
                        <div class="testimonial-info">
                            <h4 class="testimonial-name">ياسين المرزوقي</h4>
                            <p class="testimonial-position">مطور برمجيات</p>
                            <div class="testimonial-rating">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star-half-alt"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Témoignage 3 -->
                <div class="testimonial-card animate-on-scroll">
                    <div class="testimonial-quote">"</div>
                    <p class="testimonial-content">En tant que recruteur, je trouve que les CV générés par cet outil se démarquent vraiment. Ils sont clairs, bien structurés et mettent en valeur les compétences essentielles.</p>
                    <div class="testimonial-user">
                        <img src="{{ asset('images/avatar-3.jpg') }}" alt="Ahmed Ben Salem" class="testimonial-avatar" onerror="this.src='https://ui-avatars.com/api/?name=Ahmed+B&background=random'">
                        <div class="testimonial-info">
                            <h4 class="testimonial-name">Ahmed Ben Salem</h4>
                            <p class="testimonial-position">Responsable Recrutement</p>
                            <div class="testimonial-rating">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star-half-alt"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Témoignage 4 (Arabe tunisien) -->
                <div class="testimonial-card animate-on-scroll">
                    <div class="testimonial-quote">"</div>
                    <p class="testimonial-content" dir="rtl" lang="ar-TN">كنت نحوس على خدمة من عام و بعد ما عملت سيفي في الموقع هذا لقيت خدمة في شهر. التمبلايتس عندهم شكلهم حلو و محترم و السيستام سهل.</p>
                    <div class="testimonial-user">
                        <img src="{{ asset('images/avatar-4.jpg') }}" alt="Sarra Tounsi" class="testimonial-avatar" onerror="this.src='https://ui-avatars.com/api/?name=Sarra+T&background=random'">
                        <div class="testimonial-info">
                            <h4 class="testimonial-name">سارة التونسي</h4>
                            <p class="testimonial-position">محللة بيانات</p>
                            <div class="testimonial-rating">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Témoignage 5 -->
                <div class="testimonial-card animate-on-scroll">
                    <div class="testimonial-quote">"</div>
                    <p class="testimonial-content">Pour ma première recherche d'emploi, j'étais perdu concernant la création d'un CV. Ce générateur m'a guidé pas à pas et m'a permis d'obtenir un stage dans une entreprise internationale.</p>
                    <div class="testimonial-user">
                        <img src="{{ asset('images/avatar-5.jpg') }}" alt="Yassine Trabelsi" class="testimonial-avatar" onerror="this.src='https://ui-avatars.com/api/?name=Yassine+T&background=random'">
                        <div class="testimonial-info">
                            <h4 class="testimonial-name">Yassine Trabelsi</h4>
                            <p class="testimonial-position">Étudiant en Master</p>
                            <div class="testimonial-rating">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Témoignage 7 -->
                <div class="testimonial-card animate-on-scroll">
                    <div class="testimonial-quote">"</div>
                    <p class="testimonial-content">Après 10 ans dans la même entreprise, j'avais besoin de rafraîchir mon CV. Cet outil m'a aidé à réorganiser mon expérience et à mettre en valeur mes compétences. J'ai décroché un nouveau poste en un mois!</p>
                    <div class="testimonial-user">
                        <img src="{{ asset('images/avatar-7.jpg') }}" alt="Lina Mansouri" class="testimonial-avatar" onerror="this.src='https://ui-avatars.com/api/?name=Lina+M&background=random'">
                        <div class="testimonial-info">
                            <h4 class="testimonial-name">Lina Mansouri</h4>
                            <p class="testimonial-position">Chef de Projet Marketing</p>
                            <div class="testimonial-rating">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- FAQ Section -->
    <section class="faq-section py-5 my-5">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Questions fréquentes</h2>
                <p class="section-subtitle">Tout ce que vous devez savoir sur notre générateur de CV</p>
                <div class="mt-4">
                    <a href="{{ path('app_cv_generator') }}" class="btn btn-primary btn-lg">
                        <i class="fas fa-tools me-2"></i>Construire mon CV
                    </a>
                </div>
            </div>

            <div class="row justify-content-center">
                <div class="col-lg-8">
                    <div class="accordion faq-accordion" id="faqAccordion">
                        <!-- Question 1 -->
                        <div class="accordion-item animate-on-scroll">
                            <h3 class="accordion-header" id="faqHeading1">
                                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#faqCollapse1" aria-expanded="true" aria-controls="faqCollapse1">
                                    Est-ce que le service est gratuit?
                                </button>
                            </h3>
                            <div id="faqCollapse1" class="accordion-collapse collapse show" aria-labelledby="faqHeading1" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    <p>Oui, notre générateur de CV de base est entièrement gratuit pour les étudiants d'ESPRIT. Vous pouvez créer, modifier et exporter votre CV en PDF sans frais. Nous proposons également des fonctionnalités premium avec des templates exclusifs et des options avancées pour ceux qui souhaitent aller plus loin.</p>
                                </div>
                            </div>
                        </div>

                        <!-- Question 2 -->
                        <div class="accordion-item animate-on-scroll">
                            <h3 class="accordion-header" id="faqHeading2">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faqCollapse2" aria-expanded="false" aria-controls="faqCollapse2">
                                    Combien de templates de CV sont disponibles?
                                </button>
                            </h3>
                            <div id="faqCollapse2" class="accordion-collapse collapse" aria-labelledby="faqHeading2" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    <p>Nous proposons actuellement plusieurs templates professionnels différents, adaptés à divers secteurs d'activité et niveaux d'expérience. Chaque template est entièrement personnalisable en termes de couleurs, polices et mise en page. Nous ajoutons régulièrement de nouveaux designs pour vous offrir toujours plus d'options.</p>
                                </div>
                            </div>
                        </div>

                        <!-- Question 3 -->
                        <div class="accordion-item animate-on-scroll">
                            <h3 class="accordion-header" id="faqHeading3">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faqCollapse3" aria-expanded="false" aria-controls="faqCollapse3">
                                    Puis-je modifier mon CV après l'avoir créé?
                                </button>
                            </h3>
                            <div id="faqCollapse3" class="accordion-collapse collapse" aria-labelledby="faqHeading3" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    <p>Absolument! Vous pouvez modifier votre CV autant de fois que vous le souhaitez. Toutes vos informations sont sauvegardées dans votre compte, ce qui vous permet de revenir facilement pour effectuer des mises à jour ou même changer complètement de template sans avoir à ressaisir toutes vos données.</p>
                                </div>
                            </div>
                        </div>

                        <!-- Question 4 -->
                        <div class="accordion-item animate-on-scroll">
                            <h3 class="accordion-header" id="faqHeading4">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faqCollapse4" aria-expanded="false" aria-controls="faqCollapse4">
                                    Les CV créés sont-ils optimisés pour les ATS?
                                </button>
                            </h3>
                            <div id="faqCollapse4" class="accordion-collapse collapse" aria-labelledby="faqHeading4" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    <p>Oui, tous nos templates sont conçus pour être compatibles avec les systèmes de suivi des candidatures (ATS) utilisés par les recruteurs. Cela signifie que votre CV sera correctement analysé par ces systèmes, augmentant vos chances d'être sélectionné pour un entretien. Notre système intègre également des recommandations pour optimiser le contenu de votre CV en fonction des critères ATS.</p>
                                </div>
                            </div>
                        </div>

                        <!-- Question 5 -->
                        <div class="accordion-item animate-on-scroll">
                            <h3 class="accordion-header" id="faqHeading5">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faqCollapse5" aria-expanded="false" aria-controls="faqCollapse5">
                                    Comment puis-je obtenir de l'aide si j'en ai besoin?
                                </button>
                            </h3>
                            <div id="faqCollapse5" class="accordion-collapse collapse" aria-labelledby="faqHeading5" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    <p>Nous offrons plusieurs options d'assistance: vous trouverez des guides détaillés dans notre centre d'aide, des conseils intégrés à chaque étape de la création de votre CV, et notre équipe de support est disponible par email ou chat en direct du lundi au vendredi, de 9h à 18h. Pour les étudiants d'ESPRIT, des sessions d'aide personnalisée sont également organisées régulièrement sur le campus.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="text-center mt-5 animate-on-scroll">
                <a href="#" class="btn btn-outline-primary">Voir toutes les questions <i class="fas fa-arrow-right ms-2"></i></a>
            </div>
        </div>
    </section>

    <!-- Statistics Section -->
    <section class="statistics-section py-5 my-5">
        <div class="container">
            <div class="section-heading animate-on-scroll">
                <h2 class="section-title">Notre Impact</h2>
                <h3 class="section-title">(تشجيع)  </h3>

                <p class="section-subtitle">Des résultats concrets qui démontrent l'efficacité de notre générateur de CV</p>
            </div>

            <div class="statistics-container">
                <div class="row text-center">
                    <div class="col-md-3 col-6 mb-4 mb-md-0 animate-on-scroll">
                        <div class="statistic-card">
                            <div class="statistic-icon">
                                <i class="fas fa-users"></i>
                            </div>
                            <div class="statistic-number" data-count="25000">0</div>
                            <div class="statistic-label">Utilisateurs actifs</div>
                        </div>
                    </div>

                    <div class="col-md-3 col-6 mb-4 mb-md-0 animate-on-scroll">
                        <div class="statistic-card">
                            <div class="statistic-icon">
                                <i class="fas fa-file-alt"></i>
                            </div>
                            <div class="statistic-number" data-count="120000">0</div>
                            <div class="statistic-label">CV générés</div>
                        </div>
                    </div>

                    <div class="col-md-3 col-6 animate-on-scroll">
                        <div class="statistic-card">
                            <div class="statistic-icon">
                                <i class="fas fa-building"></i>
                            </div>
                            <div class="statistic-number" data-count="500">0</div>
                            <div class="statistic-label">Entreprises partenaires</div>
                        </div>
                    </div>

                    <div class="col-md-3 col-6 animate-on-scroll">
                        <div class="statistic-card">
                            <div class="statistic-icon">
                                <i class="fas fa-trophy"></i>
                            </div>
                            <div class="statistic-number" data-count="85">0</div>
                            <div class="statistic-label">Taux de réussite (%)</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Infinite Logo Carousel Section -->
    <section class="logo-marquee-section py-4">
        <div class="container">
            <div class="logo-marquee-title text-center mb-3 animate-on-scroll">
                <p>ESPRIT CV Generator sera utilisé INCHALLAH par les étudiants de</p>
            </div>
        </div>

        <div class="logo-marquee-container">
            <div class="logo-track">
                <!-- Premier groupe de logos -->
                <div class="logo-item">
                    <img src="{{ asset('images/tunisie-removebg-preview.png') }}" alt="Tunisie" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/logo.png') }}" alt="ESPRIT Logo" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/espritprepa-removebg-preview.png') }}" alt="ESPRIT Prepa" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/espritesb.png') }}" alt="ESPRIT ESB" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/esprit-removebg-preview.png') }}" alt="ESPRIT" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/esprim.png') }}" alt="ESPRIM" class="logo-item-img">
                </div>

                <!-- Deuxième groupe de logos (dupliqués pour effet continu) -->
                <div class="logo-item">
                    <img src="{{ asset('images/tunisie-removebg-preview.png') }}" alt="Tunisie" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/logo.png') }}" alt="ESPRIT Logo" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/espritprepa-removebg-preview.png') }}" alt="ESPRIT Prepa" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/espritesb.png') }}" alt="ESPRIT ESB" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/esprit-removebg-preview.png') }}" alt="ESPRIT" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/esprim.png') }}" alt="ESPRIM" class="logo-item-img">
                </div>

                <!-- Troisième groupe de logos (dupliqués pour effet continu) -->
                <div class="logo-item">
                    <img src="{{ asset('images/tunisie-removebg-preview.png') }}" alt="Tunisie" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/logo.png') }}" alt="ESPRIT Logo" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/espritprepa-removebg-preview.png') }}" alt="ESPRIT Prepa" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/espritesb.png') }}" alt="ESPRIT ESB" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/esprit-removebg-preview.png') }}" alt="ESPRIT" class="logo-item-img">
                </div>
                <div class="logo-item">
                    <img src="{{ asset('images/esprim.png') }}" alt="ESPRIM" class="logo-item-img">
                </div>
            </div>
        </div>
    </section>

    <!-- CTA Section -->
    <section class="cta-section">
        <div class="cta-shape-1"></div>
        <div class="cta-shape-2"></div>

        <div class="container">
            <div class="cta-content">
                <h2 class="cta-title">Prêt à créer un CV qui impressionne?</h2>
                <p class="cta-text">Rejoignez des milliers d'utilisateurs satisfaits et commencez à générer votre CV professionnel dès aujourd'hui. Notre outil simple et intuitif vous guide à chaque étape.</p>
                <a href="{{ path('app_cv_generator') }}" class="cta-button">
                </a>

                <!-- Social Media Icons -->
            </div>

        </div>
    </section>

    <!-- Current Date and User Info -->

        <div id="latex-formulas-container" class="mt-3"></div>

        <div class="social-icons-container">
        <p class="social-title">Suivez-nous sur les réseaux sociaux</p>
        <div class="social-icons">
            <a href="https://youtu.be/5FKwnZ7OFVg?si=lvX-6Wh8DjyRfuGM" target="_blank" rel="noopener noreferrer" class="social-icon" aria-label="YouTube ESPRIT">
                <i class="fab fa-youtube"></i>
            </a>
            <a href="https://www.instagram.com/esprit_ingenieur?utm_source=ig_web_button_share_sheet&igsh=ZDNlZDc0MzIxNw==" target="_blank" rel="noopener noreferrer" class="social-icon" aria-label="Instagram ESPRIT">
                <i class="fab fa-instagram"></i>
            </a>
            <a href="https://www.facebook.com/esprit.tn" target="_blank" rel="noopener noreferrer" class="social-icon" aria-label="Facebook ESPRIT">
                <i class="fab fa-facebook-f"></i>
            </a>
            <a href="https://www.linkedin.com/school/esprit_2/posts/?feedView=all" target="_blank" rel="noopener noreferrer" class="social-icon" aria-label="LinkedIn ESPRIT">
                <i class="fab fa-linkedin-in"></i>
            </a>
        </div>
    </div>


</div>
    {% include 'components/latex_button.html.twig' %}
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    {% include 'components/latex_scripts.html.twig' %}
    <script src="{{ asset('js/template_carousel.js') }}"></script>
    <script src="{{ asset('js/welcome_animations.js') }}"></script>
    <script src="{{ asset('js/cv-examples-carousel.js') }}"></script>
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.14.0/Sortable.min.js"></script>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
    <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Bouton pour ouvrir l'éditeur LaTeX
            document.getElementById('open-latex-editor').addEventListener('click', function() {
                // Ouvrir l'éditeur LaTeX dans une popup
                window.open('/latex', 'LaTeX Editor', 'width=800,height=600');
            });

            // Écouter les messages de la fenêtre popup
            window.addEventListener('message', function(event) {
                if (event.data && event.data.type === 'latex_insert') {
                    // Créer un élément pour afficher la formule
                    const formulaDiv = document.createElement('div');
                    formulaDiv.className = 'latex-formula mb-2 p-2 border rounded';
                    formulaDiv.setAttribute('data-latex', event.data.latex);
                    formulaDiv.innerHTML = '$$' + event.data.latex + '$$';

                    // Ajouter au conteneur
                    document.getElementById('latex-formulas-container').appendChild(formulaDiv);

                    // Rendre avec MathJax
                    if (window.MathJax) {
                        MathJax.typesetPromise([formulaDiv]);
                    }
                }
            });
        });
        document.addEventListener('DOMContentLoaded', function() {
            // Animation du slider d'exemples de CV
            const slides = document.querySelectorAll('.cv-example-slide');
            const dots = document.querySelectorAll('.cv-nav-dot');
            let currentSlide = 0;
            const totalSlides = slides.length;

            function showSlide(index) {
                // Masquer tous les slides
                slides.forEach(slide => {
                    slide.classList.remove('active');
                });

                // Désactiver tous les points
                dots.forEach(dot => {
                    dot.classList.remove('active');
                });

                // Activer le slide et le point correspondant
                slides[index].classList.add('active');
                dots[index].classList.add('active');

                currentSlide = index;
            }

            // Changement automatique des slides
            function nextSlide() {
                const nextIndex = (currentSlide + 1) % totalSlides;
                showSlide(nextIndex);
            }

            // Événements pour les points de navigation
            dots.forEach((dot, index) => {
                dot.addEventListener('click', function() {
                    showSlide(index);

                    // Réinitialiser le timer
                    clearInterval(slideInterval);
                    slideInterval = setInterval(nextSlide, 4000);
                });
            });

            // Démarrer le carrousel automatique
            let slideInterval = setInterval(nextSlide, 4000);

            // Pause de l'autoplay au survol
            const container = document.querySelector('.cv-example-container');
            container.addEventListener('mouseenter', function() {
                clearInterval(slideInterval);
            });

            container.addEventListener('mouseleave', function() {
                slideInterval = setInterval(nextSlide, 4000);
            });

            // Animation initiale
            showSlide(0);
        });


        document.addEventListener('DOMContentLoaded', function() {
            // Animation des éléments du héros
            setTimeout(() => {
                document.querySelector('.hero-badge').classList.add('show');
                document.querySelector('.hero-title').classList.add('show');
                document.querySelector('.hero-subtitle').classList.add('show');
                document.querySelector('.hero-stats').classList.add('show');
                document.querySelector('.hero-buttons').classList.add('show');
                document.querySelector('.hero-trust')?.classList.add('show');
                document.querySelector('.hero-image-container')?.classList.add('show');
            }, 100);
        });

        document.addEventListener('DOMContentLoaded', function() {
            // Fix pour les icônes Font Awesome
            if (typeof FontAwesome === 'undefined') {
                console.warn('Font Awesome non chargé correctement. Tentative de chargement...');
                const fontAwesomeLink = document.createElement('link');
                fontAwesomeLink.rel = 'stylesheet';
                fontAwesomeLink.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css';
                document.head.appendChild(fontAwesomeLink);
            }

            // Animation au défilement
            const animateElements = document.querySelectorAll('.animate-on-scroll');

            function checkScroll() {
                animateElements.forEach(element => {
                    const elementTop = element.getBoundingClientRect().top;
                    const windowHeight = window.innerHeight;

                    if (elementTop < windowHeight - 100) {
                        element.classList.add('show');
                    }
                });
            }

            // Exécuter une première fois pour afficher les éléments visibles immédiatement
            checkScroll();

            // Puis à chaque défilement
            window.addEventListener('scroll', checkScroll);

            // Mise à jour du compteur de carousel
            function updateCounter(index) {
                const currentElement = document.getElementById('current-template');
                if (currentElement) {
                    currentElement.textContent = (parseInt(index) + 1);
                }
            }

            // Navigation du carrousel
            const prevButton = document.getElementById('carousel-prev');
            const nextButton = document.getElementById('carousel-next');
            const carouselItems = document.querySelectorAll('.modern-carousel-item');
            const totalItems = carouselItems.length;

            let currentIndex = 0;

            if (prevButton && nextButton) {
                prevButton.addEventListener('click', function() {
                    currentIndex = (currentIndex - 1 + totalItems) % totalItems;
                    showSlide(currentIndex);
                });

                nextButton.addEventListener('click', function() {
                    currentIndex = (currentIndex + 1) % totalItems;
                    showSlide(currentIndex);
                });
            }

            function showSlide(index) {
                carouselItems.forEach((item, i) => {
                    if (i === index) {
                        item.classList.add('active');
                    } else {
                        item.classList.remove('active');
                    }
                });

                // Mettre à jour les miniatures
                const thumbnails = document.querySelectorAll('.template-thumbnail');
                thumbnails.forEach((thumb, i) => {
                    if (i === index) {
                        thumb.classList.add('active');
                        thumb.setAttribute('aria-selected', 'true');
                    } else {
                        thumb.classList.remove('active');
                        thumb.setAttribute('aria-selected', 'false');
                    }
                });

                updateCounter(index);
            }

            // Gestion des miniatures du carousel
            const thumbnails = document.querySelectorAll('.template-thumbnail');
            thumbnails.forEach((thumbnail, index) => {
                thumbnail.addEventListener('click', function() {
                    showSlide(index);
                    currentIndex = index;
                });
            });

            // Ajouter une fonction pour le preview en taille réelle
            const previewButtons = document.querySelectorAll('.btn-template-preview');
            previewButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const templateId = this.getAttribute('data-template');
                    const templateImg = document.querySelector(`.modern-carousel-item[data-template="${templateId}"] .template-preview`).src;

                    // Créer un modal pour l'aperçu
                    const modal = document.createElement('div');
                    modal.className = 'template-preview-modal';
                    modal.innerHTML = `
                        <div class="template-preview-modal-content">
                            <span class="close-preview-modal">&times;</span>
                            <h3>Aperçu en plein écran</h3>
                            <img src="${templateImg}" alt="Aperçu template" class="fullscreen-preview">
                            <div class="preview-actions">
                                <button class="btn btn-primary select-template-btn" data-template="${templateId}">
                                    <i class="fas fa-check-circle"></i> Sélectionner ce template
                                </button>
                            </div>
                        </div>
                    `;

                    document.body.appendChild(modal);

                    // Ajouter le style pour le modal
                    if (!document.getElementById('modal-style')) {
                        const style = document.createElement('style');
                        style.id = 'modal-style';
                        style.textContent = `
                            .template-preview-modal {
                                position: fixed;
                                top: 0;
                                left: 0;
                                width: 100%;
                                height: 100%;
                                background: rgba(0,0,0,0.8);
                                z-index: 1000;
                                display: flex;
                                align-items: center;
                                justify-content: center;
                                opacity: 0;
                                transition: opacity 0.3s ease;
                            }
                            .template-preview-modal.active {
                                opacity: 1;
                            }
                            .template-preview-modal-content {
                                background: white;
                                padding: 30px;
                                border-radius: 12px;
                                max-width: 90%;
                                max-height: 90%;
                                overflow: auto;
                                position: relative;
                                transform: translateY(20px);
                                transition: transform 0.3s ease;
                            }
                            .template-preview-modal.active .template-preview-modal-content {
                                transform: translateY(0);
                            }
                            .close-preview-modal {
                                position: absolute;
                                top: 15px;
                                right: 20px;
                                font-size: 24px;
                                cursor: pointer;
                                color: #555;
                            }
                            .fullscreen-preview {
                                max-width: 100%;
                                height: auto;
                                display: block;
                                margin: 20px 0;
                            }
                            .preview-actions {
                                margin-top: 20px;
                                text-align: center;
                            }
                        `;

                        document.head.appendChild(style);
                    }

                    // Animation d'ouverture
                    setTimeout(() => modal.classList.add('active'), 10);

                    // Bouton de fermeture du modal
                    modal.querySelector('.close-preview-modal').addEventListener('click', function() {
                        modal.classList.remove('active');
                        setTimeout(() => modal.remove(), 300);
                    });

                    // Event listener pour le bouton select dans le modal
                    modal.querySelector('.select-template-btn').addEventListener('click', function() {
                        const templateId = this.getAttribute('data-template');
                        selectTemplate(templateId);
                        modal.classList.remove('active');
                        setTimeout(() => modal.remove(), 300);
                    });
                });
            });

            // Fonction pour sélectionner un template
            const selectTemplateButtons = document.querySelectorAll('.select-template-btn');
            selectTemplateButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const templateId = this.getAttribute('data-template');
                    selectTemplate(templateId);
                });
            });

            function selectTemplate(templateId) {
                // Simuler la sélection (rediriger vers la page de génération de CV avec le template)
                console.log(`Template ${templateId} sélectionné`);
                showFeedback(`Template ${templateId} sélectionné. Redirection en cours...`, 'success');

                // Dans un cas réel, rediriger vers la page avec le template sélectionné
                setTimeout(() => {
                    window.location.href = `{{ path('app_cv_generator') }}?template=${templateId}`;
                }, 1000);
            }

            // Ajouter la fonctionnalité de filtre
            const filterButtons = document.querySelectorAll('.filter-button');
            filterButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const filter = this.getAttribute('data-filter');

                    // Mettre à jour l'affichage du bouton actif dans ce groupe
                    const parent = this.parentElement;
                    parent.querySelectorAll('.filter-button').forEach(btn => {
                        btn.classList.remove('active');
                    });
                    this.classList.add('active');

                    // Simuler un filtrage (dans une version réelle, filtrer les templates)
                    console.log(`Filtrage par ${filter}`);
                    showFeedback(`Filtrage par ${filter} - Actualisation des templates...`, 'info');
                });
            });

            // Fonction pour afficher les feedbacks/notifications
            function showFeedback(message, type = 'info') {
                const feedbackContainer = document.createElement('div');
                feedbackContainer.className = `feedback-toast feedback-${type}`;
                feedbackContainer.innerHTML = `
                    <div class="feedback-icon">
                        <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'}"></i>
                    </div>
                    <div class="feedback-content">
                        ${message}
                    </div>
                `;

                document.body.appendChild(feedbackContainer);

                // Style pour les toasts
                if (!document.getElementById('feedback-style')) {
                    const style = document.createElement('style');
                    style.id = 'feedback-style';
                    style.textContent = `
                        .feedback-toast {
                            position: fixed;
                            bottom: 30px;
                            right: 30px;
                            padding: 15px 20px;
                            border-radius: 8px;
                            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
                            display: flex;
                            align-items: center;
                            z-index: 1000;
                            opacity: 0;
                            transform: translateY(20px);
                            animation: feedback-fade-in 0.3s ease forwards, feedback-fade-out 0.3s ease forwards 3s;
                        }

                        .feedback-icon {
                            margin-right: 15px;
                            font-size: 20px;
                        }

                        .feedback-content {
                            font-size: 14px;
                        }

                        .feedback-success {
                            background-color: #d4edda;
                            color: #155724;
                            border-left: 4px solid #28a745;
                        }

                        .feedback-info {
                            background-color: #d1ecf1;
                            color: #0c5460;
                            border-left: 4px solid #17a2b8;
                        }

                        .feedback-error {
                            background-color: #f8d7da;
                            color: #721c24;
                            border-left: 4px solid #dc3545;
                        }

                        @keyframes feedback-fade-in {
                            to {
                                opacity: 1;
                                transform: translateY(0);
                            }
                        }

                        @keyframes feedback-fade-out {
                            from {
                                opacity: 1;
                                transform: translateY(0);
                            }
                            to {
                                opacity: 0;
                                transform: translateY(-20px);
                            }
                        }
                    `;

                    document.head.appendChild(style);
                }

                // Supprimer le toast après animation
                setTimeout(() => {
                    feedbackContainer.remove();
                }, 3300);
            }

            // Animation des statistiques
            function animateStatistics() {
                const statNumbers = document.querySelectorAll('.statistic-number');

                statNumbers.forEach(stat => {
                    const targetValue = parseInt(stat.getAttribute('data-count'));
                    const duration = 2000; // 2 secondes
                    const stepTime = 50; // 50ms par étape
                    const steps = duration / stepTime;
                    const increment = targetValue / steps;
                    let currentValue = 0;

                    const counter = setInterval(() => {
                        currentValue += increment;
                        if (currentValue >= targetValue) {
                            stat.textContent = targetValue.toLocaleString();
                            clearInterval(counter);
                        } else {
                            stat.textContent = Math.floor(currentValue).toLocaleString();
                        }
                    }, stepTime);
                });
            }

            // Observer pour déclencher l'animation des statistiques lorsqu'elles sont visibles
            const statisticsSection = document.querySelector('.statistics-section');
            if (statisticsSection) {
                const observer = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            animateStatistics();
                            observer.unobserve(entry.target);
                        }
                    });
                }, { threshold: 0.2 });

                observer.observe(statisticsSection);
            }

            // Mise à jour de la date et de l'heure actuelles
            const currentDate = document.querySelector('.text-center.mt-4.mb-4 div:first-child');
            if (currentDate) {
                currentDate.textContent = 'Date et heure actuelles (UTC): 2025-04-29 13:05:09';
            }

            // Mise à jour du nom d'utilisateur connecté
            const currentUser = document.querySelector('.text-center.mt-4.mb-4 div:last-child');
            if (currentUser) {
                currentUser.textContent = 'Utilisateur connecté: Mohamed-abidi-95';
            }
        });
    </script>
{% endblock %}
==================================================

Fichier: Templates\partials\template_carousel.html.twig
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\partials\template_carousel.html.twig
-----
<div class="carousel-wrapper" id="template-carousel">
    <!-- Template 1 - Moderne/Professionnel -->
    <div class="carousel-item active" data-carousel-item="0" data-template="template1">
        <div class="template-slide">
            <img src="{{ asset('images/cvs/1.png') }}" alt="Template Tech Expert" class="template-preview">
            <div class="template-details">
                <h3>Tech Expert</h3>
                <p>Un design moderne parfait pour les profils d'ingénierie et tech</p>
                <div class="template-tags">
                    <span class="tag tag-modern">Moderne</span>
                    <span class="tag tag-professional">Professionnel</span>
                    <span class="tag tag-engineering">Ingénierie</span>
                </div>
                <button class="btn btn-primary select-template-btn" data-template="template1" data-template-track="tech_expert">
                    Sélectionner ce template
                </button>
            </div>
        </div>
    </div>

    <!-- Template 2 - Classique/Professionnel -->
    <div class="carousel-item" data-carousel-item="1" data-template="template2">
        <div class="template-slide">
            <img src="{{ asset('images/cvs/2.png') }}" alt="Template Executive" class="template-preview">
            <div class="template-details">
                <h3>Executive</h3>
                <p>Design classique et élégant parfait pour les profils business et management</p>
                <div class="template-tags">
                    <span class="tag tag-classic">Classique</span>
                    <span class="tag tag-professional">Professionnel</span>
                    <span class="tag tag-business">Business</span>
                </div>
                <button class="btn btn-primary select-template-btn" data-template="template2" data-template-track="executive">
                    Sélectionner ce template
                </button>
            </div>
        </div>
    </div>

    <!-- Template 3 - Créatif -->
    <div class="carousel-item" data-carousel-item="2" data-template="template3">
        <div class="template-slide">
            <img src="{{ asset('images/cvs/3.png') }}" alt="Template Innovation" class="template-preview">
            <div class="template-details">
                <h3>Innovation</h3>
                <p>Un design créatif et moderne pour se démarquer</p>
                <div class="template-tags">
                    <span class="tag tag-creative">Créatif</span>
                    <span class="tag tag-modern">Moderne</span>
                </div>
                <button class="btn btn-primary select-template-btn" data-template="template3" data-template-track="innovation">
                    Sélectionner ce template
                </button>
            </div>
        </div>
    </div>

    <!-- Template 4 - Académique -->
    <div class="carousel-item" data-carousel-item="3" data-template="template4">
        <div class="template-slide">
            <img src="{{ asset('images/cvs/4.png') }}" alt="Template Académique" class="template-preview">
            <div class="template-details">
                <h3>Academic Plus</h3>
                <p>Idéal pour les profils académiques et recherche</p>
                <div class="template-tags">
                    <span class="tag tag-classic">Classique</span>
                    <span class="tag tag-academic">Académique</span>
                </div>
                <button class="btn btn-primary select-template-btn" data-template="template4" data-template-track="academic_plus">
                    Sélectionner ce template
                </button>
            </div>
        </div>
    </div>

    <!-- Template 5 - Ingénierie Moderne -->
    <div class="carousel-item" data-carousel-item="4" data-template="template5">
        <div class="template-slide">
            <img src="{{ asset('images/cvs/5.png') }}" alt="Template Ingénierie" class="template-preview">
            <div class="template-details">
                <h3>Tech Engineering</h3>
                <p>Spécialement conçu pour les ingénieurs et techniciens</p>
                <div class="template-tags">
                    <span class="tag tag-modern">Moderne</span>
                    <span class="tag tag-engineering">Ingénierie</span>
                </div>
                <button class="btn btn-primary select-template-btn" data-template="template5" data-template-track="tech_engineering">
                    Sélectionner ce template
                </button>
            </div>
        </div>
    </div>

    <!-- Template 6 - Business Moderne -->
    <div class="carousel-item" data-carousel-item="5" data-template="template6">
        <div class="template-slide">
            <img src="{{ asset('images/cvs/6.png') }}" alt="Template Business" class="template-preview">
            <div class="template-details">
                <h3>Business Pro</h3>
                <p>Pour les profils professionnels orientés business</p>
                <div class="template-tags">
                    <span class="tag tag-modern">Moderne</span>
                    <span class="tag tag-business">Business</span>
                    <span class="tag tag-professional">Professionnel</span>
                </div>
                <button class="btn btn-primary select-template-btn" data-template="template6" data-template-track="business_pro">
                    Sélectionner ce template
                </button>
            </div>
        </div>
    </div>

    <!-- Template 7 - Classique Élégant -->
    <div class="carousel-item" data-carousel-item="6" data-template="template7">
        <div class="template-slide">
            <img src="{{ asset('images/cvs/7.png') }}" alt="Template Classique Élégant" class="template-preview">
            <div class="template-details">
                <h3>Classic Elite</h3>
                <p>Élégant et intemporel pour une impression durable</p>
                <div class="template-tags">
                    <span class="tag tag-classic">Classique</span>
                    <span class="tag tag-professional">Professionnel</span>
                </div>
                <button class="btn btn-primary select-template-btn" data-template="template7" data-template-track="classic_elite">
                    Sélectionner ce template
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Carousel controls -->
<button class="carousel-control prev" id="carousel-prev" aria-label="Template précédent">
    <i class="fas fa-chevron-left"></i>
</button>
<button class="carousel-control next" id="carousel-next" aria-label="Template suivant">
    <i class="fas fa-chevron-right"></i>
</button>

<!-- Carousel indicators -->
<div class="carousel-indicators" role="tablist">
    <button class="carousel-indicator active" data-carousel-goto="0" aria-label="Template 1" aria-controls="template-carousel" role="tab" aria-selected="true"></button>
    <button class="carousel-indicator" data-carousel-goto="1" aria-label="Template 2" aria-controls="template-carousel" role="tab" aria-selected="false"></button>
    <button class="carousel-indicator" data-carousel-goto="2" aria-label="Template 3" aria-controls="template-carousel" role="tab" aria-selected="false"></button>
    <button class="carousel-indicator" data-carousel-goto="3" aria-label="Template 4" aria-controls="template-carousel" role="tab" aria-selected="false"></button>
    <button class="carousel-indicator" data-carousel-goto="4" aria-label="Template 5" aria-controls="template-carousel" role="tab" aria-selected="false"></button>
    <button class="carousel-indicator" data-carousel-goto="5" aria-label="Template 6" aria-controls="template-carousel" role="tab" aria-selected="false"></button>
    <button class="carousel-indicator" data-carousel-goto="6" aria-label="Template 7" aria-controls="template-carousel" role="tab" aria-selected="false"></button>
</div>
==================================================

Fichier: Templates\registration\confirmation_email.html.twig
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\registration\confirmation_email.html.twig
-----
<h1>Confirmez votre adresse email!</h1>

<p>
    Bonjour {{ user.firstName }},
</p>

<p>
    Merci de vous être inscrit sur ESPRIT CV Generator. Veuillez confirmer votre adresse email en cliquant sur le lien ci-dessous :
</p>

<p>
    <a href="{{ url('app_verify_email') }}">Confirmer mon email</a>
</p>

<p>
    Ce lien expire dans 24 heures.
</p>

<p>
    Cordialement,<br>
    L'équipe ESPRIT CV Generator
</p>

<hr>

<p>
    <small>Date: {{ current_time|date('Y-m-d H:i:s') }} | {{ username }}</small>
</p>
==================================================

Fichier: Templates\test\template_tracker.html.twig
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\test\template_tracker.html.twig
-----
{% extends 'base.html.twig' %}

{% block title %}Template Tracker Test{% endblock %}

{% block body %}
    <div class="container py-5">
        <h1>Template Tracker Test</h1>

        <div class="card my-4">
            <div class="card-body">
                <h5 class="card-title">Test Template Selection</h5>

                <div class="mb-3">
                    <label for="templateName" class="form-label">Template Name</label>
                    <input type="text" class="form-control" id="templateName" value="tech_expert">
                </div>

                <button id="trackBtn" class="btn btn-primary" data-template-track="">Test Tracking</button>

                <div class="mt-3">
                    <h6>Response:</h6>
                    <pre id="response" class="bg-light p-3"></pre>
                </div>
            </div>
        </div>

        <div class="card mt-4">
            <div class="card-body">
                <h5 class="card-title">View Template Stats</h5>
                <button id="statsBtn" class="btn btn-info">Get Template Stats</button>

                <div class="mt-3">
                    <h6>Statistics:</h6>
                    <pre id="stats" class="bg-light p-3"></pre>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.getElementById('trackBtn').addEventListener('click', function() {
            const templateName = document.getElementById('templateName').value;
            const responseEl = document.getElementById('response');

            this.setAttribute('data-template-track', templateName);
            responseEl.textContent = 'Sending request...';

            fetch('/api/track-template', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ template: templateName })
            })
                .then(response => response.json())
                .then(data => {
                    responseEl.textContent = JSON.stringify(data, null, 2);
                })
                .catch(error => {
                    responseEl.textContent = 'Error: ' + error.message;
                });
        });

        document.getElementById('statsBtn').addEventListener('click', function() {
            const statsEl = document.getElementById('stats');
            statsEl.textContent = 'Fetching stats...';

            fetch('/api/template-stats')
                .then(response => response.json())
                .then(data => {
                    statsEl.textContent = JSON.stringify(data, null, 2);
                })
                .catch(error => {
                    statsEl.textContent = 'Error: ' + error.message;
                });
        });
    </script>
{% endblock %}
==================================================

Fichier: Templates\template_analytics\index.html.twig
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\template_analytics\index.html.twig
-----
{% extends 'base.html.twig' %}

{% block title %}Template Analytics Dashboard{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .chart-container {
            position: relative;
            margin: auto;
            height: 300px;
            width: 100%;
        }
        .stats-card {
            background: white;
            border-radius: 0.5rem;
            box-shadow: 0 1px 3px rgba(0,0,0,0.12);
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }
        .stats-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
        }
        .stats-title {
            font-size: 1.25rem;
            font-weight: 600;
        }
        .template-stat-row {
            display: flex;
            justify-content: space-between;
            padding: 0.75rem 0;
            border-bottom: 1px solid #eee;
        }
        .template-name {
            font-weight: 500;
        }
        .template-count {
            font-weight: 600;
        }
        .day-selector {
            margin-bottom: 1.5rem;
        }
        .day-selector a {
            margin-right: 1rem;
            padding: 0.5rem 1rem;
            border-radius: 0.25rem;
            background: #f3f4f6;
            color: #374151;
            text-decoration: none;
        }
        .day-selector a.active {
            background: #4F46E5;
            color: white;
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Chart data from controller
            const chartData = {{ chartData|json_encode|raw }};

            // Create daily trend chart
            const ctx = document.getElementById('trendChart').getContext('2d');
            const trendChart = new Chart(ctx, {
                type: 'line',
                data: chartData,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        tooltip: {
                            mode: 'index',
                            intersect: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Number of Selections'
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Date'
                            }
                        }
                    }
                }
            });

            // Create template popularity chart
            const ctxPie = document.getElementById('popularityChart').getContext('2d');

            // Extract data for pie chart
            const labels = [];
            const data = [];
            const colors = [
                '#4F46E5', '#10B981', '#F59E0B', '#EF4444',
                '#8B5CF6', '#EC4899', '#06B6D4'
            ];

            {% for stat in templateStats %}
            labels.push('{{ stat.template_name }}');
            data.push({{ stat.count }});
            {% endfor %}

            const popularityChart = new Chart(ctxPie, {
                type: 'pie',
                data: {
                    labels: labels,
                    datasets: [{
                        data: data,
                        backgroundColor: colors
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'right'
                        }
                    }
                }
            });
        });
    </script>
{% endblock %}

{% block body %}
    <div class="container mx-auto p-4">
        <h1 class="text-2xl font-bold mb-4">Template Usage Analytics</h1>

        <div class="day-selector">
            <a href="?days=1" class="{% if days == 1 %}active{% endif %}">Today</a>
            <a href="?days=7" class="{% if days == 7 %}active{% endif %}">Last 7 days</a>
            <a href="?days=30" class="{% if days == 30 %}active{% endif %}">Last 30 days</a>
            <a href="?days=90" class="{% if days == 90 %}active{% endif %}">Last 90 days</a>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div class="stats-card">
                <div class="stats-header">
                    <span class="stats-title">Template Popularity</span>
                    <span class="text-sm text-gray-500">Last {{ days }} days</span>
                </div>
                <div class="chart-container">
                    <canvas id="popularityChart"></canvas>
                </div>
            </div>

            <div class="stats-card">
                <div class="stats-header">
                    <span class="stats-title">Most Selected Templates</span>
                    <span class="text-sm text-gray-500">Last {{ days }} days</span>
                </div>
                {% for stat in templateStats %}
                    <div class="template-stat-row">
                        <span class="template-name">{{ stat.template_name }}</span>
                        <span class="template-count">{{ stat.count }} selections</span>
                    </div>
                {% endfor %}
            </div>
        </div>

        <div class="stats-card mt-4">
            <div class="stats-header">
                <span class="stats-title">Daily Template Selection Trend</span>
                <span class="text-sm text-gray-500">Last {{ days }} days</span>
            </div>
            <div class="chart-container" style="height: 400px;">
                <canvas id="trendChart"></canvas>
            </div>
        </div>
    </div>
{% endblock %}
==================================================

Fichier: Templates\security\reset_password.html.twig
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\security\reset_password.html.twig
-----
==================================================

Fichier: Templates\security\register.html.twig
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\security\register.html.twig
-----
{% extends 'base.html.twig' %}

{% block title %}S'inscrire - ESPRIT CV Generator{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .auth-container {
            max-width: 550px;
            margin: 60px auto;
        }

        .auth-card {
            background: white;
            border-radius: 12px;
            padding: 40px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08);
        }

        .auth-logo {
            text-align: center;
            margin-bottom: 25px;
        }

        .auth-logo img {
            height: 60px;
        }

        .auth-divider {
            text-align: center;
            position: relative;
            margin: 25px 0;
        }

        .auth-divider:before {
            content: '';
            height: 1px;
            background: #e5e5e5;
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
        }

        .auth-divider span {
            background: white;
            padding: 0 15px;
            position: relative;
            color: #6c757d;
        }

        .social-login-btn {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            width: 100%;
            padding: 12px;
            border-radius: 6px;
            margin-bottom: 12px;
            transition: all 0.2s;
        }

        .social-login-btn:hover {
            transform: translateY(-2px);
        }

        .google-btn {
            background-color: #fff;
            border: 1px solid #ddd;
            color: #333;
        }

        .facebook-btn {
            background-color: #1877F2;
            border: none;
            color: white;
        }

        .form-floating {
            margin-bottom: 20px;
        }

        .password-toggle {
            position: absolute;
            right: 15px;
            top: 15px;
            cursor: pointer;
            color: #6c757d;
        }

        .register-bg {
            background: linear-gradient(135deg, rgba(255, 58, 58, 0.05) 0%, rgba(255, 58, 58, 0.1) 100%);
            min-height: calc(100vh - 150px);
        }

        .password-strength {
            height: 5px;
            border-radius: 2px;
            margin-top: 5px;
        }

        .password-strength-text {
            font-size: 12px;
            margin-top: 5px;
        }

        .weak { background-color: #f44336; }
        .medium { background-color: #ff9800; }
        .strong { background-color: #4CAF50; }
    </style>
{% endblock %}

{% block body_class %}register-bg{% endblock %}

{% block body %}
    <div class="container auth-container">
        <div class="auth-card">
            <div class="auth-logo">
                <img src="{{ asset('images/esprim.png') }}" alt="ESPRIT Logo">
            </div>
            <h2 class="text-center mb-4">Créer un compte</h2>

            <div class="social-auth-section mb-4">
                <button class="btn social-login-btn google-btn">
                    <i class="bi bi-google"></i>
                    S'inscrire avec Google
                </button>
                <button class="btn social-login-btn facebook-btn">
                    <i class="bi bi-facebook"></i>
                    S'inscrire avec Facebook
                </button>
            </div>

            <div class="auth-divider">
                <span>OU</span>
            </div>

            <form action="{{ path('app_register') }}" method="post" class="mt-4" id="registrationForm">
                {% if error is defined and error %}
                    <div class="alert alert-danger">
                        {{ error }}
                    </div>
                {% endif %}

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="text" class="form-control" id="firstName" name="firstName" placeholder="Prénom" required>
                            <label for="firstName">Prénom</label>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="text" class="form-control" id="lastName" name="lastName" placeholder="Nom" required>
                            <label for="lastName">Nom</label>
                        </div>
                    </div>
                </div>

                <div class="form-floating">
                    <input type="email" class="form-control" id="email" name="email" placeholder="nom@exemple.com" required>
                    <label for="email">Adresse email</label>
                </div>

                <div class="form-floating position-relative">
                    <input type="password" class="form-control" id="password" name="password" placeholder="Mot de passe" required>
                    <label for="password">Mot de passe</label>
                    <span class="password-toggle" id="passwordToggle">
                        <i class="bi bi-eye"></i>
                    </span>
                </div>

                <div class="password-strength w-100" id="passwordStrength"></div>
                <small class="password-strength-text text-muted" id="passwordStrengthText">Votre mot de passe doit contenir au moins 8 caractères</small>

                <div class="form-floating position-relative mt-3">
                    <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" placeholder="Confirmer le mot de passe" required>
                    <label for="confirmPassword">Confirmer le mot de passe</label>
                    <span class="password-toggle" id="confirmPasswordToggle">
                        <i class="bi bi-eye"></i>
                    </span>
                </div>

                <div class="form-check mb-4 mt-3">
                    <input class="form-check-input" type="checkbox" id="termsAgree" name="termsAgree" required>
                    <label class="form-check-label" for="termsAgree">
                        J'accepte les <a href="#" class="text-decoration-none">conditions d'utilisation</a> et la <a href="#" class="text-decoration-none">politique de confidentialité</a>
                    </label>
                </div>

                <input type="hidden" name="_csrf_token" value="{{ csrf_token('register') }}">
                <button type="submit" class="btn btn-primary w-100 py-2">S'inscrire</button>
            </form>

            <div class="text-center mt-4">
                <p>Vous avez déjà un compte? <a href="{{ path('app_login') }}" class="text-decoration-none">Se connecter</a></p>
            </div>
        </div>

        <div class="text-center mt-4 text-muted">
            <p>
                <small>© {{ 'now'|date('Y') }} ESPRIT CV Generator | {{ "2025-05-08 00:12:00" }}</small>
                <br>
                <small>{{ "Mohamed-abidi-95" }}</small>
            </p>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Password visibility toggle
            function setupPasswordToggle(inputId, toggleId) {
                const passwordField = document.getElementById(inputId);
                const passwordToggle = document.getElementById(toggleId);

                passwordToggle.addEventListener('click', function() {
                    const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
                    passwordField.setAttribute('type', type);

                    // Toggle eye icon
                    const eyeIcon = passwordToggle.querySelector('i');
                    eyeIcon.classList.toggle('bi-eye');
                    eyeIcon.classList.toggle('bi-eye-slash');
                });
            }

            setupPasswordToggle('password', 'passwordToggle');
            setupPasswordToggle('confirmPassword', 'confirmPasswordToggle');

            // Password strength meter
            const passwordInput = document.getElementById('password');
            const strengthBar = document.getElementById('passwordStrength');
            const strengthText = document.getElementById('passwordStrengthText');

            passwordInput.addEventListener('input', function() {
                const password = this.value;
                let strength = 0;

                // Length check
                if (password.length >= 8) strength += 1;

                // Contains uppercase
                if (/[A-Z]/.test(password)) strength += 1;

                // Contains lowercase
                if (/[a-z]/.test(password)) strength += 1;

                // Contains digits
                if (/[0-9]/.test(password)) strength += 1;

                // Contains special characters
                if (/[^a-zA-Z0-9]/.test(password)) strength += 1;

                // Update the strength meter
                strengthBar.className = 'password-strength';

                if (password.length === 0) {
                    strengthBar.style.width = '0%';
                    strengthText.textContent = 'Votre mot de passe doit contenir au moins 8 caractères';
                } else {
                    switch(strength) {
                        case 1:
                        case 2:
                            strengthBar.classList.add('weak');
                            strengthBar.style.width = '33%';
                            strengthText.textContent = 'Faible';
                            break;
                        case 3:
                        case 4:
                            strengthBar.classList.add('medium');
                            strengthBar.style.width = '66%';
                            strengthText.textContent = 'Moyen';
                            break;
                        case 5:
                            strengthBar.classList.add('strong');
                            strengthBar.style.width = '100%';
                            strengthText.textContent = 'Fort';
                            break;
                    }
                }
            });

            // Form validation
            const registrationForm = document.getElementById('registrationForm');
            const confirmPasswordInput = document.getElementById('confirmPassword');

            registrationForm.addEventListener('submit', function(event) {
                const password = passwordInput.value;
                const confirmPassword = confirmPasswordInput.value;

                if (password !== confirmPassword) {
                    event.preventDefault();
                    alert('Les mots de passe ne correspondent pas');
                    return false;
                }

                // You can add more validation here as needed
                return true;
            });
        });
    </script>
{% endblock %}
==================================================

Fichier: Templates\security\forgot_password.html.twig
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\security\forgot_password.html.twig
-----
{% extends 'base.html.twig' %}

{% block title %}Mot de passe oublié - ESPRIT CV Generator{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .auth-container {
            max-width: 450px;
            margin: 60px auto;
        }

        .auth-card {
            background: white;
            border-radius: 12px;
            padding: 40px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08);
        }

        .auth-logo {
            text-align: center;
            margin-bottom: 25px;
        }

        .auth-logo img {
            height: 60px;
        }

        .forgot-password-bg {
            background: linear-gradient(135deg, rgba(255, 58, 58, 0.05) 0%, rgba(255, 58, 58, 0.1) 100%);
            min-height: calc(100vh - 150px);
        }
    </style>
{% endblock %}

{% block body_class %}forgot-password-bg{% endblock %}

{% block body %}
    <div class="container auth-container">
        <div class="auth-card">
            <div class="auth-logo">
                <img src="{{ asset('images/esprim.png') }}" alt="ESPRIT Logo">
            </div>
            <h2 class="text-center mb-4">Réinitialisation du mot de passe</h2>

            <p class="text-center mb-4">Entrez votre adresse email et nous vous enverrons un lien pour réinitialiser votre mot de passe.</p>

            <form action="{{ path('app_forgot_password_request') }}" method="post" class="mt-4">
                {% if error is defined and error %}
                    <div class="alert alert-danger">
                        {{ error }}
                    </div>
                {% endif %}

                {% if success is defined and success %}
                    <div class="alert alert-success">
                        {{ success }}
                    </div>
                {% endif %}

                <div class="form-floating mb-3">
                    <input type="email" class="form-control" id="email" name="email" placeholder="nom@exemple.com" required>
                    <label for="email">Adresse email</label>
                </div>

                <input type="hidden" name="_csrf_token" value="{{ csrf_token('forgot_password') }}">
                <button type="submit" class="btn btn-primary w-100 py-2">Envoyer le lien de réinitialisation</button>
            </form>

            <div class="text-center mt-4">
                <a href="{{ path('app_login') }}" class="text-decoration-none">Retour à la connexion</a>
            </div>
        </div>

        <div class="text-center mt-4 text-muted">
            <p>
                <small>© {{ 'now'|date('Y') }} ESPRIT CV Generator | {{ "2025-05-08 00:12:00" }}</small>
                <br>
                <small>{{ "Mohamed-abidi-95" }}</small>
            </p>
        </div>
    </div>
{% endblock %}
==================================================

Fichier: Templates\security\login.html.twig
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\security\login.html.twig
-----
{% extends 'base.html.twig' %}

{% block title %}Connexion - ESPRIT CV Generator{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .auth-container {
            max-width: 450px;
            margin: 60px auto;
        }

        .auth-card {
            background: white;
            border-radius: 12px;
            padding: 40px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08);
        }

        .auth-logo {
            text-align: center;
            margin-bottom: 25px;
        }

        .auth-logo img {
            height: 60px;
        }

        .auth-divider {
            text-align: center;
            position: relative;
            margin: 25px 0;
        }

        .auth-divider:before {
            content: '';
            height: 1px;
            background: #e5e5e5;
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
        }

        .auth-divider span {
            background: white;
            padding: 0 15px;
            position: relative;
            color: #6c757d;
        }

        .social-login-btn {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            width: 100%;
            padding: 12px;
            border-radius: 6px;
            margin-bottom: 12px;
            transition: all 0.2s;
        }

        .social-login-btn:hover {
            transform: translateY(-2px);
        }

        .google-btn {
            background-color: #fff;
            border: 1px solid #ddd;
            color: #333;
        }

        .facebook-btn {
            background-color: #1877F2;
            border: none;
            color: white;
        }

        .form-floating {
            margin-bottom: 20px;
        }

        .form-check {
            margin-bottom: 15px;
        }

        .password-toggle {
            position: absolute;
            right: 15px;
            top: 15px;
            cursor: pointer;
            color: #6c757d;
        }

        .login-bg {
            background: linear-gradient(135deg, rgba(255, 58, 58, 0.05) 0%, rgba(255, 58, 58, 0.1) 100%);
            min-height: calc(100vh - 150px);
        }
    </style>
{% endblock %}

{% block body_class %}login-bg{% endblock %}

{% block body %}
    <div class="container auth-container">
        <div class="auth-card">
            <div class="auth-logo">
                <img src="{{ asset('images/esprim.png') }}" alt="ESPRIT Logo">
            </div>
            <h2 class="text-center mb-4">Connexion</h2>

            <div class="social-auth-section mb-4">
                <button class="btn social-login-btn google-btn">
                    <i class="bi bi-google"></i>
                    Se connecter avec Google
                </button>
                <button class="btn social-login-btn facebook-btn">
                    <i class="bi bi-facebook"></i>
                    Se connecter avec Facebook
                </button>
            </div>

            <div class="auth-divider">
                <span>OU</span>
            </div>

            <form action="{{ path('app_login_check') }}" method="post" class="mt-4">
                {% if error is defined and error %}
                    <div class="alert alert-danger">
                        {{ error.messageKey|trans(error.messageData, 'security') }}
                    </div>
                {% endif %}

                <div class="form-floating">
                    <input type="email" class="form-control" id="email" name="_username" placeholder="nom@exemple.com" required>
                    <label for="email">Adresse email</label>
                </div>

                <div class="form-floating position-relative">
                    <input type="password" class="form-control" id="password" name="_password" placeholder="Mot de passe" required>
                    <label for="password">Mot de passe</label>
                    <span class="password-toggle" id="passwordToggle">
                        <i class="bi bi-eye"></i>
                    </span>
                </div>

                <div class="d-flex justify-content-between mb-3">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="rememberMe" name="_remember_me">
                        <label class="form-check-label" for="rememberMe">
                            Se souvenir de moi
                        </label>
                    </div>
                    <a href="{{ path('app_forgot_password') }}" class="text-decoration-none">Mot de passe oublié?</a>
                </div>

                <input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}">
                <button type="submit" class="btn btn-primary w-100 py-2">Se connecter</button>
            </form>

            <div class="text-center mt-4">
                <p>Vous n'avez pas de compte? <a href="{{ path('app_register') }}" class="text-decoration-none">S'inscrire</a></p>
            </div>
        </div>

        <div class="text-center mt-4 text-muted">
            <p>
                <small>© {{ 'now'|date('Y') }} ESPRIT CV Generator | {{ "2025-05-08 00:12:00" }}</small>
                <br>
                <small>{{ "Mohamed-abidi-95" }}</small>
            </p>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const passwordToggle = document.getElementById('passwordToggle');
            const passwordField = document.getElementById('password');

            passwordToggle.addEventListener('click', function() {
                const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordField.setAttribute('type', type);

                // Toggle eye icon
                const eyeIcon = passwordToggle.querySelector('i');
                eyeIcon.classList.toggle('bi-eye');
                eyeIcon.classList.toggle('bi-eye-slash');
            });
        });
    </script>
{% endblock %}
==================================================

Fichier: Templates\base.html.twig
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\Templates\base.html.twig
-----
<!DOCTYPE html>
<html lang="{{ app.request.locale|default('fr') }}" dir="{{ app.request.locale in ['ar'] ? 'rtl' : 'ltr' }}">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}                  {% endblock %}</title>
    <meta name="description" content="{% block description %}Générateur de CV professionnel - ESPRIT{% endblock %}">
    <link rel="icon" href="{{ asset('favicon.ico') }}">
    {# CSRF token for template tracking API calls #}
    <meta name="csrf-token" content="{{ csrf_token('template-selection') }}">
    {# Dans votre fichier base.html.twig, section head #}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-..." crossorigin="anonymous">
    {% block stylesheets %}
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Poppins:wght@500;600;700;800&display=swap" rel="stylesheet">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
        <link rel="stylesheet" href="{{ asset('assets/styles/app.css') }}">
        <link rel="stylesheet" href="{{ asset('css/chatbot.css') }}">
    {% endblock %}
</head>
<body class="{% block body_class %}{% endblock %}">
{% block navbar %}
    {% include 'components/_navbar.html.twig' %}
{% endblock %}

<main>
    {% block body %}{% endblock %}
</main>

<footer class="bg-light py-4 mt-auto">
    <div class="container">
        <div class="row">
            <div class="col-md-6 text-center text-md-start">
                <div class="text-muted">
                    &copy; {{ 'now'|date('Y') }} ESPRIT CV Generator. Tous droits réservés.
                </div>
            </div>
            <div class="col-md-6 text-center text-md-end">
                <div class="text-muted small">
                    <span id="current-datetime"> {{ 'now'|date('Y-m-d H:i:s', 'UTC') }}</span>
                </div>
                <div class="text-muted small">
                    <span id="user-info">Mohamed-abidi-95</span>
                </div>
            </div>
        </div>
    </div>
</footer>

<div id="notification-container" class="position-fixed top-0 end-0 p-3" style="z-index: 1050;"></div>

<!-- Chatbot floating button -->
<div class="chatbot-float-button" id="chatbotButton">
    <i class="fas fa-comment-dots"></i>
    <span class="chatbot-tooltip">Besoin d'aide :) ?</span>
</div>

{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="{{ asset('assets/app.js') }}"></script>
    <script src="{{ asset('js/chatbot.js') }}"></script>
    {# Add the template tracking script #}
    <script src="{{ asset('js/template-tracker.js') }}"></script>
{% endblock %}

</body>
</html>
==================================================

Fichier: composer.json
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\composer.json
-----
{
    "type": "project",
    "license": "proprietary",
    "minimum-stability": "stable",
    "prefer-stable": true,
    "require": {
        "php": ">=8.2",
        "ext-ctype": "*",
        "ext-iconv": "*",
        "doctrine/annotations": "^2.0",
        "doctrine/dbal": "^3",
        "doctrine/doctrine-bundle": "^2.14",
        "doctrine/doctrine-migrations-bundle": "^3.4",
        "doctrine/orm": "^3.3",
        "dompdf/dompdf": "^3.1",
        "phpdocumentor/reflection-docblock": "^5.6",
        "phpstan/phpdoc-parser": "^2.1",
        "symfony/asset": "7.2.*",
        "symfony/asset-mapper": "7.2.*",
        "symfony/console": "7.2.*",
        "symfony/doctrine-messenger": "7.2.*",
        "symfony/dotenv": "7.2.*",
        "symfony/expression-language": "7.2.*",
        "symfony/flex": "^2",
        "symfony/form": "7.2.*",
        "symfony/framework-bundle": "7.2.*",
        "symfony/http-client": "7.2.*",
        "symfony/intl": "7.2.*",
        "symfony/mailer": "7.2.*",
        "symfony/mime": "7.2.*",
        "symfony/monolog-bundle": "^3.0",
        "symfony/notifier": "7.2.*",
        "symfony/process": "7.2.*",
        "symfony/property-access": "7.2.*",
        "symfony/property-info": "7.2.*",
        "symfony/runtime": "7.2.*",
        "symfony/security-bundle": "7.2.*",
        "symfony/serializer": "7.2.*",
        "symfony/stimulus-bundle": "^2.24",
        "symfony/string": "7.2.*",
        "symfony/translation": "7.2.*",
        "symfony/twig-bundle": "7.2.*",
        "symfony/ux-turbo": "^2.24",
        "symfony/validator": "7.2.*",
        "symfony/web-link": "7.2.*",
        "symfony/webpack-encore-bundle": "^2.2",
        "symfony/yaml": "7.2.*",
        "symfonycasts/verify-email-bundle": "*",
        "twig/extra-bundle": "^2.12|^3.0",
        "twig/twig": "^2.12|^3.0"
    },
    "config": {
        "allow-plugins": {
            "php-http/discovery": true,
            "symfony/flex": true,
            "symfony/runtime": true
        },
        "bump-after-update": true,
        "sort-packages": true
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Tests\\": "tests/"
        }
    },
    "replace": {
        "symfony/polyfill-ctype": "*",
        "symfony/polyfill-iconv": "*",
        "symfony/polyfill-php72": "*",
        "symfony/polyfill-php73": "*",
        "symfony/polyfill-php74": "*",
        "symfony/polyfill-php80": "*",
        "symfony/polyfill-php81": "*",
        "symfony/polyfill-php82": "*"
    },
    "scripts": {
        "auto-scripts": {
            "cache:clear": "symfony-cmd",
            "assets:install %PUBLIC_DIR%": "symfony-cmd",
            "importmap:install": "symfony-cmd"
        },
        "post-install-cmd": [
            "@auto-scripts"
        ],
        "post-update-cmd": [
            "@auto-scripts"
        ]
    },
    "conflict": {
        "symfony/symfony": "*"
    },
    "extra": {
        "symfony": {
            "allow-contrib": false,
            "require": "7.2.*"
        }
    },
    "require-dev": {
        "phpunit/phpunit": "^9.5",
        "symfony/browser-kit": "7.2.*",
        "symfony/css-selector": "7.2.*",
        "symfony/debug-bundle": "7.2.*",
        "symfony/maker-bundle": "^1.0",
        "symfony/phpunit-bridge": "^7.2",
        "symfony/stopwatch": "7.2.*",
        "symfony/web-profiler-bundle": "7.2.*"
    }
}

==================================================

Fichier: webpack.config.js
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\webpack.config.js
-----
const Encore = require('@symfony/webpack-encore');

// Manually configure the runtime environment if not already configured yet by the "encore" command.
// It's useful when you use tools that rely on webpack.config.js file.
if (!Encore.isRuntimeEnvironmentConfigured()) {
    Encore.configureRuntimeEnvironment(process.env.NODE_ENV || 'dev');
}

Encore
    // directory where compiled assets will be stored
    .setOutputPath('public/build/')
    // public path used by the web server to access the output path
    .setPublicPath('/build')
    // only needed for CDN's or subdirectory deploy
    //.setManifestKeyPrefix('build/')

    /*
     * ENTRY CONFIG
     *
     * Each entry will result in one JavaScript file (e.g. app.js)
     * and one CSS file (e.g. app.css) if your JavaScript imports CSS.
     */
    .addEntry('app', './assets/app.js')

    // When enabled, Webpack "splits" your files into smaller pieces for greater optimization.
    .splitEntryChunks()

    // will require an extra script tag for runtime.js
    // but, you probably want this, unless you're building a single-page app
    .enableSingleRuntimeChunk()

    /*
     * FEATURE CONFIG
     *
     * Enable & configure other features below. For a full
     * list of features, see:
     * https://symfony.com/doc/current/frontend.html#adding-more-features
     */
    .cleanupOutputBeforeBuild()

    // Displays build status system notifications to the user
    // .enableBuildNotifications()

    .enableSourceMaps(!Encore.isProduction())
    // enables hashed filenames (e.g. app.abc123.css)
    .enableVersioning(Encore.isProduction())
    .copyFiles({
        from: './assets/images',
        to: 'images/[path][name].[hash:8].[ext]'
    })
    // configure Babel
    // .configureBabel((config) => {
    //     config.plugins.push('@babel/a-babel-plugin');
    // })

    // enables and configure @babel/preset-env polyfills
    .configureBabelPresetEnv((config) => {
        config.useBuiltIns = 'usage';
        config.corejs = '3.38';
    })

    // enables Sass/SCSS support
    //.enableSassLoader()

    // uncomment if you use TypeScript
    //.enableTypeScriptLoader()

    // uncomment if you use React
    //.enableReactPreset()

    // uncomment to get integrity="..." attributes on your script & link tags
    // requires WebpackEncoreBundle 1.4 or higher
    //.enableIntegrityHashes(Encore.isProduction())

    // uncomment if you're having problems with a jQuery plugin
    //.autoProvidejQuery()
;

module.exports = Encore.getWebpackConfig();

==================================================

Fichier: tailwind.config.js
Chemin complet: C:\Users\Sh-Pc\PhpstormProjects\EsprimCareer\tailwind.config.js
-----
/** @type {import('tailwindcss').Config} */
module.exports = {
    content: [
        "./assets/**/*.js",
        "./templates/**/*.html.twig",
        "./node_modules/flowbite/**/*.js"
    ],
    darkMode: 'class',
    theme: {
        extend: {
            colors: {
                primary: {
                    50: '#ffe6e6',
                    100: '#ffcccc',
                    200: '#ff9999',
                    300: '#ff6666',
                    400: '#ff3333',
                    500: '#ff0000', // couleur principale d'ESPRIT
                    600: '#cc0000',
                    700: '#990000',
                    800: '#660000',
                    900: '#330000',
                },
            },
        },
    },
    plugins: [
        require('flowbite/plugin')
    ],
}
==================================================

